ОсновнаяФорма = ПолучитьОсновнуюФорму();

СоздатьРеквизитФормы(ОсновнаяФорма, "ПараметрыПодключаемыхКоманд", СоздатьОписаниеТипов("Произвольный"));

// ПриСозданииНаСервере
Метод = СоздатьПолучитьМетод(ОсновнаяФорма, "ПриСозданииНаСервере", "ОбработчикиСобытийФормы", Ложь);
Если НЕ Метод.Существует Тогда
	Метод.Содержимое.Контекст = "НаСервере";
	ДобавитьПараметрВМетод(Метод, "Отказ");
	ДобавитьПараметрВМетод(Метод, "СтандартнаяОбработка");
КонецЕсли;
ДобавитьКТелуМетода(Метод,
	"// СтандартныеПодсистемы.ПодключаемыеКоманды
	|ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	|// Конец СтандартныеПодсистемы.ПодключаемыеКоманды");
УстановитьОбработчикСобытияФормы(
	ОсновнаяФорма,
	ОбработчикиСобытийЭлементовФормы(ОсновнаяФорма).ПриСозданииНаСервере);

// ПриЧтенииНаСервере
Метод = СоздатьПолучитьМетод(ОсновнаяФорма, "ПриЧтенииНаСервере", "ОбработчикиСобытийФормы", Ложь);
Если НЕ Метод.Существует Тогда
	Метод.Содержимое.Контекст = "НаСервере";
	ДобавитьПараметрВМетод(Метод, "ТекущийОбъект");
КонецЕсли;
ДобавитьКТелуМетода(Метод,
	"// СтандартныеПодсистемы.ПодключаемыеКоманды
	|ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	|// Конец СтандартныеПодсистемы.ПодключаемыеКоманды");
УстановитьОбработчикСобытияФормы(
	ОсновнаяФорма,
	ОбработчикиСобытийЭлементовФормы(ОсновнаяФорма).ПриЧтенииНаСервере);

// ПриОткрытии
Метод = СоздатьПолучитьМетод(ОсновнаяФорма, "ПриОткрытии", "ОбработчикиСобытийФормы", Ложь);
Если НЕ Метод.Существует Тогда
	Метод.Содержимое.Контекст = "НаКлиенте";
	ДобавитьПараметрВМетод(Метод, "Отказ");
КонецЕсли;
ДобавитьКТелуМетода(Метод,
	"// СтандартныеПодсистемы.ПодключаемыеКоманды
	|ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	|// Конец СтандартныеПодсистемы.ПодключаемыеКоманды");
УстановитьОбработчикСобытияФормы(
	ОсновнаяФорма,
	ОбработчикиСобытийЭлементовФормы(ОсновнаяФорма).ПриОткрытии);

// ПослеЗаписи
Метод = СоздатьПолучитьМетод(ОсновнаяФорма, "ПослеЗаписи", "ОбработчикиСобытийФормы", Ложь);
Если НЕ Метод.Существует Тогда
	Метод.Содержимое.Контекст = "НаКлиенте";
	ДобавитьПараметрВМетод(Метод, "ПараметрыЗаписи");
КонецЕсли;
ДобавитьКТелуМетода(Метод,
	"ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);");
УстановитьОбработчикСобытияФормы(
	ОсновнаяФорма,
	ОбработчикиСобытийЭлементовФормы(ОсновнаяФорма).ПослеЗаписи);

// Подключаемый_ВыполнитьКоманду
Метод = СоздатьПолучитьМетод(ОсновнаяФорма, "Подключаемый_ВыполнитьКоманду", "СлужебныеПроцедурыИФункции", Ложь);
Если НЕ Метод.Существует Тогда
	Метод.Содержимое.Комментарий = "СтандартныеПодсистемы.ПодключаемыеКоманды";
	Метод.Содержимое.Контекст = "НаКлиенте";
	ДобавитьПараметрВМетод(Метод, "Команда");
КонецЕсли;
ДобавитьКТелуМетода(Метод, "ПодключаемыеКомандыКлиент.НачатьВыполнениеКоманды(ЭтотОбъект, Команда, Объект);");

// Подключаемый_ПродолжитьВыполнениеКомандыНаСервере
Метод = СоздатьПолучитьМетод(ОсновнаяФорма, "Подключаемый_ПродолжитьВыполнениеКомандыНаСервере", "СлужебныеПроцедурыИФункции", Ложь);
Если НЕ Метод.Существует Тогда
	Метод.Содержимое.Контекст = "НаКлиенте";
	Метод.Содержимое.Экспортная = Истина;
	ДобавитьПараметрВМетод(Метод, "ПараметрыВыполнения");
	ДобавитьПараметрВМетод(Метод, "ДополнительныеПараметры");
КонецЕсли;
ДобавитьКТелуМетода(Метод, "ВыполнитьКомандуНаСервере(ПараметрыВыполнения, ДополнительныеПараметры);");

// ВыполнитьКомандуНаСервере
Метод = СоздатьПолучитьМетод(ОсновнаяФорма, "ВыполнитьКомандуНаСервере", "СлужебныеПроцедурыИФункции", Ложь);
Если НЕ Метод.Существует Тогда
	Метод.Содержимое.Контекст = "НаСервере";
	ДобавитьПараметрВМетод(Метод, "ПараметрыВыполнения");
КонецЕсли;
ДобавитьКТелуМетода(Метод, "ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, ПараметрыВыполнения, Объект);");

// Подключаемый_ОбновитьКоманды
Метод = СоздатьПолучитьМетод(ОсновнаяФорма, "Подключаемый_ОбновитьКоманды", "СлужебныеПроцедурыИФункции", Ложь);
Если НЕ Метод.Существует Тогда
	Метод.Содержимое.Контекст = "НаКлиенте";
	Метод.Содержимое.КомментарийОднострочныйКонец = "СтандартныеПодсистемы.ПодключаемыеКоманды";
КонецЕсли;
ДобавитьКТелуМетода(Метод, "ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);");