#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

// Возвращает сведения о внешней обработке.
//
// Возвращаемое значение:
//   см. ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке
//
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ДополнительныеОтчетыИОбработки.СведенияОВнешнейОбработке();
	
	ПараметрыРегистрации.Вид = ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработкиДополнительнаяОбработка();
	ПараметрыРегистрации.Версия = "0.9.1";
	ПараметрыРегистрации.БезопасныйРежим = Истина;
	
	НоваяКоманда = ПараметрыРегистрации.Команды.Добавить();
	НоваяКоманда.Представление = НСтр("ru = 'Накидка'");
	НоваяКоманда.Идентификатор = "Накидка";
	НоваяКоманда.Использование = ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКомандыОткрытиеФормы();
	НоваяКоманда.ПоказыватьОповещение = Ложь;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

// Конец СтандартныеПодсистемы.ДополнительныеОтчетыИОбработки

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПостроитьНаСервере(Форма, ГруппаРодитель, ДанныеГенератора) Экспорт
	ИзменитьРеквизитыФормы(Форма, ДанныеГенератора.Реквизиты);
	
	ГруппаКонтейнер = ПересоздатьГруппуКонтейнер(ГруппаРодитель, Форма);

	ДобавитьЭлементыФормы(Форма, ДанныеГенератора.Элементы, ГруппаКонтейнер); 
	ЗаполнитьДанныеФормы(Форма, ДанныеГенератора.Данные);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПересоздатьГруппуКонтейнер(ГруппаРодитель, Знач Форма)
	ГруппаКонтейнер = Форма.Элементы.Найти("ГруппаКонтейнер");
	Если ГруппаКонтейнер <> Неопределено Тогда
		Форма.Элементы.Удалить(ГруппаКонтейнер);
	КонецЕсли;
	
	ГруппаКонтейнер = Форма.Элементы.Добавить("ГруппаКонтейнер", Тип("ГруппаФормы"), ГруппаРодитель);
	ГруппаКонтейнер.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаКонтейнер.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаКонтейнер.ОтображатьЗаголовок = Ложь; 
	ГруппаКонтейнер.РастягиватьПоГоризонтали = Истина;
	ГруппаКонтейнер.РастягиватьПоВертикали = Истина;
	ГруппаКонтейнер.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	Возврат ГруппаКонтейнер;
КонецФункции

Процедура ЗаполнитьДанныеФормы(Форма, Данные)
	Для Каждого КлючЗначение Из Данные Цикл
		ИмяРеквизита = КлючЗначение.Ключ;
		ДанныеРеквизита = КлючЗначение.Значение;

		Если ДанныеРеквизита.Тип = "Таблица" Тогда
			Таблица = Форма[ИмяРеквизита];
			ДобавитьДеревоСтроки(Таблица, ДанныеРеквизита.Строки, Ложь);
			Продолжить;
		КонецЕсли;
		
		Если ДанныеРеквизита.Тип = "Дерево" Тогда
			ЭлементыДерева = Форма[ИмяРеквизита].ПолучитьЭлементы();
			ДобавитьДеревоСтроки(ЭлементыДерева, ДанныеРеквизита.Строки, Истина);
			Продолжить;
		КонецЕсли;      
		
		Форма[ИмяРеквизита] = ДанныеРеквизита.Значение;
	КонецЦикла;	
КонецПроцедуры

Процедура ИзменитьРеквизитыФормы(Форма, ОписанияРеквизитов)
	МассивРеквизитов = Новый Массив;
	НовыйМассивСуществующих = Новый Массив;
	Для Каждого СтрокаРеквизит Из ОписанияРеквизитов Цикл  
		Если СтрокаРеквизит.Тип = "Строка" Тогда
			ОписаниеТипа = Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(0));
		Иначе  
			ОписаниеТипа = Новый ОписаниеТипов(СтрокаРеквизит.Тип);
		КонецЕсли;
		
		ДобавляемыйРеквизит = Новый РеквизитФормы(СтрокаРеквизит.Имя, ОписаниеТипа, СтрокаРеквизит.ИмяВладельца);
		МассивРеквизитов.Добавить(ДобавляемыйРеквизит);
		Если НЕ СтрокаРеквизит.Автоудаление Тогда
			НовыйМассивСуществующих.Добавить(СтрокаРеквизит.Имя);
		КонецЕсли;
 	КонецЦикла;
	
	МассивУдаляемых = Форма.__ТаблицаСуществующихРеквизитов.Выгрузить().ВыгрузитьКолонку("ИмяРеквизита");
	
	Форма.ИзменитьРеквизиты(МассивРеквизитов, МассивУдаляемых);  
	
	Форма.__ТаблицаСуществующихРеквизитов.Очистить();
	Для Каждого ИмяРеквизита Из НовыйМассивСуществующих Цикл
		Строка = Форма.__ТаблицаСуществующихРеквизитов.Добавить();
		Строка.ИмяРеквизита = ИмяРеквизита;
	КонецЦикла;
КонецПроцедуры

Процедура ДобавитьЭлементыФормы(Форма, Элементы, Группа)
	Для Каждого Элемент Из Элементы Цикл
		ДобавитьЭлементФормы(Форма, Элемент, Группа);
	КонецЦикла;
КонецПроцедуры 

Процедура ДобавитьЭлементФормы(Форма, ОписаниеЭлемента, Группа)
	Родитель = Группа;
	Если ОписаниеЭлемента.ИмяРодителя <> Неопределено Тогда
		Родитель = Форма.Элементы[ОписаниеЭлемента.ИмяРодителя];
	КонецЕсли;
	НовыйЭлемент = Форма.Элементы.Добавить(ОписаниеЭлемента.Имя, Тип(ОписаниеЭлемента.Тип), Родитель);
	
	Для Каждого КлючЗначение Из ОписаниеЭлемента.НаборСвойств Цикл
		ИмяСвойства = КлючЗначение.Ключ;  	
		
		
		ЗначениеСвойства = ПолучитьЗначениеСвойстваNew(КлючЗначение.Значение);  
		
		Если ИмяСвойства = "Значение" Тогда
			Форма[ОписаниеЭлемента.НаборСвойств.ПутьКДанным.Значение] = ЗначениеСвойства;
		Иначе
			НовыйЭлемент[ИмяСвойства] = ЗначениеСвойства;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры    

Функция ПолучитьЗначениеСвойстваNew(ЗначениеСвойства)
	Если ЗначениеСвойства.Тип = "Число" 
		ИЛИ ЗначениеСвойства.Тип = "Строка"
		ИЛИ ЗначениеСвойства.Тип = "Булево" Тогда
		Возврат ЗначениеСвойства.Значение;
	КонецЕсли;
	
	Возврат Вычислить(ЗначениеСвойства.Тип + "." + ЗначениеСвойства.Значение);
КонецФункции 

Функция ПолучитьИмяРеквизита(ПараметрыВыполнения, Тип)
	СвободныйНомер = ПараметрыВыполнения.СвободныеНомераРеквизитов[Тип];
	ИмяРеквизита = СтрШаблон("%1Реквизит%2", Тип, СвободныйНомер);
	ПараметрыВыполнения.СвободныеНомераРеквизитов[Тип] = СвободныйНомер + 1;
	Возврат ИмяРеквизита;
КонецФункции 

Процедура УстановитьСвойствоЭлементаНаСервере(ЭлементФормы, ЭлементДанных)
	Для Каждого КлючЗначение Из ЭлементДанных.НаборСвойств Цикл
		ИмяСвойства = КлючЗначение.Ключ;
		СтрЗначениеСвойства = КлючЗначение.Значение;
		
		Если НЕ ЭлементДанных.ТипыСвойств.Свойство(ИмяСвойства) Тогда
			Продолжить;
		КонецЕсли;
		
		ТипСвойства = ЭлементДанных.ТипыСвойств[ИмяСвойства]; 
		
		ЗначениеСвойства = ПолучитьЗначениеСвойства(СтрЗначениеСвойства, ТипСвойства);
		
		ЭлементФормы[ИмяСвойства] = ЗначениеСвойства;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьЗначениеСвойства(Значение, Тип)
	Если Тип = "Строка" Тогда
		Возврат Значение;
	КонецЕсли;
	
	Если Тип = "Булево" Тогда
		Возврат Булево(Значение);
	КонецЕсли;

	Если Тип = "Число" Тогда
		Возврат Число(Значение);
	КонецЕсли;

	Если Тип = "Цвет" Тогда
		Возврат WebЦвета[Значение];
	КонецЕсли;
	
	ТипСистемногоПеречисления = ПолучитьТипСистемногоПеречисления(Тип);
	
	Возврат ТипСистемногоПеречисления[Значение];
КонецФункции 

Функция ПолучитьТипСистемногоПеречисления(Тип)
	Возврат Вычислить(Тип);
КонецФункции

Процедура ДобавитьДеревоСтроки(ЭлементыДерева, Строки, ЭтоДерево)
	Для Каждого Строка Из Строки Цикл 
		СтрокаДерева = ЭлементыДерева.Добавить();
		
		Для Каждого КлючЗначение Из Строка.Значения Цикл
			СтрокаДерева[КлючЗначение.Ключ] = КлючЗначение.Значение;
		КонецЦикла;

		Если ЭтоДерево Тогда
			ДобавитьДеревоСтроки(СтрокаДерева.ПолучитьЭлементы(), Строка.Строки, Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти 

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли
