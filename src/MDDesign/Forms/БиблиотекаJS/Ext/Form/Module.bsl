#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура Инициализировать(Форма, ИмяРеквизитаHTML, Версия) Экспорт   
	ПараметрыВыполнения = СоздатьПараметрыВыполнения(Форма, ИмяРеквизитаHTML, Версия);

	ОписаниеОповещения = Новый ОписаниеОповещения("РабочийКаталогДанныхПользователяЗавершение", ЭтотОбъект, ПараметрыВыполнения);
	НачатьПолучениеРабочегоКаталогаДанныхПользователя(ОписаниеОповещения);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Модули

&НаКлиенте
Функция СлужебныеФункции()
	Возврат ВладелецФормы.СлужебныеФункции();
КонецФункции

#КонецОбласти

#Область РаспаковкаБиблиотеки

&НаКлиенте
Функция СоздатьПараметрыВыполнения(Форма, ИмяРеквизитаHTML, Версия)
	Результат = Новый Структура;                         
	
	Результат.Вставить("ИмяРеквизитаHTML", ИмяРеквизитаHTML);
	Результат.Вставить("Версия", Версия);
	Результат.Вставить("Форма", Форма);
	Результат.Вставить("РабочийКаталог", "");
	Результат.Вставить("ИмяФайлаIndex", "");
	Результат.Вставить("ИмяФайлаАрхива", "");
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИнициализацияЗавершение", ЭтотОбъект, Результат);
	Результат.Вставить("ОписаниеОповещения", ОписаниеОповещения);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура РабочийКаталогДанныхПользователяЗавершение(КаталогДанныхПользователя, ПараметрыВыполнения) Экспорт
	УстановитьРабочийКаталог(ПараметрыВыполнения, КаталогДанныхПользователя);
	ПроверитьСуществованиеБиблиотеки(ПараметрыВыполнения);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРабочийКаталог(ПараметрыВыполнения, КаталогДанныхПользователя)
   
	ПараметрыВыполнения.РабочийКаталог = СлужебныеФункции().ОбъединитьПути(
		КаталогДанныхПользователя,
		"md_design",
		ПараметрыВыполнения.Версия);
	
	ПараметрыВыполнения.ИмяФайлаIndex = СлужебныеФункции().ОбъединитьПути(ПараметрыВыполнения.РабочийКаталог, "index.html");            
	
	ПараметрыВыполнения.ИмяФайлаАрхива = СлужебныеФункции().ОбъединитьПути(ПараметрыВыполнения.РабочийКаталог, "js.zip");
КонецПроцедуры

&НаКлиенте
Процедура ИнициализацияЗавершение(Результат, ПараметрыВыполнения) Экспорт
	Если НЕ Результат Тогда
		Возврат;
	КонецЕсли;    
	Форма = ПараметрыВыполнения.Форма;
	Форма[ПараметрыВыполнения.ИмяРеквизитаHTML] = ПараметрыВыполнения.ИмяФайлаIndex;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСуществованиеБиблиотеки(ПараметрыВыполнения)
	Файл = Новый Файл(ПараметрыВыполнения.ИмяФайлаIndex);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьСуществованиеБиблиотекиЗавершение", ЭтотОбъект, ПараметрыВыполнения);
	Файл.НачатьПроверкуСуществования(ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьСуществованиеБиблиотекиЗавершение(Существует, ПараметрыВыполнения) Экспорт
	Если Существует Тогда
		ВыполнитьОбработкуОповещения(ПараметрыВыполнения.ОписаниеОповещения, Истина);
		Возврат;
	КонецЕсли;  
	
	АдресВременногоХранилища = ПолучитьАдресВременногоХранилищаБиблиотекаJSНаСервере();
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);      
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаписьАрхиваЗавершение", ЭтотОбъект, ПараметрыВыполнения);
	ДвоичныеДанные.НачатьЗапись(ОписаниеОповещения, ПараметрыВыполнения.ИмяФайлаАрхива);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьАрхиваЗавершение(ПараметрыВыполнения) Экспорт
	ЧтениеZIP = Новый ЧтениеZipФайла(ПараметрыВыполнения.ИмяФайлаАрхива);
	ЧтениеZIP.ИзвлечьВсе(ПараметрыВыполнения.РабочийКаталог, РежимВосстановленияПутейФайловZIP.Восстанавливать);
	ВыполнитьОбработкуОповещения(ПараметрыВыполнения.ОписаниеОповещения, Истина);
КонецПроцедуры

&НаСервере
Функция ПолучитьАдресВременногоХранилищаБиблиотекаJSНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ДвоичныеДанные = ОбработкаОбъект.ПолучитьМакет("БиблиотекаJS");
	Возврат ПоместитьВоВременноеХранилище(ДвоичныеДанные);
КонецФункции

#КонецОбласти

#КонецОбласти