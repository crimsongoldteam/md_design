#Область ПрограммныйИнтерфейс

&НаКлиенте
Процедура Заполнить(Форма, СемантическоеДерево) Экспорт
	ДанныеЗаполнения = ПолучитьЗначенияРеквизитовФормы(Форма);   
	
	ЭлементыСД = ПолучитьЭлементыСДСоЗначениями(СемантическоеДерево);
	
	Для Каждого КлючЗначение Из ДанныеЗаполнения Цикл
		Если НЕ ЭлементыСД.Свойство(КлючЗначение.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеЭлемента = ЭлементыСД[КлючЗначение.Ключ];
		
		Если ТипЗнч(КлючЗначение.Значение) =  Тип("Структура") Тогда      
			КолонкиТаблицы = Новый Структура;
			ЗаполнитьКолонкиПоИменам(КолонкиТаблицы, ОписаниеЭлемента.Колонки);
			ЗаполнитьСтрокиТаблицыСФормы(ОписаниеЭлемента.Строки, КлючЗначение.Значение.Строки, КолонкиТаблицы);
			Продолжить;
		КонецЕсли;
		
		Если ОписаниеЭлемента.ВидЭлемента = "ПолеПереключателя" Тогда
			ОписаниеЭлемента.Значение = КлючЗначение.Значение;
			Продолжить;
		КонецЕсли;
		
		ОписаниеЭлемента.Значение = СлужебныеФункции().ФорматироватьЗначениеПоля(КлючЗначение.Значение, ОписаниеЭлемента.ОписаниеТипов);
	КонецЦикла;   
КонецПроцедуры

#КонецОбласти   
 
#Область СлужебныеПроцедурыИФункции

#Область Модули

&НаКлиенте
Функция СлужебныеФункции()
	Возврат ВладелецФормы.СлужебныеФункции();
КонецФункции

&НаКлиенте
Функция ПолучитьНовоеЗначение(Имя)
	Возврат ВладелецФормы.ПолучитьНовоеЗначение(Имя);
КонецФункции

#КонецОбласти 

#Область ЗаполнениеПоФорме 

&НаКлиенте
Функция ПолучитьЭлементыСДСоЗначениями(СемантическоеДерево) 
	Результат = Новый Структура;
	
	ЗаполнитьЭлементыСДСоЗначениями(Результат, СемантическоеДерево);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ЗаполнитьЭлементыСДСоЗначениями(Результат, ОписаниеЭлемента)
	Если ОписаниеЭлемента.Свойство("УИДАтрибута") Тогда
		Результат.Вставить(ОписаниеЭлемента.УИДАтрибута, ОписаниеЭлемента);
	КонецЕсли;
	
	
	Если НЕ ОписаниеЭлемента.Свойство("Элементы") Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ОписаниеДочерненоЭлемента Из ОписаниеЭлемента.Элементы Цикл
		ЗаполнитьЭлементыСДСоЗначениями(Результат, ОписаниеДочерненоЭлемента);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтрокиТаблицыСФормы(ОписанияСтрок, СтрокиФормы, ОписаниеКолонок)	
	ИндексСтроки = 0;
	Для Каждого СтрокаФормы Из СтрокиФормы Цикл   
		Если ИндексСтроки <= ОписанияСтрок.ВГраница() Тогда
			ОписаниеСтроки = ОписанияСтрок[ИндексСтроки];
		Иначе
			ОписаниеСтроки = ПолучитьНовоеЗначение("СтрокаТаблицы"); 
			ОписанияСтрок.Добавить(ОписаниеСтроки);
		КонецЕсли;
		
		ЗаполнитьСтрокуТаблицыСФормы(ОписаниеСтроки, СтрокаФормы, ОписаниеКолонок);
		
		ЗаполнитьСтрокиТаблицыСФормы(ОписаниеСтроки.Строки, СтрокаФормы.Строки, ОписаниеКолонок);
		
		ИндексСтроки = ИндексСтроки + 1;
	КонецЦикла;
	
	Пока ИндексСтроки <= ОписанияСтрок.ВГраница() Цикл
		ОписанияСтрок.Удалить(ОписанияСтрок.ВГраница());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтрокуТаблицыСФормы(ОписаниеСтроки, СтрокаФормы, ОписаниеКолонок)  
	Для Каждого КлючЗначение Из СтрокаФормы.Значения Цикл
		Если НЕ ОписаниеКолонок.Свойство(КлючЗначение.Ключ) Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеКолонки = ОписаниеКолонок[КлючЗначение.Ключ];
		
		ЭтоЗначениеФлажка = (ОписаниеКолонки.УИДАтрибутаФлажок = КлючЗначение.Ключ);
		
		Если ОписаниеСтроки.Ячейки.Свойство(ОписаниеКолонки.УИДАтрибута) Тогда
			Ячейка = ОписаниеСтроки.Ячейки[ОписаниеКолонки.УИДАтрибута];
		Иначе
			Ячейка = ПолучитьНовоеЗначение("ЯчейкаТаблицы");       
			ОписаниеСтроки.Ячейки.Вставить(ОписаниеКолонки.УИДАтрибута, Ячейка);
		КонецЕсли; 
		
		Если ЭтоЗначениеФлажка Тогда
			Ячейка.ЗначениеФлажка = КлючЗначение.Значение;
			Продолжить;
		КонецЕсли;
		
		Ячейка.Значение = СлужебныеФункции().ФорматироватьЗначениеПоля(КлючЗначение.Значение, ОписаниеКолонки.ОписаниеТипов);
	КонецЦикла;
	
КонецПроцедуры         

&НаКлиенте
Процедура ЗаполнитьКолонкиПоИменам(Результат, Колонки)
	Для Каждого Колонка Из Колонки Цикл
		Если Колонка.Тип <> "КолонкаТаблицы" Тогда
			Продолжить;
		КонецЕсли;
		
		Если Колонка.ЕстьЗначение Тогда
			Результат.Вставить(Колонка.УИДАтрибута, Колонка);
		КонецЕсли;
		Если Колонка.ЕстьФлажок Тогда
			Результат.Вставить(Колонка.УИДАтрибутаФлажок, Колонка);
		КонецЕсли;
		
		Для Каждого Подколонка Из Колонка.Колонки Цикл
			ЗаполнитьКолонкиПоИменам(Результат, Подколонка.Колонки);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЗначенияРеквизитовФормы(Форма)
	Результат = Новый Структура;
	
	СтрокиРеквизиты = Форма.ДеревоСуществующихРеквизитов.ПолучитьЭлементы();
	Для Каждого СтрокаРеквизит Из СтрокиРеквизиты Цикл
		ЗначениеРеквизита = Форма[СтрокаРеквизит.ИмяРеквизита];
		
		Если ОбработатьТаблицу(Результат, СтрокаРеквизит, ЗначениеРеквизита) Тогда           
			Продолжить;
		КонецЕсли;
		
		ЗначениеРеквизита = Форма[СтрокаРеквизит.ИмяРеквизита];
		Результат.Вставить(СтрокаРеквизит.ИмяРеквизитаБезПрефикса, ЗначениеРеквизита);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции   

&НаКлиенте
Функция ПолучитьОписаниеТаблицы()
	Возврат Новый Структура("Значения,Строки", Новый Структура, Новый Массив)
КонецФункции  

&НаКлиенте
Функция ПолучитьКолонкиТаблицы(СтрокаТаблица)
	Результат = Новый Массив;

	СтрокиКолонки = СтрокаТаблица.ПолучитьЭлементы();
	Для Каждого СтрокаКолонка Из СтрокиКолонки Цикл
		Результат.Добавить(СтрокаКолонка.ИмяРеквизитаБезПрефикса);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ОбработатьТаблицу(Результат, СтрокаТаблица, РеквизитТаблица)
	ЭтоТаблица = ТипЗнч(РеквизитТаблица) = Тип("ДанныеФормыКоллекция");
	ЭтоДерево = ТипЗнч(РеквизитТаблица) = Тип("ДанныеФормыДерево");
	
	Если НЕ ЭтоТаблица И НЕ ЭтоДерево Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ОписаниеТаблицы = ПолучитьОписаниеТаблицы();
	Результат.Вставить(СтрокаТаблица.ИмяРеквизитаБезПрефикса, ОписаниеТаблицы);
	
	Колонки = ПолучитьКолонкиТаблицы(СтрокаТаблица);
	
	Если ЭтоТаблица Тогда
		ЗаполнитьОписанияПоСтрокамТаблицы(ОписаниеТаблицы, Колонки, РеквизитТаблица);
		Возврат Истина;
	КонецЕсли;
	
	ЗаполнитьОписанияПоСтрокамДерева(ОписаниеТаблицы, Колонки, РеквизитТаблица.ПолучитьЭлементы());
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ЗаполнитьОписанияПоСтрокамТаблицы(ОписаниеТаблицы, Колонки, Таблица)
	Для Каждого Строка Из Таблица Цикл
		ОписаниеСтроки = ЗаполнитьОписанияПоСтрокеТаблицы(Колонки, Строка);  
		ОписаниеТаблицы.Строки.Добавить(ОписаниеСтроки);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьОписанияПоСтрокамДерева(ОписаниеСтрокиРодитель, Колонки, КоллекцияЭлементов)
	Для Каждого Строка Из КоллекцияЭлементов Цикл
		ОписаниеСтроки = ЗаполнитьОписанияПоСтрокеТаблицы(Колонки, Строка);
		ОписаниеСтрокиРодитель.Строки.Добавить(ОписаниеСтроки);
		
		ЗаполнитьОписанияПоСтрокамДерева(ОписаниеСтроки, Колонки, Строка.ПолучитьЭлементы());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ЗаполнитьОписанияПоСтрокеТаблицы(Колонки, Строка) 
	Результат = ПолучитьОписаниеТаблицы();
	Для Каждого Колонка Из Колонки Цикл
		Результат.Значения.Вставить(Колонка, Строка[Колонка]);
	КонецЦикла;   
	
	Возврат Результат;
КонецФункции

#КонецОбласти   

#КонецОбласти 
