// MIT License

// Copyright (c) 2025 Zherebtsov Nikita <nikita@crimsongold.ru>

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// https://github.com/crimsongoldteam/md_design

#Область ОбработчикиСобытийФормы

&НаКлиенте
Функция Получить(ДанныеАСД, ОписанияРеквизитов, ПараметрыВыполнения) Экспорт
	Результат = Новый Структура("Реквизиты,Элементы,Данные,ЗаголовокФормы,Метаданные");
	
	Если ДанныеАСД.НаборСвойств.Свойство("Заголовок") Тогда
		Результат.ЗаголовокФормы = ДанныеАСД.НаборСвойств.Заголовок;
	КонецЕсли;
	
	ПараметрыВыполнения.ОписанияРеквизитов = ОписанияРеквизитов;
	
	Результат.Реквизиты = ПолучитьСхемуРеквизитов(ПараметрыВыполнения, ОписанияРеквизитов);
	
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(
		ПараметрыВыполнения.ОписанияРеквизитов, 
		ДанныеАСД.УИД);
	
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
	
	СхемаЭлементаФорма = ПолучитьСхемаЭлемента(ИмяЭлемента, "Форма", "БезТипа");
	Если ДанныеАСД.НаборСвойств.Свойство("Заголовок") Тогда 
		ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлементаФорма, "Заголовок", "Строка", ДанныеАСД.НаборСвойств.Заголовок);
	КонецЕсли;
	
	ПараметрыВыполнения.Элементы.Добавить(СхемаЭлементаФорма);
	
	ПостроитьЭлементы(ПараметрыВыполнения, ДанныеАСД, СхемаЭлементаФорма);
	
	Результат.Элементы = ПараметрыВыполнения.Элементы;
	Результат.Данные = ПараметрыВыполнения.Данные;
	Результат.Метаданные = ПараметрыВыполнения.Метаданные;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция СоздатьПараметрыВыполнения() Экспорт
	ПараметрыВыполнения = Новый Структура; 
	ПараметрыВыполнения.Вставить("ОписанияРеквизитов", Новый Массив);
	ПараметрыВыполнения.Вставить("Элементы", Новый Массив);
	ПараметрыВыполнения.Вставить("Данные", Новый Структура);
	ПараметрыВыполнения.Вставить("Метаданные", Новый Структура);
	ПараметрыВыполнения.Вставить("ДеревоМетаданных", Новый Структура);

	Возврат ПараметрыВыполнения;
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

#Область Модули

&НаКлиенте
Функция Лексемы()
	Возврат ВладелецФормы.Лексемы();
КонецФункции

&НаКлиенте
Функция СлужебныеФункции()
	Возврат ВладелецФормы.СлужебныеФункции();
КонецФункции

#КонецОбласти

&НаКлиенте
Функция ПолучитьОписаниеРеквизита(ПараметрыВыполнения, ИмяРеквизита, ОписаниеТипов)
	Результат = Новый Структура;
	Результат.Вставить("Имя", ИмяРеквизита);
	Результат.Вставить("ОписаниеТипов", ОписаниеТипов);
	Результат.Вставить("Автоудаление", Ложь);
	Результат.Вставить("ИмяВладельца", Неопределено);
	Результат.Вставить("Подчиненные", Новый Массив);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ПолучитьСхемаЭлемента(ИмяРеквизита, Тип,Вид)
	Результат = Новый Структура;
	Результат.Вставить("Имя", ИмяРеквизита);
	Результат.Вставить("Тип", Тип);
	Результат.Вставить("Вид", Вид);
	Результат.Вставить("НаборСвойств", Новый Структура);
	Результат.Вставить("ПодчиненныеЭлементы", Новый Массив);
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, Ключ, Тип, Значение) 
	СтрЗначение = Новый Структура("Тип, Значение, ЭтоСистемноеПеречисление");
	СтрЗначение.Тип = Тип;
	СтрЗначение.Значение = Значение;
	СтрЗначение.ЭтоСистемноеПеречисление = НЕ ЭтоПримитивныйТип(Тип);
	СхемаЭлемента.НаборСвойств.Вставить(Ключ, СтрЗначение);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьМетаданные(ПараметрыВыполнения, ОписаниеТипов, СписокЗначений)  
	Если ПараметрыВыполнения.ДеревоМетаданных.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекТип Из ОписаниеТипов.Типы Цикл
		ИмяРаздела = Неопределено;
		
		Если СтрНачинаетсяС(ТекТип, "ПеречислениеСсылка") Тогда
			ИмяРаздела = "Перечисления";
		ИначеЕсли СтрНачинаетсяС(ТекТип, "СправочникСсылка") Тогда
			ИмяРаздела = "Справочники";
		Иначе
			Продолжить;
		КонецЕсли; 
		ТекВид = Сред(ТекТип, СтрНайти(ТекТип, ".") + 1);
		
		ДанныеРаздела = СоздатьПолучитьРазделМетаданных(ПараметрыВыполнения, ИмяРаздела);
		
		Если ДанныеРаздела.Свойство(ТекВид) Тогда
			Продолжить;
		КонецЕсли;
		
		ЭтоНовый = ЭтоНовыйОбъектМетаданных(ПараметрыВыполнения, ТекТип);
		
		Если НЕ ЭтоНовый Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеОбъектаМетаданных =  Новый Структура("Значения,Формы,ЭтоНовый", Новый Массив, Новый Структура, Истина);
		
		Если СписокЗначений <> Неопределено Тогда
			Для Каждого Значение Из СписокЗначений Цикл
				ОписаниеОбъектаМетаданных.Значения.Добавить(СлужебныеФункции().СтрокуВНотациюПаскаля(Значение));
			КонецЦикла;
		КонецЕсли;
		
		ДанныеРаздела.Вставить(ТекВид, ОписаниеОбъектаМетаданных);
	КонецЦикла;
КонецПроцедуры           

&НаКлиенте
Функция ЭтоНовыйОбъектМетаданных(ПараметрыВыполнения, ТипОбъекта)
	ИмяРаздела = Неопределено;
	Если СтрНачинаетсяС(ТипОбъекта, "ПеречислениеСсылка") Тогда
		ИмяРаздела = "Перечисления";
	ИначеЕсли СтрНачинаетсяС(ТипОбъекта, "СправочникСсылка") Тогда
		ИмяРаздела = "Справочники";
	КонецЕсли;
	ТекВид = Сред(ТипОбъекта, СтрНайти(ТипОбъекта, ".") + 1);
	
	МассивОбъектов = ПараметрыВыполнения.ДеревоМетаданных[ИмяРаздела];
	
	Для Каждого ЭлементОбъект Из МассивОбъектов Цикл
		Если НРег(ЭлементОбъект.Имя) = НРег(ТекВид) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция СоздатьПолучитьРазделМетаданных(ПараметрыВыполнения, Раздел)
	Если ПараметрыВыполнения.Метаданные.Свойство(Раздел) Тогда
		Возврат ПараметрыВыполнения.Метаданные[Раздел];
	КонецЕсли;
	
	Результат = Новый Структура;
	ПараметрыВыполнения.Метаданные.Вставить(Раздел, Результат);
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ПолучитьСхемуРеквизитов(ПараметрыВыполнения, ОписанияРеквизитов)
	Результат = Новый Массив;
	
	СоответствиеТаблицаУИД = Новый Соответствие;
	
	Для Каждого СтрокаРеквизит Из ОписанияРеквизитов Цикл
		Если ПустаяСтрока(СтрокаРеквизит.ИмяРеквизита) Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаРеквизит.ТипРеквизита = "Колонка" ИЛИ СтрокаРеквизит.ТипРеквизита = "КолонкаФлажок" Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяРеквизита = СтрокаРеквизит.ИмяРеквизита;
		Если СтрокаРеквизит.Номер > 1 Тогда
			СтрокаНомер = Формат(СтрокаРеквизит.Номер - 1, "ЧГ=0");
			ИмяРеквизита = ИмяРеквизита + СтрокаНомер;
		КонецЕсли;
		
		Если СтрокаРеквизит.ТипРеквизита = "ПолеВвода" Тогда
			ОписаниеТипов = СтрокаРеквизит.ОписаниеТипов;
			Если ОписаниеТипов.Количество() = 0 Тогда
				ОписаниеТипов.Вставить("Строка", Неопределено);
			КонецЕсли;	
			
			ДобавитьМетаданные(ПараметрыВыполнения, ОписаниеТипов, СтрокаРеквизит.СписокВыбора);
			
			ОписаниеРеквизита = ПолучитьОписаниеРеквизита(ПараметрыВыполнения, ИмяРеквизита, СтрокаРеквизит.ОписаниеТипов);
		ИначеЕсли СтрокаРеквизит.ТипРеквизита = "ПолеФлажка" Тогда
			ОписаниеРеквизита = ПолучитьОписаниеРеквизита(ПараметрыВыполнения, ИмяРеквизита, СтрокаРеквизит.ОписаниеТипов);
		Иначе
			ОписаниеРеквизита = ПолучитьСхемуРеквизитаТаблица(ПараметрыВыполнения, ОписанияРеквизитов, СтрокаРеквизит, ИмяРеквизита);
			
			Если СтрокаРеквизит.ТипРеквизита = "Таблица" 
				ИЛИ СтрокаРеквизит.ТипРеквизита = "Дерево" Тогда       
				СоответствиеТаблицаУИД.Вставить(СтрокаРеквизит.УИД, ОписаниеРеквизита);
			КонецЕсли;
		КонецЕсли;
		
		Результат.Добавить(ОписаниеРеквизита);
	КонецЦикла;

	Для Каждого СтрокаРеквизит Из ОписанияРеквизитов Цикл
		Если ПустаяСтрока(СтрокаРеквизит.ИмяРеквизита) Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаРеквизит.ТипРеквизита <> "Колонка" И СтрокаРеквизит.ТипРеквизита <> "КолонкаФлажок" Тогда
			Продолжить;
		КонецЕсли;
  		
		ИмяРеквизита = СтрокаРеквизит.ИмяРеквизита;
		Если СтрокаРеквизит.Номер > 1 Тогда
			СтрокаНомер = Формат(СтрокаРеквизит.Номер - 1, "ЧГ=0");
			ИмяРеквизита = ИмяРеквизита + СтрокаНомер;
		КонецЕсли;

		СтрокаВладелец = ПолучитьСтрокуТаблицыРеквизитов(ОписанияРеквизитов, СтрокаРеквизит.УИДВладельца);
		
		ОписаниеРеквизита = ПолучитьОписаниеРеквизита(ПараметрыВыполнения, ИмяРеквизита, СтрокаРеквизит.ОписаниеТипов);
		ОписаниеРеквизита.ИмяВладельца = СтрокаВладелец.ИмяРеквизита;
		ОписаниеРеквизита.Автоудаление = Истина;
		
		СхемаРеквизитаТаблица = СоответствиеТаблицаУИД.Получить(СтрокаРеквизит.УИДВладельца);
		СхемаРеквизитаТаблица.Подчиненные.Добавить(ОписаниеРеквизита);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ПолучитьСхемуРеквизитаТаблица(ПараметрыВыполнения, ОписанияРеквизитов, СтрокаРеквизит, ИмяРеквизита) 
	Если СтрокаРеквизит.ТипРеквизита = "Таблица" 
		ИЛИ СтрокаРеквизит.ТипРеквизита = "Дерево" Тогда       
		Возврат ПолучитьОписаниеРеквизита(ПараметрыВыполнения, ИмяРеквизита, СтрокаРеквизит.ОписаниеТипов);
	КонецЕсли;

	СтрокаВладелец = ПолучитьСтрокуТаблицыРеквизитов(ОписанияРеквизитов, СтрокаРеквизит.УИДВладельца);
	
	ОписаниеРеквизита = ПолучитьОписаниеРеквизита(ПараметрыВыполнения, ИмяРеквизита, СтрокаРеквизит.ОписаниеТипов);
	ОписаниеРеквизита.ИмяВладельца = СтрокаВладелец.ИмяРеквизита;
	ОписаниеРеквизита.Автоудаление = Истина;

	Возврат ОписаниеРеквизита;
КонецФункции

&НаКлиенте
Процедура ПостроитьЭлементы(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)      
	Подчиненные = ЭлементАСД.Элементы;
	
	Для Каждого ПодчиненныйЭлементАСД Из Подчиненные Цикл
		ПостроитьЭлемент(ПараметрыВыполнения, ПодчиненныйЭлементАСД, СхемаРодителя);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПостроитьЭлемент(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)
	Если ДобавитьГоризонтальнуюГруппу(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли; 

	Если ДобавитьОднострочнуюГруппу(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли; 

	Если ДобавитьВертикальнуюГруппу(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли;

	Если ДобавитьЭлементПолеВвода(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли;

	Если ДобавитьЭлементФлажок(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли;

	Если ДобавитьЭлементНадпись(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли;

	Если ДобавитьТаблицуДерево(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли;

	Если ДобавитьСтраницы(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДобавитьКоманднуюПанель(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ДобавитьГоризонтальнуюГруппу(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)  	
	Если ЭлементАСД.Тип <> "ГоризонтальнаяГруппа" Тогда 
		Возврат Ложь;
	КонецЕсли;
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(
		ПараметрыВыполнения.ОписанияРеквизитов, 
		ЭлементАСД.УИД);
	
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
	
	СхемаЭлемента = ПолучитьСхемаЭлемента(ИмяЭлемента, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "ОбычнаяГруппа");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Отображение", "ОтображениеОбычнойГруппы", "Нет");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "ОтображатьЗаголовок", Лексемы().ТипБулево, Ложь);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Группировка", "ГруппировкаПодчиненныхЭлементовФормы", "ГоризонтальнаяВсегда");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, Лексемы().РастягиватьПоГоризонтали, Лексемы().ТипБулево, Истина);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, Лексемы().РастягиватьПоВертикали, Лексемы().ТипБулево, Ложь);
	
	ПостроитьЭлементы(ПараметрыВыполнения, ЭлементАСД, СхемаЭлемента);
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ДобавитьВертикальнуюГруппу(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)  	
	Если ЭлементАСД.Тип <> "ВертикальнаяГруппа" Тогда 
		Возврат Ложь;
	КонецЕсли;

	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(
		ПараметрыВыполнения.ОписанияРеквизитов,
		ЭлементАСД.УИД);
	
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
	
	СхемаЭлемента = ПолучитьСхемаЭлемента(ИмяЭлемента, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "ОбычнаяГруппа");
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, ЭлементАСД);
	
	Если НЕ ЭлементАСД.НаборСвойств.Свойство("Отображение") Тогда   
		ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Отображение", "ОтображениеОбычнойГруппы", "Нет");
	КонецЕсли;
	
	Если НЕ ЭлементАСД.НаборСвойств.Свойство("ОтображатьЗаголовок")
		И ПустаяСтрока(ЭлементАСД.НаборСвойств.Заголовок) Тогда
		ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "ОтображатьЗаголовок", Лексемы().ТипБулево, Ложь);
	КонецЕсли;

	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Группировка", "ГруппировкаПодчиненныхЭлементовФормы", "Вертикальная");

	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоГоризонтали", Лексемы().ТипБулево, Истина);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоВертикали", Лексемы().ТипБулево, Ложь);
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, ЭлементАСД);
	
	ПостроитьЭлементы(ПараметрыВыполнения, ЭлементАСД, СхемаЭлемента);   
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ДобавитьОднострочнуюГруппу(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)  	
	Если ЭлементАСД.Тип <> "ОднострочнаяГруппа" Тогда 
		Возврат Ложь;
	КонецЕсли;

	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(
		ПараметрыВыполнения.ОписанияРеквизитов,
		ЭлементАСД.УИД);
	
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;

	СхемаЭлемента = ПолучитьСхемаЭлемента(ИмяЭлемента, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);

	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "ОбычнаяГруппа");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Отображение", "ОтображениеОбычнойГруппы", "Нет");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "ОтображатьЗаголовок", Лексемы().ТипБулево, Ложь);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Группировка", "ГруппировкаПодчиненныхЭлементовФормы", "ГоризонтальнаяВсегда");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоГоризонтали", Лексемы().ТипБулево, Истина);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоВертикали", Лексемы().ТипБулево, Ложь);

	ПостроитьЭлементы(ПараметрыВыполнения, ЭлементАСД, СхемаЭлемента);
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ДобавитьСтраницы(ПараметрыВыполнения, СтраницыАСД, СхемаРодителя)  	
	Если СтраницыАСД.Тип <> "Страницы" Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	СтрокаРеквизитовСтраницы = ПолучитьСтрокуТаблицыРеквизитов(
		ПараметрыВыполнения.ОписанияРеквизитов,
		СтраницыАСД.УИД);
	ИмяЭлемента = СтрокаРеквизитовСтраницы.ИмяЭлемента;
	
	СхемаЭлемента = ПолучитьСхемаЭлемента(ИмяЭлемента, СтраницыАСД.ТипЭлемента, СтраницыАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);

	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "Страницы");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоГоризонтали", "Булево", Истина);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоВертикали", "Булево", Ложь);
	
	Для Каждого СтраницаАСД Из СтраницыАСД.Элементы Цикл
		ДобавитьСтраницу(ПараметрыВыполнения, СхемаЭлемента, СтраницаАСД);
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ДобавитьСтраницу(ПараметрыВыполнения, СхемаРодителя, СтраницаАСД)  	  
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(
		ПараметрыВыполнения.ОписанияРеквизитов,
		СтраницаАСД.УИД);
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;

	СхемаЭлемента = ПолучитьСхемаЭлемента(ИмяЭлемента, СтраницаАСД.ТипЭлемента, СтраницаАСД.ВидЭлемента);
	
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);

	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "Страница");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Заголовок", "Строка", СтраницаАСД.НаборСвойств.Заголовок);
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, СтраницаАСД);
	
	ПостроитьЭлементы(ПараметрыВыполнения, СтраницаАСД, СхемаЭлемента);
КонецПроцедуры

&НаКлиенте
Функция ДобавитьЭлементПолеВвода(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)     
	Если ЭлементАСД.Тип <> "ПолеВвода" Тогда 
		Возврат Ложь;
	КонецЕсли;

	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(
		ПараметрыВыполнения.ОписанияРеквизитов,
		ЭлементАСД.УИД);
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
	ИмяРеквизита =  СтрокаРеквизитов.ИмяРеквизита;
	
	СхемаЭлемента = ПолучитьСхемаЭлемента(ИмяЭлемента, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "ПутьКДанным", "Строка", ИмяРеквизита);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидПоляФормы", "ПолеВвода");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "АвтоМаксимальнаяШирина", "Булево", Ложь);

	ЗначениеПриведенное = СлужебныеФункции().ПривестиЗначениеКДопустимомуТипу(ЭлементАСД.ОписаниеТипов, ЭлементАСД.Значение);
	Данные = Новый Структура("Тип,Значение", "ПолеФормы", ЗначениеПриведенное);
	ПараметрыВыполнения.Данные.Вставить(ИмяРеквизита, Данные);
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, ЭлементАСД);
	
	Если НЕ ЭлементАСД.НаборСвойств.Свойство("РастягиватьПоГоризонтали") Тогда
		ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоГоризонтали", "Булево", Истина);
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ДобавитьЭлементНадпись(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)  	
	Если ЭлементАСД.Тип <> "Надпись" Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(
		ПараметрыВыполнения.ОписанияРеквизитов,
		ЭлементАСД.УИД);
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;

	СхемаЭлемента = ПолучитьСхемаЭлемента(ИмяЭлемента, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидДекорацииФормы", "Надпись");

	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, ЭлементАСД);
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ДобавитьЭлементФлажок(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)  
	Если ЭлементАСД.Тип <> "ПолеФлажка" Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(
		ПараметрыВыполнения.ОписанияРеквизитов,
		ЭлементАСД.УИД);
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
	ИмяРеквизита =  СтрокаРеквизитов.ИмяРеквизита;
	
	СхемаЭлемента = ПолучитьСхемаЭлемента(ИмяЭлемента, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);

	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидПоляФормы", "ПолеФлажка");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "ПутьКДанным", "Строка", ИмяРеквизита);

	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, ЭлементАСД);
	
	Данные = Новый Структура("Тип,Значение", "ПолеФормы", ЭлементАСД.Значение);
	ПараметрыВыполнения.Данные.Вставить(ИмяРеквизита, Данные);
	
	Возврат Истина;
КонецФункции

#Область ТаблицаДерево

&НаКлиенте
Функция ДобавитьТаблицуДерево(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)  
	Если ЭлементАСД.Тип <> Лексемы().Дерево
		И ЭлементАСД.Тип <> Лексемы().Таблица Тогда 
		Возврат Ложь;
	КонецЕсли;

	ОписанияРеквизитов = ПараметрыВыполнения.ОписанияРеквизитов;
	
	СтрокаРеквизитовТаблица = ПолучитьСтрокуТаблицыРеквизитов(ОписанияРеквизитов, ЭлементАСД.УИД);
	ИмяЭлементаТаблица = СтрокаРеквизитовТаблица.ИмяЭлемента;
	ИмяРеквизитаТаблица = СтрокаРеквизитовТаблица.ИмяРеквизита;
	
	СхемаЭлементовТаблица = ПолучитьСхемаЭлемента(ИмяЭлементаТаблица, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлементовТаблица, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлементовТаблица, "ПутьКДанным", "Строка", ИмяРеквизитаТаблица);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлементовТаблица, "ПоложениеКоманднойПанели", "ПоложениеКоманднойПанелиЭлементаФормы", "Нет");
	
	КолонкиАСД = ЭлементАСД.Колонки;
	
	СоответствиеКолонок = Новый Соответствие;
	
	Для Каждого КолонкаАСД Из КолонкиАСД Цикл 
		ПараметрыДобавления = ПолучитьПараметрыДобавленияКолонкиТаблицы(ПараметрыВыполнения, СоответствиеКолонок);
		ПараметрыДобавления.СхемаРодителя = СхемаЭлементовТаблица;
		ПараметрыДобавления.ИмяРеквизитаТаблица = ИмяРеквизитаТаблица;
		ПараметрыДобавления.КолонкаАСД = КолонкаАСД;
		ПараметрыДобавления.РодительАСД = ЭлементАСД;
		
		ДобавитьКолонкуТаблицыРекурсивно(ПараметрыДобавления);
	КонецЦикла;          

	Строки = ЭлементАСД.Строки; 
	
	Данные = Новый Структура("Тип,Строки", "Таблица", Новый Массив);
	ПараметрыВыполнения.Данные.Вставить(ИмяРеквизитаТаблица, Данные);
	Если ЭлементАСД.Тип = "Дерево"  Тогда
		Данные.Тип = "Дерево";
		ДобавитьДеревоСтроки(ПараметрыВыполнения, Строки, СоответствиеКолонок, Данные, Истина);
	Иначе
		ДобавитьДеревоСтроки(ПараметрыВыполнения, Строки, СоответствиеКолонок, Данные, Ложь);
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ДобавитьГруппуКолонокТаблицы(ПараметрыВыполнения, СхемаРодителя, ИмяЭлемента, ГруппировкаКолонок, Заголовок = Неопределено)
	НоваяКолонка = ПолучитьСхемаЭлемента(ИмяЭлемента, "ГруппаФормы", "ГруппаКолонок");
	ДобавитьЭлемент(ПараметрыВыполнения, НоваяКолонка, СхемаРодителя);

	ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "Вид", "ВидГруппыФормы", "ГруппаКолонок");
	ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "Группировка", "ГруппировкаКолонок", ГруппировкаКолонок);
	
	Если Заголовок <> Неопределено Тогда  
		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "Заголовок", "Строка", Заголовок);
		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "ОтображатьВШапке", "Булево", Истина);
	КонецЕсли;
	
	Возврат НоваяКолонка;
КонецФункции

&НаКлиенте
Функция ПолучитьПараметрыДобавленияКолонкиТаблицы(ПараметрыВыполнения, СоответствиеКолонок)
	Результат = Новый Структура;
	Результат.Вставить("ПараметрыВыполнения", ПараметрыВыполнения);
	Результат.Вставить("СоответствиеКолонок", СоответствиеКолонок);
	Результат.Вставить("СхемаРодителя", Неопределено);
	Результат.Вставить("КолонкаАСД", Неопределено);
	Результат.Вставить("ИмяРеквизитаТаблица", "");
	Результат.Вставить("РодительАСД", Неопределено);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ДобавитьКолонкуТаблицыРекурсивно(ПараметрыДобавления)  
	ПараметрыВыполнения = ПараметрыДобавления.ПараметрыВыполнения;  
	КолонкаАСД = ПараметрыДобавления.КолонкаАСД;  
	СхемаРодителя = ПараметрыДобавления.СхемаРодителя;  
	РодительАСД = ПараметрыДобавления.РодительАСД;  
	ИмяРеквизитаТаблица = ПараметрыДобавления.ИмяРеквизитаТаблица;  
	
	
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(
		ПараметрыВыполнения.ОписанияРеквизитов, 
		КолонкаАСД.УИД);
	
	КолонкиАСД = КолонкаАСД.Колонки;                     
	
	СвойстваКолонкиАСД = ПолучитьСвойстваКолонкиАСД(КолонкаАСД, РодительАСД);
	
	Если СвойстваКолонкиАСД.ДобавлятьВертикальнуюГруппу Тогда
		
		ИмяГруппы = ИмяРеквизитаТаблица + СтрокаРеквизитов.ИмяЭлемента + "Вертикальная";
		
		СхемаРодителя = ДобавитьГруппуКолонокТаблицы(ПараметрыВыполнения, СхемаРодителя, ИмяГруппы, "Вертикальная");
	КонецЕсли;
	
	Если СвойстваКолонкиАСД.ДобавлятьКолонкуТаблицы Тогда   
		ПараметрыДобавленияКолонки = ПолучитьПараметрыДобавленияКолонкиТаблицы(ПараметрыВыполнения, ПараметрыДобавления.СоответствиеКолонок);
		ПараметрыДобавленияКолонки.СхемаРодителя = СхемаРодителя;
		ПараметрыДобавленияКолонки.ИмяРеквизитаТаблица = ИмяРеквизитаТаблица;
		ПараметрыДобавленияКолонки.КолонкаАСД = КолонкаАСД;
		ПараметрыДобавленияКолонки.РодительАСД = РодительАСД;
		
		ДобавитьКолонкуТаблицы(ПараметрыДобавленияКолонки);
	КонецЕсли;
	
	Если СвойстваКолонкиАСД.ДобавлятьГоризонтальнуюГруппу Тогда
		ИмяГруппы = ИмяРеквизитаТаблица + СтрокаРеквизитов.ИмяЭлемента + "Горизонтальная";
		
		ЗаголовокГруппы = Неопределено;
		Если СвойстваКолонкиАСД.ДобавлятьГруппуКолонок Тогда
			ЗаголовокГруппы = КолонкаАСД.НаборСвойств.Заголовок;
		КонецЕсли;
		
		СхемаРодителя = ДобавитьГруппуКолонокТаблицы(
			ПараметрыВыполнения,
			СхемаРодителя, 
			ИмяГруппы, 
			"Горизонтальная",
			ЗаголовокГруппы);
	КонецЕсли;

	Для Каждого ТекКолонкаАСД Из КолонкиАСД Цикл  
		ПараметрыДобавленияКолонки = ПолучитьПараметрыДобавленияКолонкиТаблицы(ПараметрыВыполнения, ПараметрыДобавления.СоответствиеКолонок);
		ПараметрыДобавленияКолонки.СхемаРодителя = СхемаРодителя;
		ПараметрыДобавленияКолонки.ИмяРеквизитаТаблица = ИмяРеквизитаТаблица;
		ПараметрыДобавленияКолонки.КолонкаАСД = ТекКолонкаАСД;
		ПараметрыДобавленияКолонки.РодительАСД = КолонкаАСД;
		
		ДобавитьКолонкуТаблицыРекурсивно(ПараметрыДобавленияКолонки);
	КонецЦикла;          
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСвойстваКолонкиАСД(КолонкаАСД, РодительАСД)   
	Результат = Новый Структура;
	
	Результат.Вставить("ДобавлятьВертикальнуюГруппу", Ложь);
	Результат.Вставить("ДобавлятьГоризонтальнуюГруппу", Ложь);
	Результат.Вставить("ДобавлятьГруппуКолонок", Ложь);
	Результат.Вставить("ДобавлятьКолонкуТаблицы", Ложь);
	
	КоличествоКолонок = КолонкаАСД.Колонки.Количество();
	
	ЕстьПодчиненные = КоличествоКолонок > 0;
	ЕстьГруппаПодчиненных = КоличествоКолонок > 1;
	
	Результат.ДобавлятьГруппуКолонок = 
		КолонкаАСД.Тип = "ГруппаКолонокТаблицы";
		
	Результат.ДобавлятьВертикальнуюГруппу = 
		НЕ Результат.ДобавлятьГруппуКолонок 
		И ЕстьПодчиненные 
		И (РодительАСД.Тип = "ГоризонтальнаяГруппа" 
			ИЛИ РодительАСД.Тип = "Таблица");
			
	Результат.ДобавлятьГоризонтальнуюГруппу =
		Результат.ДобавлятьГруппуКолонок ИЛИ
		ЕстьГруппаПодчиненных;
			
	Результат.ДобавлятьКолонкуТаблицы =
		НЕ Результат.ДобавлятьГруппуКолонок;
		
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ДобавитьКолонкуТаблицы(ПараметрыДобавления)  
	ПараметрыВыполнения = ПараметрыДобавления.ПараметрыВыполнения;
	ОписанияРеквизитов = ПараметрыВыполнения.ОписанияРеквизитов;
	КолонкаАСД = ПараметрыДобавления.КолонкаАСД;  
	СхемаРодителя = ПараметрыДобавления.СхемаРодителя;
	ИмяРеквизитаТаблица = ПараметрыДобавления.ИмяРеквизитаТаблица;
	СоответствиеКолонок = ПараметрыДобавления.СоответствиеКолонок;
	
	ЕстьГруппаВместе = КолонкаАСД.ЕстьФлажок И КолонкаАСД.ЕстьЗначение;                

	Если ЕстьГруппаВместе Тогда
		СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(ОписанияРеквизитов, КолонкаАСД.УИД);
		ИмяЭлемента = ИмяРеквизитаТаблица + СтрокаРеквизитов.ИмяЭлемента + "Вместе";
		
		СхемаРодителя = ДобавитьГруппуКолонокТаблицы(
		    ПараметрыВыполнения,
			СхемаРодителя, 
			ИмяЭлемента, 
			"ВЯчейке", 
			КолонкаАСД.НаборСвойств.Заголовок);
		
	КонецЕсли;
	
	Если КолонкаАСД.ЕстьФлажок Тогда
		СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(ОписанияРеквизитов, КолонкаАСД.УИДФлажок);  
 
		ИмяЭлемента = ИмяРеквизитаТаблица + СтрокаРеквизитов.ИмяЭлемента;
		ИмяРеквизита = ИмяРеквизитаТаблица + "." + СтрокаРеквизитов.ИмяРеквизита;
		
		НоваяКолонка = ПолучитьСхемаЭлемента(ИмяЭлемента, КолонкаАСД.ТипЭлемента, "ПолеФлажка");
		ДобавитьЭлемент(ПараметрыВыполнения, НоваяКолонка, СхемаРодителя);
	
		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "Вид", "ВидПоляФормы", "ПолеФлажка");
		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "ПутьКДанным", Лексемы().ТипСтрока, ИмяРеквизита);
		Если ЕстьГруппаВместе Тогда
			ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "ОтображатьВШапке", "Булево", Ложь);
		КонецЕсли;
		
		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "Заголовок", Лексемы().ТипСтрока, КолонкаАСД.НаборСвойств.Заголовок);
		
	КонецЕсли;
	
	Если КолонкаАСД.ЕстьЗначение Тогда
		СоответствиеКолонок.Вставить(КолонкаАСД.УИД, КолонкаАСД);
		
		СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(ОписанияРеквизитов, КолонкаАСД.УИД);
		ИмяЭлемента = ИмяРеквизитаТаблица + СтрокаРеквизитов.ИмяЭлемента;
		ИмяРеквизита = ИмяРеквизитаТаблица + "." + СтрокаРеквизитов.ИмяРеквизита;	
		
		НоваяКолонка = ПолучитьСхемаЭлемента(ИмяЭлемента, КолонкаАСД.ТипЭлемента, КолонкаАСД.ВидЭлемента);
		ДобавитьЭлемент(ПараметрыВыполнения, НоваяКолонка, СхемаРодителя);
	
		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "Вид", "ВидПоляФормы", "ПолеВвода");
		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "ПутьКДанным", "Строка", ИмяРеквизита);
		
		УстановитьСвойствоЭлемента(ПараметрыВыполнения, НоваяКолонка, КолонкаАСД);
		
		Если ЕстьГруппаВместе Тогда
			ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "ОтображатьВШапке", "Булево", Ложь);
		КонецЕсли;

		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "Заголовок", "Строка", КолонкаАСД.НаборСвойств.Заголовок);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДеревоСтроки(ПараметрыВыполнения, Строки, СоответствиеКолонок, ИсходящиеДанные, ЭтоДерево)
	Для Каждого Строка Из Строки Цикл 
		ОписаниеСтроки = Новый Структура("Строки,Значения", Новый Массив, Новый Структура);
		ИсходящиеДанные.Строки.Добавить(ОписаниеСтроки);
		
		Для Каждого Ячейка Из Строка.Ячейки Цикл  
			Если НЕ ПустаяСтрока(Ячейка.Значение) Тогда
				СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(
					ПараметрыВыполнения.ОписанияРеквизитов, Ячейка.УИДКолонки);   
					
				Колонка = СоответствиеКолонок.Получить(Ячейка.УИДКолонки);
				ЗначениеПриведенное = СлужебныеФункции().ПривестиЗначениеКДопустимомуТипу(Колонка.ОписаниеТипов, Ячейка.Значение);

				ОписаниеСтроки.Значения.Вставить(СтрокаРеквизитов.ИмяРеквизита, ЗначениеПриведенное);
			КонецЕсли;
			
			Если Ячейка.ЕстьФлажок Тогда
				СтрокаРеквизитовФлажок = ПолучитьСтрокуТаблицыРеквизитов(
					ПараметрыВыполнения.ОписанияРеквизитов,
					Ячейка.УИДКолонкиФлажок);
				ОписаниеСтроки.Значения.Вставить(СтрокаРеквизитовФлажок.ИмяРеквизита, Ячейка.ЗначениеФлажка);
			КонецЕсли;
		КонецЦикла;
		
		Если ЭтоДерево Тогда
			ДобавитьДеревоСтроки(ПараметрыВыполнения, Строка.Строки, СоответствиеКолонок, ОписаниеСтроки, Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Кнопки

&НаКлиенте
Функция ДобавитьКоманднуюПанель(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)  
	Если ЭлементАСД.Тип <> "КоманднаяПанель" Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	Если ДобавитьЕдинственнуюКнопку(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат Истина;
	КонецЕсли;
	
	СтрокаРеквизитовКоманднаяПанель = ПолучитьСтрокуТаблицыРеквизитов(
		ПараметрыВыполнения.ОписанияРеквизитов, 
		ЭлементАСД.УИД);
	ИмяЭлемента = СтрокаРеквизитовКоманднаяПанель.ИмяЭлемента;
	
	СхемаЭлемента = ПолучитьСхемаЭлемента(ИмяЭлемента, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "КоманднаяПанель");

	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, ЭлементАСД);
	
	Если НЕ ЭлементАСД.НаборСвойств.Свойство("РастягиватьПоГоризонтали") Тогда
		ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоГоризонтали", "Булево", Ложь);
	КонецЕсли;
	
	ДобавитьКнопки(ПараметрыВыполнения, ЭлементАСД, СхемаЭлемента);
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ДобавитьЕдинственнуюКнопку(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)
	Если ЭлементАСД.Элементы.Количество() <> 1 Тогда
		Возврат Ложь;
	КонецЕсли;  
	
	КнопкаАСД = ЭлементАСД.Элементы[0];
	Если КнопкаАСД.Тип <> "КнопкаФормы" Тогда
		Возврат Ложь;
	КонецЕсли;

	ДобавитьКнопку(
		ПараметрыВыполнения,
		КнопкаАСД, 
		СхемаРодителя,
		"ОбычнаяКнопка");
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ДобавитьКнопки(ПараметрыВыполнения, ЭлементАСД, СхемаРодитель)  
	Для Каждого КнопкаАСД Из ЭлементАСД.Элементы Цикл   
		Если КнопкаАСД.Тип = "ГруппаКнопок" Тогда
			ДобавитьГруппуКнопок(
				ПараметрыВыполнения,
				КнопкаАСД, 
				СхемаРодитель);
			Продолжить;
		КонецЕсли;
		
		Если КнопкаАСД.Тип = "Подменю" Тогда
			ДобавитьМеню(
				ПараметрыВыполнения,
				КнопкаАСД, 
				СхемаРодитель);
			Продолжить;
		КонецЕсли;
		ДобавитьКнопку(
			ПараметрыВыполнения,
			КнопкаАСД, 
			СхемаРодитель);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГруппуКнопок(ПараметрыВыполнения, КнопкаАСД, СхемаРодителя)  
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(ПараметрыВыполнения.ОписанияРеквизитов, КнопкаАСД.УИД);
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;

	СхемаЭлемента = ПолучитьСхемаЭлемента(ИмяЭлемента, КнопкаАСД.ТипЭлемента, КнопкаАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "ГруппаКнопок");
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, КнопкаАСД);
	
	ДобавитьКнопки(ПараметрыВыполнения, КнопкаАСД, СхемаЭлемента);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьМеню(ПараметрыВыполнения, КнопкаАСД, СхемаРодителя)  
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(ПараметрыВыполнения.ОписанияРеквизитов, КнопкаАСД.УИД);
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;

	СхемаЭлемента = ПолучитьСхемаЭлемента(ИмяЭлемента, КнопкаАСД.ТипЭлемента, КнопкаАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "Подменю");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Заголовок", "Строка", КнопкаАСД.НаборСвойств.Заголовок);
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, КнопкаАСД);
	
	Если КнопкаАСД.Картинка <> Неопределено Тогда
		Если ПустаяСтрока(КнопкаАСД.НаборСвойств.Заголовок) Тогда
			ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Отображение", "ОтображениеКнопки", "Картинка");
		Иначе
			ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Отображение", "ОтображениеКнопки", "КартинкаИТекст");
		КонецЕсли;
	КонецЕсли;
	
	Если КнопкаАСД.Картинка <> Неопределено Тогда
		ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Картинка", "БиблиотекаКартинок", КнопкаАСД.Картинка);
	КонецЕсли;
	
	ДобавитьКнопки(ПараметрыВыполнения, КнопкаАСД, СхемаЭлемента);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКнопку(ПараметрыВыполнения, КнопкаАСД, СхемаРодителя, ВидКнопкиФормы = "КнопкаКоманднойПанели")  
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитов(ПараметрыВыполнения.ОписанияРеквизитов, КнопкаАСД.УИД);
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;

	СхемаКнопки = ПолучитьСхемаЭлемента(ИмяЭлемента, КнопкаАСД.ТипЭлемента, КнопкаАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаКнопки, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаКнопки, "ИмяКоманды", "Строка", "КомандаЗаглушка");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаКнопки, "Заголовок", "Строка", КнопкаАСД.НаборСвойств.Заголовок);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаКнопки, "Вид", "ВидКнопкиФормы", ВидКнопкиФормы);
       
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаКнопки, КнопкаАСД);

	Если КнопкаАСД.Картинка <> Неопределено Тогда
		Если ПустаяСтрока(КнопкаАСД.НаборСвойств.Заголовок) Тогда
			ДобавитьСвойство(ПараметрыВыполнения, СхемаКнопки, "Отображение", "ОтображениеКнопки", "Картинка");
		Иначе
			ДобавитьСвойство(ПараметрыВыполнения, СхемаКнопки, "Отображение", "ОтображениеКнопки", "КартинкаИТекст");
		КонецЕсли;
	КонецЕсли;
	
	Если КнопкаАСД.Картинка <> Неопределено Тогда 
		ДобавитьСвойство(ПараметрыВыполнения, СхемаКнопки, "Картинка", "БиблиотекаКартинок", КнопкаАСД.Картинка);
	КонецЕсли;   	
КонецПроцедуры

#КонецОбласти 

&НаКлиенте
Процедура ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя)
	СхемаРодителя.ПодчиненныеЭлементы.Добавить(СхемаЭлемента);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСвойствоЭлемента(ПараметрыВыполнения, ЭлементФормы, ЭлементДанных)
	Для Каждого КлючЗначение Из ЭлементДанных.НаборСвойств Цикл
		ИмяСвойства = КлючЗначение.Ключ;
		СтрЗначениеСвойства = КлючЗначение.Значение;
		
		Если НЕ ЭлементДанных.ТипыСвойств.Свойство(ИмяСвойства) Тогда
			Продолжить;
		КонецЕсли;
		
		ТипСвойства = ЭлементДанных.ТипыСвойств[ИмяСвойства]; 
		
		СтрЗначениеСвойства = ПолучитьТипЗначениеСвойства(СтрЗначениеСвойства, ТипСвойства);
		
		ДобавитьСвойство(ПараметрыВыполнения, ЭлементФормы, ИмяСвойства, СтрЗначениеСвойства.Тип, СтрЗначениеСвойства.Значение); 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТипЗначениеСвойства(Значение, Тип)
	Результат = Новый Структура("Тип,Значение", Тип, Значение);
	
	Если Тип = "Булево" Тогда
		Результат.Значение = Булево(Значение);
	КонецЕсли;

	Если Тип = "Число" Тогда
		Результат.Значение = Число(Значение);
	КонецЕсли;

	Если Тип = "Цвет" Тогда
		Результат.Тип = "WebЦвета";
	КонецЕсли;
	
	Возврат Результат;
КонецФункции        

&НаКлиенте
Функция ЭтоПримитивныйТип(Тип)
	Возврат Тип = "Булево" ИЛИ Тип = "Дата" ИЛИ Тип = "Число" ИЛИ Тип = "Строка";
КонецФункции

&НаКлиенте
Функция ПолучитьСтрокуТаблицыРеквизитов(ОписанияРеквизитов, УИД)
	Результат = Новый Структура("ИмяРеквизита,ИмяЭлемента");

	ТекущееОписание = Неопределено;
	Для Каждого Описание Из ОписанияРеквизитов Цикл
		Если Описание.УИД <> УИД Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущееОписание = Описание;
		Прервать;
	КонецЦикла;
	Результат.ИмяРеквизита = ТекущееОписание.ИмяРеквизита;
	Результат.ИмяЭлемента = ТекущееОписание.ИмяЭлемента;
	
	Если ТекущееОписание.Номер > 1 Тогда
		СтрокаНомер = Формат(ТекущееОписание.Номер - 1, "ЧГ=0");
		Результат.ИмяРеквизита = Результат.ИмяРеквизита + СтрокаНомер;
		Результат.ИмяЭлемента = Результат.ИмяЭлемента + СтрокаНомер;
	КонецЕсли;
	
	Возврат Результат;	
КонецФункции

#КонецОбласти 
