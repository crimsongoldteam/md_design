// MIT License

// Copyright (c) 2025 Zherebtsov Nikita <nikita@crimsongold.ru>

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// https://github.com/crimsongoldteam/md_design

#Область ОбработчикиСобытийФормы

&НаКлиенте
Функция Получить(СемантическоеДерево, ПараметрыВыполнения) Экспорт
	Результат = Новый Структура("Реквизиты,Элементы,Данные,ЗаголовокФормы,Метаданные");
	ЕстьСвойствоЗаголовок = СемантическоеДерево.НаборСвойств.Свойство("Заголовок");

	Если ЕстьСвойствоЗаголовок Тогда
		Результат.ЗаголовокФормы = СемантическоеДерево.НаборСвойств.Заголовок;
	КонецЕсли;
	
	СхемаЭлементаФорма = ПолучитьСхемуЭлемента(ПараметрыВыполнения, СемантическоеДерево.УИД, "Форма", "БезТипа");
	Если ЕстьСвойствоЗаголовок Тогда 
		ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлементаФорма, "Заголовок", "Строка", СемантическоеДерево.НаборСвойств.Заголовок);
	КонецЕсли;
	
	ПараметрыВыполнения.Элементы.Добавить(СхемаЭлементаФорма);
	
	ПостроитьЭлементы(ПараметрыВыполнения, СемантическоеДерево, СхемаЭлементаФорма);

	Результат.Реквизиты = ПараметрыВыполнения.Реквизиты;
	Результат.Элементы = ПараметрыВыполнения.Элементы;
	Результат.Данные = ПараметрыВыполнения.Данные;
	Результат.Метаданные = ПараметрыВыполнения.Метаданные;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция СоздатьПараметрыВыполнения() Экспорт
	ПараметрыВыполнения = Новый Структура; 
	ПараметрыВыполнения.Вставить("ОписанияРеквизитов", Новый Массив);
	ПараметрыВыполнения.Вставить("Элементы", Новый Массив);
	ПараметрыВыполнения.Вставить("Данные", Новый Структура);
	ПараметрыВыполнения.Вставить("Метаданные", Новый Структура);
	ПараметрыВыполнения.Вставить("ДеревоМетаданных", Новый Структура);
	ПараметрыВыполнения.Вставить("Реквизиты", Новый Массив);
	ПараметрыВыполнения.Вставить("Префикс", "");

	Возврат ПараметрыВыполнения;
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

#Область Модули

&НаКлиенте
Функция СлужебныеФункции()
	Возврат ВладелецФормы.СлужебныеФункции();
КонецФункции

#КонецОбласти 

&НаКлиенте
Функция ПолучитьОписаниеРеквизита(ПараметрыВыполнения, Знач ИмяРеквизита, ОписаниеТипов, БезПрефикса = Ложь)
	Имя = ИмяРеквизита;
	Если НЕ БезПрефикса Тогда
		Имя = ПараметрыВыполнения.Префикс + ИмяРеквизита;
	КонецЕсли;        
	
	Результат = Новый Структура;
	Результат.Вставить("Имя", Имя);
	Результат.Вставить("ИмяРеквизитаБезПрефикса", ИмяРеквизита);
	Результат.Вставить("ОписаниеТипов", ОписаниеТипов);
	Результат.Вставить("Автоудаление", Ложь);
	Результат.Вставить("ИмяВладельца", Неопределено);
	Результат.Вставить("Подчиненные", Новый Массив);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ПолучитьСхемуЭлемента(ПараметрыВыполнения, ИмяРеквизита, Тип, Вид)
	Если ПустаяСтрока(ИмяРеквизита) Тогда
		ВызватьИсключение 
			"Не заполнено имя реквизита в построителе схемы формы. 
			|Это ошибка в обработке. Зарегистрируйте, пожалуйста, ошибку по адресу https://github.com/crimsongoldteam/md_design/issues";
	КонецЕсли;
	Результат = Новый Структура;
	Результат.Вставить("Имя", ПараметрыВыполнения.Префикс + ИмяРеквизита);
	Результат.Вставить("Тип", Тип);
	Результат.Вставить("Вид", Вид);
	Результат.Вставить("НаборСвойств", Новый Структура);
	Результат.Вставить("ПодчиненныеЭлементы", Новый Массив);
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, Ключ, Тип, Значение) 
	СтрЗначение = Новый Структура("Тип, Значение, ЭтоСистемноеПеречисление");
	СтрЗначение.Тип = Тип;
	СтрЗначение.Значение = Значение;
	СтрЗначение.ЭтоСистемноеПеречисление = НЕ ЭтоПримитивныйТип(Тип);
	СхемаЭлемента.НаборСвойств.Вставить(Ключ, СтрЗначение);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьМетаданные(ПараметрыВыполнения, ОписаниеТипов, СписокЗначений)  
	Если ПараметрыВыполнения.ДеревоМетаданных.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекТип Из ОписаниеТипов.Типы Цикл
		ИмяРаздела = Неопределено;
		
		Если СтрНачинаетсяС(ТекТип, "ПеречислениеСсылка") Тогда
			ИмяРаздела = "Перечисления";
		ИначеЕсли СтрНачинаетсяС(ТекТип, "СправочникСсылка") Тогда
			ИмяРаздела = "Справочники";
		Иначе
			Продолжить;
		КонецЕсли; 
		ТекВид = Сред(ТекТип, СтрНайти(ТекТип, ".") + 1);
		
		ДанныеРаздела = СоздатьПолучитьРазделМетаданных(ПараметрыВыполнения, ИмяРаздела);
		
		Если ДанныеРаздела.Свойство(ТекВид) Тогда
			Продолжить;
		КонецЕсли;
		
		ЭтоНовый = ЭтоНовыйОбъектМетаданных(ПараметрыВыполнения, ТекТип);
		
		Если НЕ ЭтоНовый Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеОбъектаМетаданных =  Новый Структура("Значения,Формы,ЭтоНовый", Новый Массив, Новый Структура, Истина);
		
		Если СписокЗначений <> Неопределено Тогда
			Для Каждого Значение Из СписокЗначений Цикл
				ОписаниеОбъектаМетаданных.Значения.Добавить(СлужебныеФункции().СтрокуВНотациюПаскаля(Значение));
			КонецЦикла;
		КонецЕсли;
		
		ДанныеРаздела.Вставить(ТекВид, ОписаниеОбъектаМетаданных);
	КонецЦикла;
КонецПроцедуры           

&НаКлиенте
Функция ЭтоНовыйОбъектМетаданных(ПараметрыВыполнения, ТипОбъекта)
	ИмяРаздела = Неопределено;
	Если СтрНачинаетсяС(ТипОбъекта, "ПеречислениеСсылка") Тогда
		ИмяРаздела = "Перечисления";
	ИначеЕсли СтрНачинаетсяС(ТипОбъекта, "СправочникСсылка") Тогда
		ИмяРаздела = "Справочники";
	КонецЕсли;
	ТекВид = Сред(ТипОбъекта, СтрНайти(ТипОбъекта, ".") + 1);
	
	МассивОбъектов = ПараметрыВыполнения.ДеревоМетаданных[ИмяРаздела];
	
	Для Каждого ЭлементОбъект Из МассивОбъектов Цикл
		Если НРег(ЭлементОбъект.Имя) = НРег(ТекВид) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция СоздатьПолучитьРазделМетаданных(ПараметрыВыполнения, Раздел)
	Если ПараметрыВыполнения.Метаданные.Свойство(Раздел) Тогда
		Возврат ПараметрыВыполнения.Метаданные[Раздел];
	КонецЕсли;
	
	Результат = Новый Структура;
	ПараметрыВыполнения.Метаданные.Вставить(Раздел, Результат);
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ПолучитьСхемуРеквизитов(ПараметрыВыполнения, ОписанияРеквизитов)
	Результат = Новый Массив;

	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ПостроитьЭлементы(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)      
	Подчиненные = ЭлементАСД.Элементы;
	
	Для Каждого ПодчиненныйЭлементАСД Из Подчиненные Цикл
		ПостроитьЭлемент(ПараметрыВыполнения, ПодчиненныйЭлементАСД, СхемаРодителя);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПостроитьЭлемент(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)
	Если ДобавитьГоризонтальнуюГруппу(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли; 

	Если ДобавитьОднострочнуюГруппу(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли; 

	Если ДобавитьВертикальнуюГруппу(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли;

	Если ДобавитьПолеВвода(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли;

	Если ДобавитьФлажок(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли;

	Если ДобавитьЭлементНадпись(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли;

	Если ДобавитьТаблицуДерево(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли;

	Если ДобавитьСтраницы(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли;
	
	Если ДобавитьКоманднуюПанель(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ДобавитьГоризонтальнуюГруппу(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)  	
	Если ЭлементАСД.Тип <> "ГоризонтальнаяГруппа" Тогда 
		Возврат Ложь;
	КонецЕсли;

	ИмяЭлемента = ЭлементАСД.УИД;
	
	СхемаЭлемента = ПолучитьСхемуЭлемента(ПараметрыВыполнения, ИмяЭлемента, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, ЭлементАСД);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "ОбычнаяГруппа");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Отображение", "ОтображениеОбычнойГруппы", "Нет");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "ОтображатьЗаголовок", "Булево", Ложь);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Группировка", "ГруппировкаПодчиненныхЭлементовФормы", "ГоризонтальнаяВсегда");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоГоризонтали", "Булево", Истина);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоВертикали", "Булево", Ложь);
	
	ПостроитьЭлементы(ПараметрыВыполнения, ЭлементАСД, СхемаЭлемента);
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ДобавитьВертикальнуюГруппу(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)  	
	Если ЭлементАСД.Тип <> "ВертикальнаяГруппа" Тогда 
		Возврат Ложь;
	КонецЕсли;

	СхемаЭлемента = ПолучитьСхемуЭлемента(ПараметрыВыполнения, ЭлементАСД.УИД, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "ОбычнаяГруппа");
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, ЭлементАСД);
	
	Если НЕ ЭлементАСД.НаборСвойств.Свойство("Отображение") Тогда   
		ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Отображение", "ОтображениеОбычнойГруппы", "Нет");
	КонецЕсли;
	
	Если НЕ ЭлементАСД.НаборСвойств.Свойство("ОтображатьЗаголовок")
		И (НЕ ЭлементАСД.НаборСвойств.Свойство("Заголовок")
		ИЛИ ПустаяСтрока(ЭлементАСД.НаборСвойств.Заголовок)) Тогда
		ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "ОтображатьЗаголовок", "Булево", Ложь);
	КонецЕсли;

	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Группировка", "ГруппировкаПодчиненныхЭлементовФормы", "Вертикальная");

	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоГоризонтали", "Булево", Истина);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоВертикали", "Булево", Ложь);
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, ЭлементАСД);
	
	ПостроитьЭлементы(ПараметрыВыполнения, ЭлементАСД, СхемаЭлемента);   
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ДобавитьОднострочнуюГруппу(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)  	
	Если ЭлементАСД.Тип <> "ОднострочнаяГруппа" Тогда 
		Возврат Ложь;
	КонецЕсли;

	СхемаЭлемента = ПолучитьСхемуЭлемента(ПараметрыВыполнения, ЭлементАСД.УИД, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, ЭлементАСД);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "ОбычнаяГруппа");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Отображение", "ОтображениеОбычнойГруппы", "Нет");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "ОтображатьЗаголовок", "Булево", Ложь);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Группировка", "ГруппировкаПодчиненныхЭлементовФормы", "ГоризонтальнаяВсегда");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоГоризонтали", "Булево", Истина);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоВертикали", "Булево", Ложь);

	ПостроитьЭлементы(ПараметрыВыполнения, ЭлементАСД, СхемаЭлемента);
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ДобавитьСтраницы(ПараметрыВыполнения, СтраницыАСД, СхемаРодителя)  	
	Если СтраницыАСД.Тип <> "Страницы" Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	СхемаЭлемента = ПолучитьСхемуЭлемента(ПараметрыВыполнения, СтраницыАСД.УИД, СтраницыАСД.ТипЭлемента, СтраницыАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);

	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "Страницы");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоГоризонтали", "Булево", Истина);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоВертикали", "Булево", Ложь);
	
	Для Каждого СтраницаАСД Из СтраницыАСД.Элементы Цикл
		ДобавитьСтраницу(ПараметрыВыполнения, СхемаЭлемента, СтраницаАСД);
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ДобавитьСтраницу(ПараметрыВыполнения, СхемаРодителя, СтраницаАСД)  	  
	СхемаЭлемента = ПолучитьСхемуЭлемента(ПараметрыВыполнения, СтраницаАСД.УИД, СтраницаАСД.ТипЭлемента, СтраницаАСД.ВидЭлемента);
	
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);

	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "Страница");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Заголовок", "Строка", СтраницаАСД.НаборСвойств.Заголовок);
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, СтраницаАСД);
	
	ПостроитьЭлементы(ПараметрыВыполнения, СтраницаАСД, СхемаЭлемента);
КонецПроцедуры

&НаКлиенте
Функция ДобавитьПолеВвода(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)     
	Если ЭлементАСД.Тип <> "ПолеВвода" Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	СхемаЭлемента = ПолучитьСхемуЭлемента(ПараметрыВыполнения, ЭлементАСД.УИД, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "ПутьКДанным", "Строка", ПараметрыВыполнения.Префикс + ЭлементАСД.УИДАтрибута);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидПоляФормы", "ПолеВвода");

	ЗначениеПриведенное = СлужебныеФункции().ПривестиЗначениеКДопустимомуТипу(ЭлементАСД.ОписаниеТипов, ЭлементАСД.Значение);
	Данные = Новый Структура("Тип,Значение", "ПолеФормы", ЗначениеПриведенное);
	ПараметрыВыполнения.Данные.Вставить(ПараметрыВыполнения.Префикс + ЭлементАСД.УИДАтрибута, Данные);
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, ЭлементАСД);

	ПараметрыВыполнения.Реквизиты.Добавить(ПолучитьОписаниеРеквизита(ПараметрыВыполнения, ЭлементАСД.УИДАтрибута, ЭлементАСД.ОписаниеТипов));

	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ДобавитьЭлементНадпись(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)  	
	Если ЭлементАСД.Тип <> "Надпись" Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	СхемаЭлемента = ПолучитьСхемуЭлемента(ПараметрыВыполнения, ЭлементАСД.УИД, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидДекорацииФормы", "Надпись");

	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, ЭлементАСД);
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ДобавитьФлажок(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)  
	Если ЭлементАСД.Тип <> "ПолеФлажка" Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	СхемаЭлемента = ПолучитьСхемуЭлемента(ПараметрыВыполнения,ЭлементАСД.УИД, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);

	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидПоляФормы", "ПолеФлажка");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "ПутьКДанным", "Строка", ПараметрыВыполнения.Префикс + ЭлементАСД.УИДАтрибута);

	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, ЭлементАСД);
	
	Данные = Новый Структура("Тип,Значение", "ПолеФормы", ЭлементАСД.Значение);
	ПараметрыВыполнения.Данные.Вставить(ПараметрыВыполнения.Префикс + ЭлементАСД.УИДАтрибута, Данные);
	
	ПараметрыВыполнения.Реквизиты.Добавить(ПолучитьОписаниеРеквизита(ПараметрыВыполнения, ЭлементАСД.УИДАтрибута, ЭлементАСД.ОписаниеТипов));
	
	Возврат Истина;
КонецФункции

#Область ТаблицаДерево

&НаКлиенте
Функция ДобавитьТаблицуДерево(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)
	ТипДерево = "Дерево";
	ТипТаблица = "Таблица";
	
	Если ЭлементАСД.Тип <> ТипДерево
		И ЭлементАСД.Тип <> ТипТаблица Тогда 
		Возврат Ложь;
	КонецЕсли;

	СхемаЭлементовТаблица = ПолучитьСхемуЭлемента(ПараметрыВыполнения,ЭлементАСД.УИД, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлементовТаблица, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлементовТаблица, "ПутьКДанным", "Строка", ПараметрыВыполнения.Префикс + ЭлементАСД.УИДАтрибута);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлементовТаблица, "ПоложениеКоманднойПанели", "ПоложениеКоманднойПанелиЭлементаФормы", "Нет");
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлементовТаблица, ЭлементАСД);
	
	КолонкиАСД = ЭлементАСД.Колонки;    
	
	ОписаниеРеквизитаТаблица = ПолучитьОписаниеРеквизита(ПараметрыВыполнения, ЭлементАСД.УИДАтрибута, ЭлементАСД.ОписаниеТипов);
	ПараметрыВыполнения.Реквизиты.Добавить(ОписаниеРеквизитаТаблица);
	
	СоответствиеКолонок = Новый Соответствие;
	
	Для Каждого КолонкаАСД Из КолонкиАСД Цикл 
		ПараметрыДобавления = ПолучитьПараметрыДобавленияКолонкиТаблицы(ПараметрыВыполнения, СоответствиеКолонок);
		ПараметрыДобавления.СхемаРодителя = СхемаЭлементовТаблица;
		ПараметрыДобавления.ИмяРеквизитаТаблица = ЭлементАСД.УИДАтрибута;
		ПараметрыДобавления.КолонкаАСД = КолонкаАСД;
		ПараметрыДобавления.РодительАСД = ЭлементАСД;
		ПараметрыДобавления.ОписаниеРеквизитаТаблица = ОписаниеРеквизитаТаблица;
		
		ДобавитьКолонкуТаблицыРекурсивно(ПараметрыДобавления);
	КонецЦикла;          

	Строки = ЭлементАСД.Строки; 
	
	Данные = Новый Структура("Тип,Строки", ТипТаблица, Новый Массив);
	ПараметрыВыполнения.Данные.Вставить(ПараметрыВыполнения.Префикс + ЭлементАСД.УИДАтрибута, Данные);
	Если ЭлементАСД.Тип = ТипДерево Тогда
		Данные.Тип = ТипДерево;
		ДобавитьДеревоСтроки(ПараметрыВыполнения, Строки, СоответствиеКолонок, Данные, Истина);
	Иначе
		ДобавитьДеревоСтроки(ПараметрыВыполнения, Строки, СоответствиеКолонок, Данные, Ложь);
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ДобавитьГруппуКолонокТаблицы(ПараметрыВыполнения, СхемаРодителя, ИмяЭлемента, ГруппировкаКолонок, Заголовок = Неопределено)
	НоваяКолонка = ПолучитьСхемуЭлемента(ПараметрыВыполнения, ИмяЭлемента, "ГруппаФормы", "ГруппаКолонок");
	ДобавитьЭлемент(ПараметрыВыполнения, НоваяКолонка, СхемаРодителя);

	ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "Вид", "ВидГруппыФормы", "ГруппаКолонок");
	ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "Группировка", "ГруппировкаКолонок", ГруппировкаКолонок);
	
	Если Заголовок <> Неопределено Тогда  
		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "Заголовок", "Строка", Заголовок);
		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "ОтображатьВШапке", "Булево", Истина);
	КонецЕсли;
	
	Возврат НоваяКолонка;
КонецФункции

&НаКлиенте
Функция ПолучитьПараметрыДобавленияКолонкиТаблицы(ПараметрыВыполнения, СоответствиеКолонок)
	Результат = Новый Структура;
	Результат.Вставить("ПараметрыВыполнения", ПараметрыВыполнения);
	Результат.Вставить("СоответствиеКолонок", СоответствиеКолонок);
	Результат.Вставить("СхемаРодителя", Неопределено);
	Результат.Вставить("КолонкаАСД", Неопределено);
	Результат.Вставить("ИмяРеквизитаТаблица", "");
	Результат.Вставить("РодительАСД", Неопределено);
	Результат.Вставить("ОписаниеРеквизитаТаблица", Неопределено);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ДобавитьКолонкуТаблицыРекурсивно(ПараметрыДобавления)  
	ПараметрыВыполнения = ПараметрыДобавления.ПараметрыВыполнения;  
	КолонкаАСД = ПараметрыДобавления.КолонкаАСД;  
	СхемаРодителя = ПараметрыДобавления.СхемаРодителя;  
	РодительАСД = ПараметрыДобавления.РодительАСД;  
	ИмяРеквизитаТаблица = ПараметрыДобавления.ИмяРеквизитаТаблица;  
	
	Если КолонкаАСД.Тип = "ГруппаКолонокТаблицы" Тогда 
		СхемаРодителя = ДобавитьГруппуКолонокТаблицы(ПараметрыВыполнения, СхемаРодителя, КолонкаАСД.УИД, "Горизонтальная");
		ДобавитьСвойство(ПараметрыВыполнения, СхемаРодителя, "ОтображатьВШапке", "Булево", Истина);
		
		УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаРодителя, КолонкаАСД);
	
		ДобавитьНижестоящиеКолонки(ПараметрыВыполнения, ПараметрыДобавления, КолонкаАСД, СхемаРодителя);      
		Возврат;
	КонецЕсли;
	
	Если КолонкаАСД.ЕстьВертикальнаяГруппа Тогда
		СхемаРодителя = ДобавитьГруппуКолонокТаблицы(ПараметрыВыполнения, СхемаРодителя, КолонкаАСД.УИДВертикальнаяГруппа, "Вертикальная");
	КонецЕсли;
	
	Если КолонкаАСД.ЕстьЗначение Тогда   
		ПараметрыДобавленияКолонки = ПолучитьПараметрыДобавленияКолонкиТаблицы(ПараметрыВыполнения, ПараметрыДобавления.СоответствиеКолонок);
		ПараметрыДобавленияКолонки.СхемаРодителя = СхемаРодителя;
		ПараметрыДобавленияКолонки.ИмяРеквизитаТаблица = ИмяРеквизитаТаблица;
		ПараметрыДобавленияКолонки.КолонкаАСД = КолонкаАСД;
		ПараметрыДобавленияКолонки.РодительАСД = РодительАСД;
		ПараметрыДобавленияКолонки.ОписаниеРеквизитаТаблица = ПараметрыДобавления.ОписаниеРеквизитаТаблица;
		
		ДобавитьКолонкуТаблицы(ПараметрыДобавленияКолонки);     
		
	КонецЕсли;
	
	Если КолонкаАСД.ЕстьГоризонтальнаяГруппа Тогда
		
		ЗаголовокГруппы = Неопределено;

		СхемаРодителя = ДобавитьГруппуКолонокТаблицы(
			ПараметрыВыполнения,
			СхемаРодителя, 
			КолонкаАСД.УИДГоризонтальнаяГруппа, 
			"Горизонтальная",
			ЗаголовокГруппы);
	КонецЕсли;
	
	ДобавитьНижестоящиеКолонки(ПараметрыВыполнения, ПараметрыДобавления, КолонкаАСД, СхемаРодителя);         
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьНижестоящиеКолонки(ПараметрыВыполнения, ПараметрыДобавления, КолонкаАСД, СхемаРодителя) 
	Для Каждого ТекКолонкаАСД Из КолонкаАСД.Колонки Цикл  
		ПараметрыДобавленияКолонки = ПолучитьПараметрыДобавленияКолонкиТаблицы(ПараметрыВыполнения, ПараметрыДобавления.СоответствиеКолонок);
		ПараметрыДобавленияКолонки.СхемаРодителя = СхемаРодителя;
		ПараметрыДобавленияКолонки.ИмяРеквизитаТаблица = ПараметрыДобавления.ИмяРеквизитаТаблица;
		ПараметрыДобавленияКолонки.КолонкаАСД = ТекКолонкаАСД;
		ПараметрыДобавленияКолонки.РодительАСД = КолонкаАСД;
		ПараметрыДобавленияКолонки.ОписаниеРеквизитаТаблица = ПараметрыДобавления.ОписаниеРеквизитаТаблица;
		
		ДобавитьКолонкуТаблицыРекурсивно(ПараметрыДобавленияКолонки);
	КонецЦикла;  	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСвойстваКолонкиАСД(КолонкаАСД, РодительАСД)   
	Результат = Новый Структура;
	
	Результат.Вставить("ДобавлятьВертикальнуюГруппу", Ложь);
	Результат.Вставить("ДобавлятьГоризонтальнуюГруппу", Ложь);
	Результат.Вставить("ДобавлятьГруппуКолонок", Ложь);
	Результат.Вставить("ДобавлятьКолонкуТаблицы", Ложь);
	
	КоличествоКолонок = КолонкаАСД.Колонки.Количество();
	
	ЕстьПодчиненные = КоличествоКолонок > 0;
	ЕстьГруппаПодчиненных = КоличествоКолонок > 1;
	
	Результат.ДобавлятьГруппуКолонок = 
		КолонкаАСД.Тип = "ГруппаКолонокТаблицы";
		
	Результат.ДобавлятьВертикальнуюГруппу = 
		НЕ Результат.ДобавлятьГруппуКолонок 
		И ЕстьПодчиненные 
		И (РодительАСД.Тип = "ГоризонтальнаяГруппа" 
			ИЛИ РодительАСД.Тип = "Таблица");
			
	Результат.ДобавлятьГоризонтальнуюГруппу =
		Результат.ДобавлятьГруппуКолонок ИЛИ
		ЕстьГруппаПодчиненных;
			
	Результат.ДобавлятьКолонкуТаблицы =
		НЕ Результат.ДобавлятьГруппуКолонок;
		
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ДобавитьКолонкуТаблицы(ПараметрыДобавления)  
	ПараметрыВыполнения = ПараметрыДобавления.ПараметрыВыполнения;
	КолонкаАСД = ПараметрыДобавления.КолонкаАСД;  
	СхемаРодителя = ПараметрыДобавления.СхемаРодителя;
	ИмяРеквизитаТаблица = ПараметрыВыполнения.Префикс +  ПараметрыДобавления.ИмяРеквизитаТаблица;
	СоответствиеКолонок = ПараметрыДобавления.СоответствиеКолонок;      
	ОписаниеРеквизитаТаблица = ПараметрыДобавления.ОписаниеРеквизитаТаблица;      

	СоответствиеКолонок.Вставить(КолонкаАСД.УИДАтрибута, КолонкаАСД);
	
	Если КолонкаАСД.ЕстьГруппаВместе Тогда
		СхемаРодителя = ДобавитьГруппуКолонокТаблицы(
		    ПараметрыВыполнения,
			СхемаРодителя, 
			КолонкаАСД.УИДГруппаВместе, 
			"ВЯчейке", 
			КолонкаАСД.НаборСвойств.Заголовок);
		
	КонецЕсли;
	
	Если КолонкаАСД.ЕстьФлажок Тогда
		НоваяКолонка = ПолучитьСхемуЭлемента(ПараметрыВыполнения, КолонкаАСД.УИДФлажок, КолонкаАСД.ТипЭлемента, "ПолеФлажка");
		ДобавитьЭлемент(ПараметрыВыполнения, НоваяКолонка, СхемаРодителя);
	
		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "Вид", "ВидПоляФормы", "ПолеФлажка");
		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "ПутьКДанным", "Строка", ИмяРеквизитаТаблица + "." + КолонкаАСД.УИДАтрибутаФлажок);
		Если КолонкаАСД.ЕстьГруппаВместе Тогда
			ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "ОтображатьВШапке", "Булево", Ложь);
		КонецЕсли;
		
		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "Заголовок", "Строка", КолонкаАСД.НаборСвойств.Заголовок);
		
		ОписаниеРеквизита = ПолучитьОписаниеРеквизита(ПараметрыВыполнения, КолонкаАСД.УИДАтрибутаФлажок, КолонкаАСД.ОписаниеТиповФлажок, Истина);
		ОписаниеРеквизита.ИмяВладельца = ИмяРеквизитаТаблица;    
		ОписаниеРеквизита.Автоудаление = Истина;
		ОписаниеРеквизитаТаблица.Подчиненные.Добавить(ОписаниеРеквизита);
	КонецЕсли;
	
	Если КолонкаАСД.ЕстьЗначение Тогда
		
		НоваяКолонка = ПолучитьСхемуЭлемента(ПараметрыВыполнения, КолонкаАСД.УИД, КолонкаАСД.ТипЭлемента, КолонкаАСД.ВидЭлемента);
		ДобавитьЭлемент(ПараметрыВыполнения, НоваяКолонка, СхемаРодителя);
	
		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "Вид", "ВидПоляФормы", "ПолеВвода");
		ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "ПутьКДанным", "Строка", ИмяРеквизитаТаблица + "." + КолонкаАСД.УИДАтрибута);
		
		УстановитьСвойствоЭлемента(ПараметрыВыполнения, НоваяКолонка, КолонкаАСД);
		
		ОтображатьВШапке = Истина;
		Если КолонкаАСД.ЕстьГруппаВместе Тогда
			ОтображатьВШапке = Ложь;
		КонецЕсли;
		
		Если КолонкаАСД.НаборСвойств.Свойство("Заголовок") Тогда
			ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "Заголовок", "Строка", КолонкаАСД.НаборСвойств.Заголовок);
		Иначе
			ОтображатьВШапке = Ложь;
		КонецЕсли;      
		
		Если НЕ ОтображатьВШапке Тогда
			ДобавитьСвойство(ПараметрыВыполнения, НоваяКолонка, "ОтображатьВШапке", "Булево", Ложь);
		КонецЕсли;
		
		ОписаниеРеквизита = ПолучитьОписаниеРеквизита(ПараметрыВыполнения, КолонкаАСД.УИДАтрибута, КолонкаАСД.ОписаниеТипов, Истина);
		ОписаниеРеквизита.ИмяВладельца = ИмяРеквизитаТаблица;
		ОписаниеРеквизита.Автоудаление = Истина;
		ОписаниеРеквизитаТаблица.Подчиненные.Добавить(ОписаниеРеквизита);
		
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДеревоСтроки(ПараметрыВыполнения, Строки, СоответствиеКолонок, ИсходящиеДанные, ЭтоДерево)
	Для Каждого Строка Из Строки Цикл 
		ОписаниеСтроки = Новый Структура("Строки,Значения", Новый Массив, Новый Структура);
		ИсходящиеДанные.Строки.Добавить(ОписаниеСтроки);
		
		Для Каждого КЗЯчейка Из Строка.Ячейки Цикл  
			Ячейка = КЗЯчейка.Значение;
			Колонка = СоответствиеКолонок.Получить(КЗЯчейка.Ключ);
			
			Если Не ПустаяСтрока(Ячейка.Значение) Тогда
				ЗначениеПриведенное = СлужебныеФункции().ПривестиЗначениеКДопустимомуТипу(Колонка.ОписаниеТипов, Ячейка.Значение);
				ОписаниеСтроки.Значения.Вставить(КЗЯчейка.Ключ, ЗначениеПриведенное);
			КонецЕсли;
			
			Если Ячейка.ЕстьФлажок Тогда
				ОписаниеСтроки.Значения.Вставить(Колонка.УИДАтрибутаФлажок, Ячейка.ЗначениеФлажка);
			КонецЕсли;
		КонецЦикла;
		
		Если ЭтоДерево Тогда
			ДобавитьДеревоСтроки(ПараметрыВыполнения, Строка.Строки, СоответствиеКолонок, ОписаниеСтроки, Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Кнопки

&НаКлиенте
Функция ДобавитьКоманднуюПанель(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)  
	Если ЭлементАСД.Тип <> "КоманднаяПанель" Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	Если ДобавитьЕдинственнуюКнопку(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя) Тогда
		Возврат Истина;
	КонецЕсли;

	СхемаЭлемента = ПолучитьСхемуЭлемента(ПараметрыВыполнения, ЭлементАСД.УИД, ЭлементАСД.ТипЭлемента, ЭлементАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "КоманднаяПанель");

	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, ЭлементАСД);
	
	Если НЕ ЭлементАСД.НаборСвойств.Свойство("РастягиватьПоГоризонтали") Тогда
		ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "РастягиватьПоГоризонтали", "Булево", Ложь);
	КонецЕсли;
	
	ДобавитьКнопки(ПараметрыВыполнения, ЭлементАСД, СхемаЭлемента);
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ДобавитьЕдинственнуюКнопку(ПараметрыВыполнения, ЭлементАСД, СхемаРодителя)
	Если ЭлементАСД.Элементы.Количество() <> 1 Тогда
		Возврат Ложь;
	КонецЕсли;  
	
	КнопкаАСД = ЭлементАСД.Элементы[0];
	Если КнопкаАСД.Тип <> "КнопкаФормы" Тогда
		Возврат Ложь;
	КонецЕсли;

	ДобавитьКнопку(
		ПараметрыВыполнения,
		КнопкаАСД, 
		СхемаРодителя,
		"ОбычнаяКнопка");
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ДобавитьКнопки(ПараметрыВыполнения, ЭлементАСД, СхемаРодитель)  
	Для Каждого КнопкаАСД Из ЭлементАСД.Элементы Цикл   
		Если КнопкаАСД.Тип = "ГруппаКнопок" Тогда
			ДобавитьГруппуКнопок(
				ПараметрыВыполнения,
				КнопкаАСД, 
				СхемаРодитель);
			Продолжить;
		КонецЕсли;
		
		Если КнопкаАСД.Тип = "Подменю" Тогда
			ДобавитьМеню(
				ПараметрыВыполнения,
				КнопкаАСД, 
				СхемаРодитель);
			Продолжить;
		КонецЕсли;
		ДобавитьКнопку(
			ПараметрыВыполнения,
			КнопкаАСД, 
			СхемаРодитель);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьГруппуКнопок(ПараметрыВыполнения, КнопкаАСД, СхемаРодителя)  

	СхемаЭлемента = ПолучитьСхемуЭлемента(ПараметрыВыполнения, КнопкаАСД.УИД, КнопкаАСД.ТипЭлемента, КнопкаАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "ГруппаКнопок");
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, КнопкаАСД);
	
	ДобавитьКнопки(ПараметрыВыполнения, КнопкаАСД, СхемаЭлемента);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьМеню(ПараметрыВыполнения, КнопкаАСД, СхемаРодителя)  
	СвойствоКартинка = "Картинка";

	СхемаЭлемента = ПолучитьСхемуЭлемента(ПараметрыВыполнения, КнопкаАСД.УИД, КнопкаАСД.ТипЭлемента, КнопкаАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Вид", "ВидГруппыФормы", "Подменю");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Заголовок", "Строка", КнопкаАСД.НаборСвойств.Заголовок);
	
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаЭлемента, КнопкаАСД);
	
	КартинкаКнопки = Неопределено;
	КнопкаАСД.НаборСвойств.Свойство(СвойствоКартинка, КартинкаКнопки);
	
	Если КартинкаКнопки <> Неопределено Тогда
		Если ПустаяСтрока(КнопкаАСД.НаборСвойств.Заголовок) Тогда
			ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Отображение", "ОтображениеКнопки", "Картинка");
		Иначе
			ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, "Отображение", "ОтображениеКнопки", "КартинкаИТекст");
		КонецЕсли;
	КонецЕсли;
	
	Если КартинкаКнопки <> Неопределено Тогда
		ДобавитьСвойство(ПараметрыВыполнения, СхемаЭлемента, СвойствоКартинка, "БиблиотекаКартинок", КартинкаКнопки);
	КонецЕсли;
	
	ДобавитьКнопки(ПараметрыВыполнения, КнопкаАСД, СхемаЭлемента);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКнопку(ПараметрыВыполнения, КнопкаАСД, СхемаРодителя, ВидКнопкиФормы = "КнопкаКоманднойПанели")  
	СвойствоКартинка = "Картинка";
	
	СхемаКнопки = ПолучитьСхемуЭлемента(ПараметрыВыполнения, КнопкаАСД.УИД, КнопкаАСД.ТипЭлемента, КнопкаАСД.ВидЭлемента);
	ДобавитьЭлемент(ПараметрыВыполнения, СхемаКнопки, СхемаРодителя);
	
	ДобавитьСвойство(ПараметрыВыполнения, СхемаКнопки, "ИмяКоманды", "Строка", "КомандаЗаглушка");
	ДобавитьСвойство(ПараметрыВыполнения, СхемаКнопки, "Заголовок", "Строка", КнопкаАСД.НаборСвойств.Заголовок);
	ДобавитьСвойство(ПараметрыВыполнения, СхемаКнопки, "Вид", "ВидКнопкиФормы", ВидКнопкиФормы);
       
	УстановитьСвойствоЭлемента(ПараметрыВыполнения, СхемаКнопки, КнопкаАСД);
	
	КартинкаКнопки = Неопределено;
	КнопкаАСД.НаборСвойств.Свойство(СвойствоКартинка, КартинкаКнопки);

	Если КартинкаКнопки <> Неопределено Тогда
		Если ПустаяСтрока(КнопкаАСД.НаборСвойств.Заголовок) Тогда
			ДобавитьСвойство(ПараметрыВыполнения, СхемаКнопки, "Отображение", "ОтображениеКнопки", "Картинка");
		Иначе
			ДобавитьСвойство(ПараметрыВыполнения, СхемаКнопки, "Отображение", "ОтображениеКнопки", "КартинкаИТекст");
		КонецЕсли;
	КонецЕсли;
	
	Если КартинкаКнопки <> Неопределено Тогда 
		ДобавитьСвойство(ПараметрыВыполнения, СхемаКнопки, СвойствоКартинка, "БиблиотекаКартинок", КартинкаКнопки);
	КонецЕсли;   	
КонецПроцедуры

#КонецОбласти 

&НаКлиенте
Процедура ДобавитьЭлемент(ПараметрыВыполнения, СхемаЭлемента, СхемаРодителя)
	СхемаРодителя.ПодчиненныеЭлементы.Добавить(СхемаЭлемента);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСвойствоЭлемента(ПараметрыВыполнения, ЭлементФормы, ЭлементДанных)
	Для Каждого КлючЗначение Из ЭлементДанных.НаборСвойств Цикл
		ИмяСвойства = КлючЗначение.Ключ;
		СтрЗначениеСвойства = КлючЗначение.Значение;
		
		Если НЕ ЭлементДанных.ТипыСвойств.Свойство(ИмяСвойства) Тогда
			Продолжить;
		КонецЕсли;
		
		ТипСвойства = ЭлементДанных.ТипыСвойств[ИмяСвойства]; 
		
		СтрЗначениеСвойства = ПолучитьТипЗначениеСвойства(СтрЗначениеСвойства, ТипСвойства);
		
		ДобавитьСвойство(ПараметрыВыполнения, ЭлементФормы, ИмяСвойства, СтрЗначениеСвойства.Тип, СтрЗначениеСвойства.Значение); 
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТипЗначениеСвойства(Значение, Тип)
	Результат = Новый Структура("Тип,Значение", Тип, Значение);
	
	Если Тип = "Булево" Тогда
		Результат.Значение = Булево(Значение);
	КонецЕсли;

	Если Тип = "Число" Тогда
		Результат.Значение = Число(Значение);
	КонецЕсли;

	Если Тип = "Цвет" Тогда
		Результат.Тип = "WebЦвета";
	КонецЕсли;
	
	Возврат Результат;
КонецФункции        

&НаКлиенте
Функция ЭтоПримитивныйТип(Тип)
	Возврат Тип = "Булево" ИЛИ Тип = "Дата" ИЛИ Тип = "Число" ИЛИ Тип = "Строка";
КонецФункции

#КонецОбласти 
