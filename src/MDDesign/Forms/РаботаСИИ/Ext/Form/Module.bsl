// MIT License

// Copyright (c) 2025 Zherebtsov Nikita <nikita@crimsongold.ru>

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// https://github.com/crimsongoldteam/md_design

#Область ОписаниеПеременных

// Текст промпта для чата с ИИ
&НаКлиенте
Перем мПромптДляЧата;

// Текст промпта для определения типов элементов
&НаКлиенте
Перем мПромптОпределениеТипов;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Функция ОтправитьВЧат(Сообщение, Контекст, Настройки) Экспорт
	ЧерезПровайдера = ЭтоЗапросЧерезПровайдера(Настройки);
	
	Промпт = Неопределено;
	Если ЧерезПровайдера Тогда
		Промпт = ПолучитьПромптДляЧата();
	КонецЕсли;
	Сообщения = СформироватьСообщения(Сообщение, Контекст, Промпт);
	
	Возврат ОтправитьСообщения(Сообщения, ПолучитьТипыЗапросов().Чат, Настройки);
КонецФункции

&НаКлиенте
Функция ПолучитьВозможныеТипы(Заголовок, Настройки) Экспорт
	ЧерезПровайдера = ЭтоЗапросЧерезПровайдера(Настройки);
	
	Промпт = Неопределено;
	Если ЧерезПровайдера Тогда
		Промпт = ПолучитьПромптОпределениеТипов();
	КонецЕсли;
	МассивСообщений = СформироватьСообщения(Заголовок, Неопределено, Промпт);
	
	Возврат ОтправитьСообщения(МассивСообщений, ПолучитьТипыЗапросов().ОпределениеТипов, Настройки);
КонецФункции

&НаКлиенте
Функция ПолучитьНастройки() Экспорт
	Результат = Новый Структура;
	Результат.Вставить("ПровайдерИИ");
	Результат.Вставить("ТокенИИ");
	Результат.Вставить("МодельИИ");
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Модули

&НаКлиенте
Функция СлужебныеФункции()
	Возврат ВладелецФормы.СлужебныеФункции();
КонецФункции

#КонецОбласти

&НаКлиенте
Функция ПолучитьТаймаутHTTPСоединения() Экспорт
	Возврат 240;
КонецФункции

&НаКлиенте
Функция ПолучитьТипыЗапросов()
	Результат = Новый Структура;
	Результат.Вставить("Чат", "chat");
	Результат.Вставить("ОпределениеТипов", "types_detection");
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ЭтоЗапросЧерезПровайдера(Настройки)
	Возврат НЕ ПустаяСтрока(Настройки.ПровайдерИИ)
	И НЕ ПустаяСтрока(Настройки.МодельИИ)
	И НЕ ПустаяСтрока(Настройки.ТокенИИ);
КонецФункции

&НаКлиенте
Функция ОтправитьСообщения(МассивСообщений, ТипЗапроса, Настройки)
	Если ЭтоЗапросЧерезПровайдера(Настройки) Тогда
		Возврат ОтправитьЧерезПровайдера(МассивСообщений, Настройки);
	КонецЕсли;
	
	Возврат ОтправитьЧерезСерверНакидки(МассивСообщений, ТипЗапроса);
КонецФункции

&НаКлиенте
Функция ОтправитьЧерезСерверНакидки(МассивСообщений, ТипСообщения)
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("messages", МассивСообщений);
	ПараметрыЗапроса.Вставить("type", ТипСообщения);
	ТелоЗапрос = СлужебныеФункции().СтруктураВJSON(ПараметрыЗапроса);
	
	ЗаголовкиHTTP = Новый Соответствие;
	ЗаголовкиHTTP.Вставить("Content-Type", "application/json");
	
	HTTPЗапрос = Новый HTTPЗапрос("", ЗаголовкиHTTP);
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапрос);
	
	HTTPСоединение = Новый HTTPСоединение("ai.crimsongold.ru", , , , , ПолучитьТаймаутHTTPСоединения(), Новый ЗащищенноеСоединениеOpenSSL);
	
	HTTPОтвет = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	
	ТелоОтвет = HTTPОтвет.ПолучитьТелоКакСтроку();
	
	ОтветJSON = СлужебныеФункции().JSONВСтруктуру(ТелоОтвет);
	
	Результат = Неопределено;
	Если НЕ ОтветJSON.Свойство("content", Результат) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = ОбработатьРезультат(Результат);
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ОтправитьЧерезПровайдера(МассивСообщений, Настройки)
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса.Вставить("messages", МассивСообщений);
	ПараметрыЗапроса.Вставить("model", Настройки.МодельИИ);
	ПараметрыЗапроса.Вставить("stream", Ложь);
	ТелоЗапрос = СлужебныеФункции().СтруктураВJSON(ПараметрыЗапроса);
	
	СтруктураАдреса = СлужебныеФункции().РазобратьURL(Настройки.ПровайдерИИ);
	
	
	ЗаголовкиHTTP = Новый Соответствие;
	ЗаголовкиHTTP.Вставить("Content-Type", "application/json");
	ЗаголовкиHTTP.Вставить("Authorization", "Bearer " + Настройки.ТокенИИ);
	
	HTTPЗапрос = Новый HTTPЗапрос(СтруктураАдреса.Адрес, ЗаголовкиHTTP);
	HTTPЗапрос.УстановитьТелоИзСтроки(ТелоЗапрос);
	
	ЗащищенноеСоединение = Неопределено;
	Если СтруктураАдреса.Протокол = "https" Тогда
		ЗащищенноеСоединение = Новый ЗащищенноеСоединениеOpenSSL;
	КонецЕсли;
	
	HTTPСоединение = Новый HTTPСоединение(СтруктураАдреса.Сервер, , , , , ПолучитьТаймаутHTTPСоединения(), ЗащищенноеСоединение);
	HTTPОтвет = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	ТелоОтвет = HTTPОтвет.ПолучитьТелоКакСтроку();
	ОтветJSON = СлужебныеФункции().JSONВСтруктуру(ТелоОтвет);
	Если ОтветJSON.Свойство("error") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ОтветJSON.choices.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = ОтветJSON.choices[0].message.content;
	
	Результат = ОбработатьРезультат(Результат);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ОбработатьРезультат(Знач Результат)
	Результат = УбратьМаркерыКода(Результат);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция УбратьМаркерыКода(Знач Результат)
	Результат = СокрЛП(Результат);
	
	МаркерКода = "```json";
	НачальнаяПозиция = СтрНайти(Результат, МаркерКода);
	Если НачальнаяПозиция = 0 Тогда
		МаркерКода = "```";
		НачальнаяПозиция = СтрНайти(Результат, МаркерКода);
	КонецЕсли;
	
	Если НачальнаяПозиция > 0 Тогда
		Результат = Сред(Результат, НачальнаяПозиция + СтрДлина(МаркерКода));
	КонецЕсли;
	
	КонечнаяПозиция = СтрНайти(Результат, МаркерКода, НаправлениеПоиска.СКонца);
	Если КонечнаяПозиция > 0 Тогда
		Результат = Лев(Результат, КонечнаяПозиция - 1);
	КонецЕсли;
	
	Возврат СокрЛП(Результат);
КонецФункции

&НаКлиенте
Функция СформироватьСообщения(Знач Сообщение, Контекст, Промпт = Неопределено)
	Сообщения = Новый Массив;
	
	Если Промпт <> Неопределено Тогда
		Сообщения.Добавить(Новый Структура("role,content", "system", Промпт));
	КонецЕсли;
	
	Если Контекст <> Неопределено Тогда
		Для Каждого ПредыдущееСообщение Из Контекст Цикл
			Сообщения.Добавить(ПолучитьСообщение(ПредыдущееСообщение.Сообщение, ПредыдущееСообщение.ЭтоВходящее));
		КонецЦикла;
	КонецЕсли;
	
	Сообщения.Добавить(ПолучитьСообщение(Сообщение, Ложь));
	
	Возврат Сообщения;
КонецФункции

&НаКлиенте
Функция ПолучитьСообщение(Содержание, ЭтоВходящее)
	Результат = Новый Структура;
	Результат.Вставить("role", ?(ЭтоВходящее, "assistant", "user"));
	Результат.Вставить("content", Содержание);
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ПолучитьПромптДляЧата()
	Если ПустаяСтрока(мПромптДляЧата) Тогда
		мПромптДляЧата = ПолучитьПромптДляЧатаНаСервере();
	КонецЕсли;
	
	Возврат мПромптДляЧата;
КонецФункции

&НаКлиенте
Функция ПолучитьПромптОпределениеТипов()
	Если ПустаяСтрока(мПромптОпределениеТипов) Тогда
		мПромптОпределениеТипов = ПолучитьПромптОпределениеТиповСервере();
	КонецЕсли;
	
	Возврат мПромптОпределениеТипов;
КонецФункции

&НаСервере
Функция ПолучитьПромптДляЧатаНаСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ОбработкаОбъект.ПолучитьМакет("Промпт").ПолучитьТекст();
КонецФункции

&НаСервере
Функция ПолучитьПромптОпределениеТиповСервере()
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	Возврат ОбработкаОбъект.ПолучитьМакет("ПромптТип").ПолучитьТекст();
КонецФункции

#КонецОбласти