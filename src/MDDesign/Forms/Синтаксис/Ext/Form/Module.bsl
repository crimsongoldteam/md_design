// MIT License

// Copyright (c) 2025 Zherebtsov Nikita <nikita@crimsongold.ru>

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// https://github.com/crimsongoldteam/md_design

#Область ОписаниеПеременных

&НаКлиенте
Перем мСоответствиеСимволовТокенам; 

&НаКлиенте
Перем мВидыТокенов;

&НаКлиенте
Перем мБуквыЦифры;

#КонецОбласти 

#Область ОбработчикиСобытийФормы
 
&НаКлиенте
Процедура Инициализировать() Экспорт 
	мВидыТокенов = Новый Структура;
	мСоответствиеСимволовТокенам = Новый Соответствие;  
	мБуквыЦифры = Новый Соответствие;
	
	ВидыТокенов = СтрРазделить(
		"Запятая
		|Точка
		|ТочкаСЗапятой
		|Минус
		|Цифра
		|Буква
		|Число
		|Строка
		|СкобкаКруглаяЛевая
		|СкобкаКруглаяПравая
		|Равно", Символы.ПС); 
	
	Для Каждого Токен Из ВидыТокенов Цикл
		мВидыТокенов.Вставить(Токен, СокрЛП(Токен));
	КонецЦикла; 
	
	мСоответствиеСимволовТокенам.Вставить(",", мВидыТокенов.Запятая);
	мСоответствиеСимволовТокенам.Вставить(".", мВидыТокенов.Точка);
	мСоответствиеСимволовТокенам.Вставить(";", мВидыТокенов.ТочкаСЗапятой);
	мСоответствиеСимволовТокенам.Вставить("-", мВидыТокенов.Минус); 
	мСоответствиеСимволовТокенам.Вставить("(", мВидыТокенов.СкобкаКруглаяЛевая); 
	мСоответствиеСимволовТокенам.Вставить(")", мВидыТокенов.СкобкаКруглаяПравая); 
	мСоответствиеСимволовТокенам.Вставить("=", мВидыТокенов.Равно); 
	
	ДобавитьВидыТокенов(мСоответствиеСимволовТокенам, мБуквыЦифры, мВидыТокенов.Цифра, "0", "9");
	
	ДобавитьВидыТокенов(мСоответствиеСимволовТокенам, мБуквыЦифры, мВидыТокенов.Буква, "A", "Z");
	ДобавитьВидыТокенов(мСоответствиеСимволовТокенам, мБуквыЦифры, мВидыТокенов.Буква, "a", "z");
	ДобавитьВидыТокенов(мСоответствиеСимволовТокенам, мБуквыЦифры, мВидыТокенов.Буква, "А", "я");
	ДобавитьВидыТокенов(мСоответствиеСимволовТокенам, мБуквыЦифры, мВидыТокенов.Буква, "Ё", "Ё");
	ДобавитьВидыТокенов(мСоответствиеСимволовТокенам, мБуквыЦифры, мВидыТокенов.Буква, "ё", "ё");
	ДобавитьВидыТокенов(мСоответствиеСимволовТокенам, мБуквыЦифры, мВидыТокенов.Буква, "_", "_");

КонецПроцедуры

&НаКлиенте
Функция Лексема(ИмяПараметра) Экспорт
	СтруктураПараметры = Новый Структура;  
	СтруктураПараметры.Вставить("ФормаЗаголовок", "---");
	
	СтруктураПараметры.Вставить("РазделительГруппаДобавить", "#");
	СтруктураПараметры.Вставить("РазделительГруппа", "+");
	СтруктураПараметры.Вставить("РазделительГруппаОднострочная", "&");
	СтруктураПараметры.Вставить("Уровень", ".");
	СтруктураПараметры.Вставить("КоманднаяПанельНачало", "<");
	СтруктураПараметры.Вставить("КоманднаяПанельКонец", ">");
	СтруктураПараметры.Вставить("КоманднаяПанельРазделительМеню", "-");
	СтруктураПараметры.Вставить("КоманднаяПанельРазделительКнопок", "|");
	СтруктураПараметры.Вставить("ТаблицаРазделитель", "|");
	СтруктураПараметры.Вставить("Картинка", "@");
	СтруктураПараметры.Вставить("ТаблицаКолонкаГруппа", "-");
	СтруктураПараметры.Вставить("ПолеВводаРазделитель", ":");
	СтруктураПараметры.Вставить("СтраницаРазделитель", "/");
	
	СтруктураПараметры.Вставить("ФлажокРазделительГрупп", "|");
	СтруктураПараметры.Вставить("ФлажокНачало", "[");
	СтруктураПараметры.Вставить("ФлажокКонец", "]");

	Возврат СтруктураПараметры[ИмяПараметра];
КонецФункции

&НаКлиенте
Функция ТокенПоСимволу(Символ) Экспорт
	Возврат мСоответствиеСимволовТокенам.Получить(Символ);	
КонецФункции

&НаКлиенте
Функция Токены() Экспорт
	Возврат мВидыТокенов;	
КонецФункции

&НаКлиенте
Функция ЭтоБукваЦифра(Символ) Экспорт
	Возврат мБуквыЦифры.Получить(Символ) <> Неопределено;
КонецФункции
#КонецОбласти  

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ДобавитьВидыТокенов(Соответствие, Соответствие2, Токен, СимволНачало, СимволКонец)
	Для Код = КодСимвола(СимволНачало) По КодСимвола(СимволКонец) Цикл
		Соответствие.Вставить(Символ(Код), Токен);
		Соответствие2.Вставить(Символ(Код), Токен);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти