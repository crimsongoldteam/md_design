#Область ОписаниеПеременных

&НаКлиенте
Перем Синтаксис;

&НаКлиенте
Перем Парсер;

&НаКлиенте
Перем ОпределительРеквизитов;

&НаКлиенте
Перем Форматтер;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	СведенияОВнешнейОбработке = ОбработкаОбъект.СведенияОВнешнейОбработке();	
	
	Версия = СведенияОВнешнейОбработке.Версия;
	
	ЭтаФорма.Заголовок = СтрШаблон("MDDesign. Версия %1", Версия);
	
	ЭтаФорма.__ИдентификаторОбработки = ОбработкаОбъект.Метаданные().ПолноеИмя();	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Парсер = ПолучитьФорму(__ИдентификаторОбработки + ".Форма.Парсер", , ЭтаФорма);
	ОпределительРеквизитов = ПолучитьФорму(__ИдентификаторОбработки + ".Форма.ОпределительРеквизитов", , ЭтаФорма);
	Синтаксис = ПолучитьФорму(__ИдентификаторОбработки + ".Форма.Синтаксис", , ЭтаФорма);
	Форматтер = ПолучитьФорму(__ИдентификаторОбработки + ".Форма.Форматтер", , ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура __ПостроитьФорму(Команда)
	ФормаГруппы = Парсер().Разобрать(__Редактор);
	ОписанияРеквизитов = ОпределительРеквизитов().Заполнить(ФормаГруппы); 
	
	Построить(ФормаГруппы, ОписанияРеквизитов);
КонецПроцедуры

&НаКлиенте
Процедура _ПостроитьФормуВОтдельномОкне(Команда)    
	ФормаГруппы = Парсер().Разобрать(__Редактор);
	ОписанияРеквизитов = ОпределительРеквизитов().Заполнить(ФормаГруппы); 
	
	ФормаПросмотр = ОткрытьФорму(__ИдентификаторОбработки + ".Форма.ФормаПросмотр", , ЭтаФорма);
	ФормаПросмотр.Построить(ФормаГруппы, ОписанияРеквизитов);
КонецПроцедуры

&НаКлиенте
Процедура __Форматировать(Команда)
	ФормаГруппы = Парсер().Разобрать(__Редактор);
	
	//ПараметрыВыполнения = НовыеПараметрыФорматирования(Истина, 0);
	//ВыполнитьФорматирование(ПараметрыВыполнения, ФормаГруппы);
	//
	//ФормаГруппы.Формат.Результат.Очистить();
	//
	//ПараметрыВыполнения = НовыеПараметрыФорматирования(Ложь, 0);
	//ВыполнитьФорматирование(ПараметрыВыполнения, ФормаГруппы);
	//
	//Результат = Новый Массив;
	//Для Каждого Строка Из ФормаГруппы.Формат.Результат Цикл
	//	Результат.Добавить(СокрП(Строка)); 	
	//КонецЦикла;
	//
	ЭтаФорма.__Редактор = Форматтер().Форматировать(ФормаГруппы);
КонецПроцедуры

&НаКлиенте
Процедура __ДобавитьКартинку(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборКартинкиЗавершение", ЭтотОбъект);
						 
	ОткрытьФорму(__ИдентификаторОбработки + ".Форма.ФормаВыбораКартинки", , ЭтаФорма, , , , ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ВыборКартинкиЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.__Редактор.ВыделенныйТекст = Лексема("Картинка") + РезультатЗакрытия;
КонецПроцедуры

&НаКлиенте
Процедура __РедакторТаблицы(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("РедактированиеТаблицыЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(__ИдентификаторОбработки + ".Форма.ФормаРедактированияТаблицы", , ЭтаФорма, , , , ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеТаблицыЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры
 
&НаКлиенте
Процедура __КомандаЗаглушка(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура __ДобавитьПрямыеСкобки(Команда)
	ОбернутьВыделенныйТекст("[]", "");
КонецПроцедуры

&НаКлиенте
Процедура __ДобавитьФигурныеСкобки(Команда)
	ОбернутьВыделенныйТекст("{", "}");
КонецПроцедуры

&НаКлиенте
Процедура __ДобавитьУгловыеСкобки(Команда)
	ОбернутьВыделенныйТекст("<", ">");
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция Парсер() Экспорт
	Возврат Парсер;
КонецФункции

&НаКлиенте
Функция Синтаксис() Экспорт
	Возврат Синтаксис;
КонецФункции

&НаКлиенте
Функция Форматтер() Экспорт
	Возврат Форматтер;
КонецФункции     

&НаКлиенте
Функция ОпределительРеквизитов() Экспорт
	Возврат ОпределительРеквизитов;
КонецФункции     

&НаКлиенте
Функция Лексема(ИмяПараметра) Экспорт
	Возврат Синтаксис().Лексема(ИмяПараметра);
КонецФункции

&НаКлиенте
Процедура СообщитьОбОшибкеПарсинга(Строка, Столбец, Сообщение, Отказ)
	Отказ = Истина;
	ТекстСообщения = СтрШаблон("%1 [%2, %3]", Сообщение, Строка, Столбец);
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить();  
	
	Элементы.__Редактор.УстановитьГраницыВыделения(Строка, Столбец, Строка, Столбец + 1);
КонецПроцедуры

&НаКлиенте
Функция ЗначениеВМассиве(Знач Значение)
	Результат = Новый Массив;
	Результат.Добавить(Значение);
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура Построить(ОписаниеГруппы, ОписанияРеквизитов) Экспорт
	ПостроитьНаСервере(ОписаниеГруппы, ОписанияРеквизитов);
КонецПроцедуры

&НаСервере
Процедура ПостроитьНаСервере(ОписаниеГруппы, ОписанияРеквизитов) Экспорт
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	ОбработкаОбъект.ПостроитьНаСервере(
		ЭтотОбъект, 
		Элементы.__ГруппаПросмотр, 
		ОписаниеГруппы, 
		ОписанияРеквизитов);
КонецПроцедуры

&НаКлиенте
Процедура ОбернутьВыделенныйТекст(СимволДо, СимволПосле)
	НачалоСтроки = 0;
	НачалоКолонки = 0;
	КонецСтроки = 0;
	КонецКолонки = 0;
	
	Элементы.__Редактор.ПолучитьГраницыВыделения(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки);
	Элементы.__Редактор.ВыделенныйТекст = СимволДо + Элементы.__Редактор.ВыделенныйТекст + СимволПосле;
	Элементы.__Редактор.УстановитьГраницыВыделения(НачалоСтроки, НачалоКолонки + СтрДлина(СимволДо), КонецСтроки, КонецКолонки + СтрДлина(СимволДо));
КонецПроцедуры

#КонецОбласти  

