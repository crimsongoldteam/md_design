#Область ОписаниеПеременных

&НаКлиенте
Перем Парсер;

&НаКлиенте
Перем Синтаксис;

&НаКлиенте
Перем ОпределительРеквизитов;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	СведенияОВнешнейОбработке = ОбработкаОбъект.СведенияОВнешнейОбработке();	
	
	Версия = СведенияОВнешнейОбработке.Версия;
	
	ЭтаФорма.Заголовок = СтрШаблон("MDDesign. Версия %1", Версия);
	
	ЭтаФорма.__ИдентификаторОбработки = ОбработкаОбъект.Метаданные().ПолноеИмя();	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Парсер = ПолучитьФорму(__ИдентификаторОбработки + ".Форма.Парсер", , ЭтаФорма);
	ОпределительРеквизитов = ПолучитьФорму(__ИдентификаторОбработки + ".Форма.ОпределительРеквизитов", , ЭтаФорма);
	Синтаксис = ПолучитьФорму(__ИдентификаторОбработки + ".Форма.Синтаксис", , ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Функция Парсер() Экспорт
	Возврат Парсер;
КонецФункции	 

&НаКлиенте
Функция ОпределительРеквизитов() Экспорт
	Возврат ОпределительРеквизитов;
КонецФункции	 

&НаКлиенте
Функция Синтаксис() Экспорт
	Возврат Синтаксис;
КонецФункции

&НаКлиенте
Функция Лексема(ИмяПараметра) Экспорт
	Возврат Синтаксис().Лексема(ИмяПараметра);
КонецФункции

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура __ПостроитьФорму(Команда)
	ФормаГруппы = Парсер().Разобрать(__Редактор);
	
	ОписанияРеквизитов = ОпределительРеквизитов().Заполнить(ФормаГруппы); 
	
	ВыполнитьПостроениеНаСервере(ФормаГруппы, ОписанияРеквизитов);
КонецПроцедуры

&НаКлиенте
Процедура __Форматировать(Команда)
	ФормаГруппы = Парсер().Разобрать(__Редактор);
	
	ПараметрыВыполнения = НовыеПараметрыФорматирования(Истина, 0);
	ВыполнитьФорматирование(ПараметрыВыполнения, ФормаГруппы);
	
	ФормаГруппы.Формат.Результат.Очистить();
	
	ПараметрыВыполнения = НовыеПараметрыФорматирования(Ложь, 0);
	ВыполнитьФорматирование(ПараметрыВыполнения, ФормаГруппы);
	
	Результат = Новый Массив;
	Для Каждого Строка Из ФормаГруппы.Формат.Результат Цикл
		Результат.Добавить(СокрП(Строка)); 	
	КонецЦикла;
	
	ЭтаФорма.__Редактор = СтрСоединить(Результат, Символы.ПС);
КонецПроцедуры

&НаКлиенте
Процедура __ДобавитьКартинку(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборКартинкиЗавершение", ЭтотОбъект);
						 
	ОткрытьФорму(__ИдентификаторОбработки + ".Форма.ФормаВыбораКартинки", , ЭтаФорма, , , , ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ВыборКартинкиЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.__Редактор.ВыделенныйТекст = Лексема("Картинка") + РезультатЗакрытия;
КонецПроцедуры

&НаКлиенте
Процедура __РедакторТаблицы(Команда)
	ОписаниеОповещения = Новый ОписаниеОповещения("РедактированиеТаблицыЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(__ИдентификаторОбработки + ".Форма.ФормаРедактированияТаблицы", , ЭтаФорма, , , , ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеТаблицыЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

 
&НаКлиенте
Процедура __КомандаЗаглушка(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура __ДобавитьПрямыеСкобки(Команда)
	ОбернутьВыделенныйТекст("[]", "");
КонецПроцедуры

&НаКлиенте
Процедура __ДобавитьФигурныеСкобки(Команда)
	ОбернутьВыделенныйТекст("{", "}");
КонецПроцедуры

&НаКлиенте
Процедура __ДобавитьУгловыеСкобки(Команда)
	ОбернутьВыделенныйТекст("<", ">");
КонецПроцедуры

#КонецОбласти 

&НаКлиенте
Процедура СообщитьОбОшибкеПарсинга(Строка, Столбец, Сообщение, Отказ)
	Отказ = Истина;
	ТекстСообщения = СтрШаблон("%1 [%2, %3]", Сообщение, Строка, Столбец);
	
	Сообщение = Новый СообщениеПользователю;
	Сообщение.Текст = ТекстСообщения;
	Сообщение.Сообщить();  
	
	Элементы.__Редактор.УстановитьГраницыВыделения(Строка, Столбец, Строка, Столбец + 1);
КонецПроцедуры

&НаКлиенте
Функция ЗначениеВМассиве(Знач Значение)
	Результат = Новый Массив;
	Результат.Добавить(Значение);
	Возврат Результат;
КонецФункции
 
#Область Построение

&НаСервере
Процедура ВыполнитьПостроениеНаСервере(Знач ФормаГруппы, Знач ОписанияРеквизитов)  
	ИзменитьРеквизитыФормыНаСервере(ОписанияРеквизитов);
	
	ГруппаКонтейнер = Элементы.Найти("ГруппаКонтейнер");
	Если ГруппаКонтейнер <> Неопределено Тогда
		Элементы.Удалить(ГруппаКонтейнер);
	КонецЕсли;

	ГруппаКонтейнер = Элементы.Добавить("ГруппаКонтейнер", Тип("ГруппаФормы"), Элементы.ГруппаПросмотр);
	ГруппаКонтейнер.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаКонтейнер.Отображение = ОтображениеОбычнойГруппы.Нет;
	ГруппаКонтейнер.ОтображатьЗаголовок = Ложь; 
	ГруппаКонтейнер.РастягиватьПоГоризонтали = Истина;
	ГруппаКонтейнер.РастягиватьПоВертикали = Истина;
	ГруппаКонтейнер.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;

	ПараметрыВыполнения = Новый Структура("ОписанияРеквизитов", ОписанияРеквизитов);
	
	ПостроитьЭлементыНаСервере(ПараметрыВыполнения, ФормаГруппы, ГруппаКонтейнер);
КонецПроцедуры

&НаСервере
Процедура ИзменитьРеквизитыФормыНаСервере(ОписанияРеквизитов)
	МассивРеквизитов = Новый Массив;
	НовыйМассивСуществующих = Новый Массив;
	Для Каждого СтрокаРеквизит Из ОписанияРеквизитов Цикл
		Если ПустаяСтрока(СтрокаРеквизит.ИмяРеквизита) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяРеквизита = СтрокаРеквизит.ИмяРеквизита;
		Если СтрокаРеквизит.Номер > 1 Тогда
			СтрокаНомер = Формат(СтрокаРеквизит.Номер - 1, "ЧГ=0");
			ИмяРеквизита = ИмяРеквизита + СтрокаНомер;
		КонецЕсли;
		
		Если СтрокаРеквизит.ТипРеквизита = "ПолеВвода" Тогда
			ДобавляемыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(0)));
			МассивРеквизитов.Добавить(ДобавляемыйРеквизит);
			НовыйМассивСуществующих.Добавить(ИмяРеквизита);
		КонецЕсли;

		Если СтрокаРеквизит.ТипРеквизита = "Флажок" Тогда
			ДобавляемыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Булево"));
			МассивРеквизитов.Добавить(ДобавляемыйРеквизит);
			НовыйМассивСуществующих.Добавить(ИмяРеквизита);
		КонецЕсли;
		
		Если СтрокаРеквизит.ТипРеквизита = "Таблица" Тогда
			ДобавляемыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ТаблицаЗначений"));
			МассивРеквизитов.Добавить(ДобавляемыйРеквизит);
			НовыйМассивСуществующих.Добавить(ИмяРеквизита);
		КонецЕсли;

		Если СтрокаРеквизит.ТипРеквизита = "Дерево" Тогда
			ДобавляемыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("ДеревоЗначений"));
			МассивРеквизитов.Добавить(ДобавляемыйРеквизит);
			НовыйМассивСуществующих.Добавить(ИмяРеквизита);
		КонецЕсли;
		
		Если СтрокаРеквизит.ТипРеквизита = "Колонка" Тогда 
			СтрокаВладелец = ПолучитьСтрокуТаблицыРеквизитовНаСервере(ОписанияРеквизитов, СтрокаРеквизит.УИДВладельца);
			
			ДобавляемыйРеквизит = Новый РеквизитФормы(
				ИмяРеквизита, 
				Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(0)),
				СтрокаВладелец.ИмяРеквизита);
			МассивРеквизитов.Добавить(ДобавляемыйРеквизит);
		КонецЕсли;

		Если СтрокаРеквизит.ТипРеквизита = "КолонкаФлажок" Тогда 
			СтрокаВладелец = ПолучитьСтрокуТаблицыРеквизитовНаСервере(ОписанияРеквизитов, СтрокаРеквизит.УИДВладельца);
			
			ДобавляемыйРеквизит = Новый РеквизитФормы(
				ИмяРеквизита, 
				Новый ОписаниеТипов("Булево"),
				СтрокаВладелец.ИмяРеквизита);

			МассивРеквизитов.Добавить(ДобавляемыйРеквизит);
		КонецЕсли;
		
	КонецЦикла;
	
	МассивУдаляемых = __ТаблицаСуществующихРеквизитов.Выгрузить().ВыгрузитьКолонку("ИмяРеквизита");
	
	ИзменитьРеквизиты(МассивРеквизитов, МассивУдаляемых);  
	
	__ТаблицаСуществующихРеквизитов.Очистить();
	Для Каждого ИмяРеквизита Из НовыйМассивСуществующих Цикл
		Строка = __ТаблицаСуществующихРеквизитов.Добавить();
		Строка.ИмяРеквизита = ИмяРеквизита;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПостроитьЭлементыНаСервере(ПараметрыВыполнения, Данные, Группа)      
	
	Подчиненные = Данные.Элементы;
	
	Для Каждого ЭлементДанных Из Подчиненные Цикл
		ПостроитьЭлементНаСервере(ПараметрыВыполнения, ЭлементДанных, Группа);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПостроитьЭлементНаСервере(ПараметрыВыполнения, ЭлементДанных, Группа)
	Выполнена = Ложь;
	
	ДобавитьГоризонтальнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли; 

	ДобавитьОднострочнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли; 

	ДобавитьВертикальнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ДобавитьЭлементПолеВвода(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ДобавитьЭлементФлажок(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ДобавитьЭлементНадпись(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ДобавитьТаблицуДерево(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьСтраницы(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ДобавитьКоманднуюПанель(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьГоризонтальнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена)  	
	Если ЭлементДанных.Тип <> "ГоризонтальнаяГруппа" Тогда 
		Возврат;
	КонецЕсли;
	
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(
		ПараметрыВыполнения.ОписанияРеквизитов, 
		ЭлементДанных.УИД);
	
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
	
	НоваяГруппа = Элементы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), Группа);
	НоваяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НоваяГруппа.Отображение = ОтображениеОбычнойГруппы.Нет;
	НоваяГруппа.ОтображатьЗаголовок = Ложь; 
	НоваяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	НоваяГруппа.РастягиватьПоГоризонтали = Истина;
	НоваяГруппа.РастягиватьПоВертикали = Ложь;
	
	ПостроитьЭлементыНаСервере(ПараметрыВыполнения, ЭлементДанных, НоваяГруппа);
	
	Выполнена = Истина;
КонецПроцедуры

&НаСервере
Процедура ДобавитьОднострочнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена)  	
	Если ЭлементДанных.Тип <> "ОднострочнаяГруппа" Тогда 
		Возврат;
	КонецЕсли;
	
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(
		ПараметрыВыполнения.ОписанияРеквизитов,
		ЭлементДанных.УИД);
	
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
	
	НоваяГруппа = Элементы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), Группа);
	НоваяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НоваяГруппа.Отображение = ОтображениеОбычнойГруппы.Нет;
	НоваяГруппа.ОтображатьЗаголовок = Ложь; 
	НоваяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	НоваяГруппа.РастягиватьПоГоризонтали = Истина;
	НоваяГруппа.РастягиватьПоВертикали = Ложь;
	НоваяГруппа.СквозноеВыравнивание = СквозноеВыравнивание.НеИспользовать; 
	
	ПостроитьЭлементыНаСервере(ПараметрыВыполнения, ЭлементДанных, НоваяГруппа);
	
	Выполнена = Истина;
КонецПроцедуры

&НаСервере
Процедура ДобавитьВертикальнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена)  	
	Если ЭлементДанных.Тип <> "ВертикальнаяГруппа" Тогда 
		Возврат;
	КонецЕсли;
	
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(
		ПараметрыВыполнения.ОписанияРеквизитов,
		ЭлементДанных.УИД);
	
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
	
	НоваяГруппа = Элементы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), Группа);
	НоваяГруппа.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	НоваяГруппа.Отображение = ОтображениеОбычнойГруппы.Нет;
	
	НоваяГруппа.ОтображатьЗаголовок = ЭлементДанных.НаборСвойств.ОтображатьЗаголовок; 
	НоваяГруппа.Заголовок = ЭлементДанных.НаборСвойств.Заголовок;
	
	НоваяГруппа.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
	НоваяГруппа.РастягиватьПоГоризонтали = Истина;
	НоваяГруппа.РастягиватьПоВертикали = Ложь;
	
	ПостроитьЭлементыНаСервере(ПараметрыВыполнения, ЭлементДанных, НоваяГруппа);   
	
	Выполнена = Истина;
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементНадпись(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена)  	
	Если ЭлементДанных.Тип <> "Надпись" Тогда 
		Возврат;
	КонецЕсли;
	
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(
		ПараметрыВыполнения.ОписанияРеквизитов,
		ЭлементДанных.УИД);
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;

	НовыйЭлемент = ЭтаФорма.Элементы.Добавить(ИмяЭлемента, Тип("ДекорацияФормы"), Группа);
	НовыйЭлемент.Вид = ВидДекорацииФормы.Надпись;

	УстановитьСвойствоЭлементаНаСервере(НовыйЭлемент, ЭлементДанных);

	Выполнена = Истина;
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементПолеВвода(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена)     
	Если ЭлементДанных.Тип <> "ПолеВвода" Тогда 
		Возврат;
	КонецЕсли;

	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(
		ПараметрыВыполнения.ОписанияРеквизитов,
		ЭлементДанных.УИД);
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
	ИмяРеквизита =  СтрокаРеквизитов.ИмяРеквизита;
	
	НовыйЭлемент = ЭтаФорма.Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Группа);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
	НовыйЭлемент.ПутьКДанным = ИмяРеквизита;         
	НовыйЭлемент.АвтоМаксимальнаяШирина = Ложь;
	
	УстановитьСвойствоЭлементаНаСервере(НовыйЭлемент, ЭлементДанных);

	ЭтотОбъект[ИмяРеквизита] = ЭлементДанных.Значение;    
	
	Выполнена = Истина;
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементФлажок(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена)  
	Если ЭлементДанных.Тип <> "Флажок" Тогда 
		Возврат;
	КонецЕсли;
	
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(
		ПараметрыВыполнения.ОписанияРеквизитов,
		ЭлементДанных.УИД);
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
	ИмяРеквизита =  СтрокаРеквизитов.ИмяРеквизита;
	
	НовыйЭлемент = ЭтаФорма.Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), Группа);
	НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
	НовыйЭлемент.ПутьКДанным = ИмяРеквизита;

	УстановитьСвойствоЭлементаНаСервере(НовыйЭлемент, ЭлементДанных);
	
	ЭтотОбъект[ИмяРеквизита] = ЭлементДанных.Значение;  

	Выполнена = Истина;
КонецПроцедуры

&НаСервере
Процедура ДобавитьТаблицуДерево(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена)  
	Если ЭлементДанных.Тип <> "Дерево" 
		И ЭлементДанных.Тип <> "Таблица" Тогда 
		Возврат;
	КонецЕсли;
	
	ОписанияРеквизитов = ПараметрыВыполнения.ОписанияРеквизитов;
	
	СтрокаРеквизитовТаблица = ПолучитьСтрокуТаблицыРеквизитовНаСервере(ОписанияРеквизитов, ЭлементДанных.УИД);
	ИмяЭлементаТаблица = СтрокаРеквизитовТаблица.ИмяЭлемента;
	ИмяРеквизитаТаблица = СтрокаРеквизитовТаблица.ИмяРеквизита;
	
	НоваяТаблица = ЭтаФорма.Элементы.Добавить(ИмяЭлементаТаблица, Тип("ТаблицаФормы"), Группа);
	НоваяТаблица.ПутьКДанным = ИмяРеквизитаТаблица;
	НоваяТаблица.ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиЭлементаФормы.Нет;
	
	Колонки = ЭлементДанных.Колонки;
	Строки = ЭлементДанных.Строки;
	
	Для Каждого Колонка Из Колонки Цикл
		ДобавитьКолонкуТаблицыРекурсивно(ПараметрыВыполнения, НоваяТаблица, "Таблица", ИмяРеквизитаТаблица, Колонка);
	КонецЦикла;          
	
	Если ЭлементДанных.Тип = "Дерево"  Тогда
		ЭлементыДерева = ЭтотОбъект[ИмяЭлементаТаблица].ПолучитьЭлементы();
		ЭлементыДерева.Очистить(); 
		
		ДобавитьДеревоСтроки(ПараметрыВыполнения, Строки, Колонки, ЭлементыДерева, Истина);
	Иначе
		ЭтотОбъект[ИмяЭлементаТаблица].Очистить();
		ДобавитьДеревоСтроки(ПараметрыВыполнения, Строки, Колонки, ЭтотОбъект[ИмяЭлементаТаблица], Ложь);
	КонецЕсли;
	
	Выполнена = Истина;
КонецПроцедуры

&НаСервере
Функция ДобавитьГруппуКолонокТаблицы(ЭлементРодитель, ИмяЭлемента, ГруппировкаКолонок, Заголовок = Неопределено)
	НоваяГруппа = Элементы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), ЭлементРодитель);
	НоваяГруппа.Вид = ВидГруппыФормы.ГруппаКолонок;
	НоваяГруппа.Группировка = ГруппировкаКолонок;  
	Если Заголовок <> Неопределено Тогда
		НоваяГруппа.Заголовок = Заголовок;
	КонецЕсли;
	НоваяГруппа.ОтображатьВШапке = Заголовок <> Неопределено;
	
	Возврат НоваяГруппа;
КонецФункции

&НаСервере
Процедура ДобавитьКолонкуТаблицыРекурсивно(ПараметрыВыполнения, ЭлементРодитель, ТипРодителя, ИмяРеквизитаТаблица, Колонка)
	ОписанияРеквизитов = ПараметрыВыполнения.ОписанияРеквизитов;
	
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(ОписанияРеквизитов, Колонка.УИД);
	
	ТекРодитель = ЭлементРодитель;
	ТекТипРодителя = ТипРодителя;
	
	Колонки = Колонка.Колонки;
	КоличествоКолонок = Колонка.Колонки.Количество();
	
	ЕстьПодчиненные = КоличествоКолонок > 0;
	ЕстьГруппаПодчиненных = КоличествоКолонок > 1;
	
	ТребуетсяДобавитьГруппуКолонок = 
		Колонка.Тип = "ГруппаКолонокТаблицы";
		
	ТребуетсяДобавитьВертикальнуюГруппу = 
		НЕ ТребуетсяДобавитьГруппуКолонок 
		И ЕстьПодчиненные 
		И (ТипРодителя = "ГоризонтальнаяГруппа" 
			ИЛИ ТипРодителя = "Таблица");
			
	ТребуетсяДобавитьГоризонтальнуюГруппу =
		ТребуетсяДобавитьГруппуКолонок ИЛИ
		ЕстьГруппаПодчиненных;
			
	ТребуетсяДобавитьКолонкуТаблицы =
		НЕ ТребуетсяДобавитьГруппуКолонок;
		
	ЗаголовокГруппы = Неопределено;
	Если ТребуетсяДобавитьГруппуКолонок Тогда
		ЗаголовокГруппы = Колонка.НаборСвойств.Заголовок;
	КонецЕсли;
	
	Если ТребуетсяДобавитьВертикальнуюГруппу Тогда
		
		ИмяГруппы = ИмяРеквизитаТаблица + СтрокаРеквизитов.ИмяЭлемента + "Вертикальная";
		
		ТекРодитель = ДобавитьГруппуКолонокТаблицы(ТекРодитель, ИмяГруппы, ГруппировкаКолонок.Вертикальная);
		ТекТипРодителя = "ВертикальнаяГруппа";
	КонецЕсли;
	
	Если ТребуетсяДобавитьКолонкуТаблицы Тогда
		ДобавитьКолонкуТаблицы(ОписанияРеквизитов, ТекРодитель, ИмяРеквизитаТаблица, Колонка);
	КонецЕсли;
	
	Если ТребуетсяДобавитьГоризонтальнуюГруппу Тогда
		ИмяГруппы = ИмяРеквизитаТаблица + СтрокаРеквизитов.ИмяЭлемента + "Горизонтальная";
		
		ТекРодитель = ДобавитьГруппуКолонокТаблицы(
			ТекРодитель, 
			ИмяГруппы, 
			ГруппировкаКолонок.Горизонтальная,
			ЗаголовокГруппы);
		ТекТипРодителя = "ГоризонтальнаяГруппа";
	КонецЕсли;

	Для Каждого Колонка Из Колонки Цикл
		ДобавитьКолонкуТаблицыРекурсивно(ПараметрыВыполнения, ТекРодитель, ТекТипРодителя, ИмяРеквизитаТаблица, Колонка);
	КонецЦикла;          
КонецПроцедуры

&НаСервере
Процедура ДобавитьКолонкуТаблицы(ОписанияРеквизитов,Знач ЭлементРодитель, ИмяРеквизитаТаблица, Колонка)
	ТекРодитель = ЭлементРодитель;
	
	ЕстьГруппа = Колонка.ЕстьФлажок И Колонка.ЕстьЗначение;                

	Если ЕстьГруппа Тогда
		СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(ОписанияРеквизитов, Колонка.УИД);
		ИмяЭлемента = ИмяРеквизитаТаблица + СтрокаРеквизитов.ИмяЭлемента + "Вместе";
		
		ТекРодитель = ДобавитьГруппуКолонокТаблицы(
			ТекРодитель, 
			ИмяЭлемента, 
			ГруппировкаКолонок.ВЯчейке, 
			Колонка.НаборСвойств.Заголовок);
	КонецЕсли;
	
	Если Колонка.ЕстьФлажок Тогда
		СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(ОписанияРеквизитов, Колонка.УИДФлажок);
		ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
		ИмяРеквизита = СтрокаРеквизитов.ИмяРеквизита;
		
		НовыйКолонка = ЭтаФорма.Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), ТекРодитель);
		НовыйКолонка.Вид = ВидПоляФормы.ПолеФлажка;
		НовыйКолонка.ПутьКДанным = ИмяРеквизитаТаблица + "." + ИмяРеквизита;
		НовыйКолонка.ОтображатьВШапке = НЕ ЕстьГруппа;
		НовыйКолонка.Заголовок = Колонка.НаборСвойств.Заголовок;
		НовыйКолонка.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента[Колонка.НаборСвойств.ГоризонтальноеПоложение];
	КонецЕсли;
	
	Если Колонка.ЕстьЗначение Тогда
		СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(ОписанияРеквизитов, Колонка.УИД);
		ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
		ИмяРеквизита = СтрокаРеквизитов.ИмяРеквизита;
		
		НовыйКолонка = ЭтаФорма.Элементы.Добавить(ИмяЭлемента, Тип("ПолеФормы"), ТекРодитель);
		НовыйКолонка.Вид = ВидПоляФормы.ПолеВвода;
		НовыйКолонка.ПутьКДанным = ИмяРеквизитаТаблица + "." + ИмяРеквизита;
		НовыйКолонка.Заголовок = Колонка.НаборСвойств.Заголовок;
		НовыйКолонка.ОтображатьВШапке = НЕ ЕстьГруппа;
		НовыйКолонка.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента[Колонка.НаборСвойств.ГоризонтальноеПоложение];
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ДобавитьДеревоСтроки(ПараметрыВыполнения, Строки, Колонки, ЭлементыДерева, ЭтоДерево)
	Для Каждого Строка Из Строки Цикл 
		СтрокаТаблицы = ЭлементыДерева.Добавить();
		
		Сч = 0;       
		Для Каждого Ячейка Из Строка.Ячейки Цикл  
			Колонка = Колонки[Сч];
			
			Если НЕ ПустаяСтрока(Ячейка.Значение) Тогда
				СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(
					ПараметрыВыполнения.ОписанияРеквизитов, Колонка.УИД);
				СтрокаТаблицы[СтрокаРеквизитов.ИмяРеквизита] = Ячейка.Значение; 
			КонецЕсли;
			
			Если Ячейка.ЕстьФлажок Тогда
				СтрокаРеквизитовФлажок = ПолучитьСтрокуТаблицыРеквизитовНаСервере(
					ПараметрыВыполнения.ОписанияРеквизитов,
					Колонка.УИДФлажок);
				СтрокаТаблицы[СтрокаРеквизитовФлажок.ИмяРеквизита] = Булево(Ячейка.ЗначениеФлажка);
			КонецЕсли;
			
			Сч = Сч + 1;
		КонецЦикла;
		
		Если ЭтоДерево Тогда
			ДобавитьДеревоСтроки(ПараметрыВыполнения, Строка.Строки, Колонки, СтрокаТаблицы.ПолучитьЭлементы(), Истина);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтраницы(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена)  	
	Если ЭлементДанных.Тип <> "Страницы" Тогда 
		Возврат;
	КонецЕсли;
	
	СтрокаРеквизитовСтраницы = ПолучитьСтрокуТаблицыРеквизитовНаСервере(
		ПараметрыВыполнения.ОписанияРеквизитов,
		ЭлементДанных.УИД);
	ИмяЭлементаСтраницы = СтрокаРеквизитовСтраницы.ИмяЭлемента;
	
	ЭлементСтраницы = Элементы.Добавить(ИмяЭлементаСтраницы, Тип("ГруппаФормы"), Группа);
	ЭлементСтраницы.Вид = ВидГруппыФормы.Страницы;
	ЭлементСтраницы.РастягиватьПоГоризонтали = Истина;
	ЭлементСтраницы.РастягиватьПоВертикали = Ложь;
	
	Страницы = ЭлементДанных.Элементы;
	
	Для Каждого Страница Из Страницы Цикл
		СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(
		ПараметрыВыполнения.ОписанияРеквизитов,
		Страница.УИД);
		ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
		
		ЭлементСтраница = Элементы.Добавить(ИмяЭлемента, Тип("ГруппаФормы"), ЭлементСтраницы);
		ЭлементСтраница.Вид = ВидГруппыФормы.Страница;
		ЭлементСтраница.Заголовок = Страница.НаборСвойств.Заголовок;
		
		ПостроитьЭлементыНаСервере(ПараметрыВыполнения, Страница, ЭлементСтраница);
	КонецЦикла;
	
	Выполнена = Истина;
КонецПроцедуры

&НаСервере
Процедура ДобавитьКоманднуюПанель(ПараметрыВыполнения, ЭлементДанных, Группа, Выполнена)  
	Если ЭлементДанных.Тип <> "КоманднаяПанель" Тогда 
		Возврат;
	КонецЕсли;

	СтрокаРеквизитовКоманднаяПанель = ПолучитьСтрокуТаблицыРеквизитовНаСервере(
		ПараметрыВыполнения.ОписанияРеквизитов, 
		ЭлементДанных.УИД);
	ИмяЭлементаКоманднаяПанель = СтрокаРеквизитовКоманднаяПанель.ИмяЭлемента;
	
	НоваяКоманднаяПанель = ЭтаФорма.Элементы.Добавить(
		ИмяЭлементаКоманднаяПанель, 
		Тип("ГруппаФормы"), 
		Группа);
	НоваяКоманднаяПанель.Вид = ВидГруппыФормы.КоманднаяПанель;
	
	НоваяКоманднаяПанель.ГоризонтальноеПоложение = 
		ГоризонтальноеПоложениеЭлемента[ЭлементДанных.НаборСвойств.ГоризонтальноеПоложение];
	
	ДобавитьКнопки(ПараметрыВыполнения, ЭлементДанных, НоваяКоманднаяПанель, ИмяЭлементаКоманднаяПанель);
	
	Выполнена = Истина;
КонецПроцедуры

&НаСервере
Процедура ДобавитьКнопки(ПараметрыВыполнения, ЭлементДанных, ЭлементФормыРодитель, ИмяЭлементаКоманднаяПанель)  
	Для Каждого Кнопка Из ЭлементДанных.Элементы Цикл   
		Если Кнопка.Тип = "ГруппаКнопок" Тогда
			ДобавитьГруппуКнопок(
				ПараметрыВыполнения,
				Кнопка, 
				ЭлементФормыРодитель, 
				ИмяЭлементаКоманднаяПанель);
			Продолжить;
		КонецЕсли;
		
		Если Кнопка.Тип = "Меню" Тогда
			ДобавитьМеню(
				ПараметрыВыполнения,
				Кнопка, 
				ЭлементФормыРодитель, 
				ИмяЭлементаКоманднаяПанель);
			Продолжить;
		КонецЕсли;
		ДобавитьКнопку(
			ПараметрыВыполнения,
			Кнопка, 
			ЭлементФормыРодитель, 
			ИмяЭлементаКоманднаяПанель);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьГруппуКнопок(ПараметрыВыполнения, Кнопка, ЭлементФормыРодитель, ИмяЭлементаКоманднаяПанель)  
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(ПараметрыВыполнения.ОписанияРеквизитов, Кнопка.УИД);
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
	
	ЭлементКнопка = Элементы.Добавить(
		ИмяЭлементаКоманднаяПанель + ИмяЭлемента, 
		Тип("ГруппаФормы"), 
		ЭлементФормыРодитель);
	ЭлементКнопка.Вид = ВидГруппыФормы.ГруппаКнопок;
	
	УстановитьСвойствоЭлементаНаСервере(ЭлементКнопка, Кнопка);
	
	ДобавитьКнопки(ПараметрыВыполнения, Кнопка, ЭлементКнопка, ИмяЭлементаКоманднаяПанель);
КонецПроцедуры

&НаСервере
Процедура ДобавитьМеню(ПараметрыВыполнения, Кнопка, ЭлементФормыРодитель, ИмяЭлементаКоманднаяПанель)  
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(ПараметрыВыполнения.ОписанияРеквизитов, Кнопка.УИД);
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
	
	ЭлементКнопка = Элементы.Добавить(
		ИмяЭлементаКоманднаяПанель + ИмяЭлемента, 
		Тип("ГруппаФормы"), 
		ЭлементФормыРодитель);
	ЭлементКнопка.Вид = ВидГруппыФормы.Подменю;
	ЭлементКнопка.Заголовок = Кнопка.НаборСвойств.Заголовок;         
	
	УстановитьСвойствоЭлементаНаСервере(ЭлементКнопка, Кнопка);
	
	Если ПустаяСтрока(Кнопка.НаборСвойств.Заголовок) Тогда
		ЭлементКнопка.Отображение = ОтображениеКнопки.Картинка;
	Иначе
		ЭлементКнопка.Отображение = ОтображениеКнопки.КартинкаИТекст;
	КонецЕсли;
	
	Если Кнопка.Картинка <> Неопределено Тогда
		ЭлементКнопка.Картинка = БиблиотекаКартинок[Кнопка.Картинка];
	КонецЕсли;
	
	ДобавитьКнопки(ПараметрыВыполнения, Кнопка, ЭлементКнопка, ИмяЭлементаКоманднаяПанель);
КонецПроцедуры

&НаСервере
Процедура ДобавитьКнопку(ПараметрыВыполнения, Кнопка, ЭлементФормыРодитель, ИмяЭлементаКоманднаяПанель)  
	СтрокаРеквизитов = ПолучитьСтрокуТаблицыРеквизитовНаСервере(ПараметрыВыполнения.ОписанияРеквизитов, Кнопка.УИД);
	ИмяЭлемента = СтрокаРеквизитов.ИмяЭлемента;
	
	ЭлементКнопка = Элементы.Добавить(
		ИмяЭлементаКоманднаяПанель + ИмяЭлемента, 
		Тип("КнопкаФормы"), 
		ЭлементФормыРодитель);
	ЭлементКнопка.ИмяКоманды = "__КомандаЗаглушка";
	ЭлементКнопка.Заголовок = Кнопка.НаборСвойств.Заголовок;         
	
	УстановитьСвойствоЭлементаНаСервере(ЭлементКнопка, Кнопка);
	
	Если ПустаяСтрока(Кнопка.НаборСвойств.Заголовок) Тогда
		ЭлементКнопка.Отображение = ОтображениеКнопки.Картинка;
	Иначе
		ЭлементКнопка.Отображение = ОтображениеКнопки.КартинкаИТекст;
	КонецЕсли;
	
	Если Кнопка.Картинка <> Неопределено Тогда
		ЭлементКнопка.Картинка = БиблиотекаКартинок[Кнопка.Картинка];
	КонецЕсли;   	
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяРеквизита(ПараметрыВыполнения, Тип)
	СвободныйНомер = ПараметрыВыполнения.СвободныеНомераРеквизитов[Тип];
	ИмяРеквизита = СтрШаблон("%1Реквизит%2", Тип, СвободныйНомер);
	ПараметрыВыполнения.СвободныеНомераРеквизитов[Тип] = СвободныйНомер + 1;
	Возврат ИмяРеквизита;
КонецФункции 

&НаСервере
Процедура УстановитьСвойствоЭлементаНаСервере(ЭлементФормы, ЭлементДанных)
	Свойства = ЭлементДанных.НаборСвойств;
	Тип = ЭлементДанных.Тип;
	
	Если Свойства.Свойство("Заголовок") Тогда
		ЭлементФормы.Заголовок = Свойства.Заголовок;
	КонецЕсли;

	Если Свойства.Свойство("ГоризонтальноеПоложение") Тогда
		Если Тип = "Надпись" 
			ИЛИ Тип = "Флажок" Тогда
			ЭлементФормы.ГоризонтальноеПоложениеВГруппе = ГоризонтальноеПоложениеЭлемента[Свойства.ГоризонтальноеПоложение];
		Иначе
			ЭлементФормы.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента[Свойства.ГоризонтальноеПоложение];
		КонецЕсли;
	КонецЕсли;   

	Если Свойства.Свойство("ПоложениеЗаголовка") Тогда
		ЭлементФормы.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы[Свойства.ПоложениеЗаголовка];
	КонецЕсли;        

	Если Свойства.Свойство("ЦветФона") Тогда
		ЭлементФормы.ЦветФона = WebЦвета[Свойства.ЦветФона];
	КонецЕсли;        

	Если Свойства.Свойство("ЦветТекста") Тогда        
		Если Тип = "Флажок" Тогда
			ЭлементФормы.ЦветТекстаЗаголовка = WebЦвета[Свойства.ЦветТекста];
		Иначе
			ЭлементФормы.ЦветТекста = WebЦвета[Свойства.ЦветТекста];
		КонецЕсли;
	КонецЕсли;	  
	
	Если Свойства.Свойство("КнопкаПоУмолчанию") Тогда        
		ЭлементФормы.КнопкаПоУмолчанию = Булево(Свойства.КнопкаПоУмолчанию);
	КонецЕсли;	 	
 	
	Если Свойства.Свойство("ПоложениеКартинки") И Тип <> "Меню" Тогда        
		ЭлементФормы.ПоложениеКартинки = ПоложениеКартинкиКнопкиФормы[Свойства.ПоложениеКартинки];
	КонецЕсли;	 

	УстановитьСвойствоЭлементаМодификаторПоляВводаНаСервере(Свойства, ЭлементФормы);

	Если Свойства.Свойство("МногострочныйРежим") Тогда        
		ЭлементФормы.МногострочныйРежим = Булево(Свойства.МногострочныйРежим);
	КонецЕсли;	 	

	Если Свойства.Свойство("Высота") Тогда        
		ЭлементФормы.Высота = Свойства.Высота; 
		ЭлементФормы.РастягиватьПоВертикали = Ложь;
	КонецЕсли;	 	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойствоЭлементаМодификаторПоляВводаНаСервере(Свойства, ЭлементФормы)
	
	Если Свойства.Свойство("КнопкаВыпадающегоСписка") Тогда        
		ЭлементФормы.КнопкаВыпадающегоСписка = Булево(Свойства.КнопкаВыпадающегоСписка);
	КонецЕсли;	 	
	
	Если Свойства.Свойство("КнопкаВыбора") Тогда        
		ЭлементФормы.КнопкаВыбора = Булево(Свойства.КнопкаВыбора);
	КонецЕсли;	 	
	
	Если Свойства.Свойство("КнопкаОчистки") Тогда        
		ЭлементФормы.КнопкаОчистки = Булево(Свойства.КнопкаОчистки);
	КонецЕсли;	 	
	
	Если Свойства.Свойство("КнопкаРегулирования") Тогда        
		ЭлементФормы.КнопкаРегулирования = Булево(Свойства.КнопкаРегулирования);
	КонецЕсли;	 	
	
	Если Свойства.Свойство("КнопкаОткрытия") Тогда        
		ЭлементФормы.КнопкаОткрытия = Булево(Свойства.КнопкаОткрытия);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьСтрокуТаблицыРеквизитовНаСервере(ОписанияРеквизитов, УИД)
	Результат = Новый Структура("ИмяРеквизита,ИмяЭлемента");

	ТекущееОписание = Неопределено;
	Для Каждого Описание Из ОписанияРеквизитов Цикл
		Если Описание.УИД <> УИД Тогда
			Продолжить;
		КонецЕсли;
		
		ТекущееОписание = Описание;
		Прервать;
	КонецЦикла;
	Результат.ИмяРеквизита = ТекущееОписание.ИмяРеквизита;
	Результат.ИмяЭлемента = ТекущееОписание.ИмяЭлемента;
	
	Если ТекущееОписание.Номер > 1 Тогда
		СтрокаНомер = Формат(ТекущееОписание.Номер - 1, "ЧГ=0");
		Результат.ИмяРеквизита = Результат.ИмяРеквизита + СтрокаНомер;
		Результат.ИмяЭлемента = Результат.ИмяЭлемента + СтрокаНомер;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти  

#Область Форматирование

&НаКлиенте
Функция НовыеПараметрыФорматирования(РасчетДлины, Длина)
	Результат = Новый Структура();
	Результат.Вставить("РасчетДлины", РасчетДлины);
	Результат.Вставить("Длина", ?(РасчетДлины, 0, Длина));
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ВыполнитьФорматирование(ПараметрыВыполнения, ЭлементРодитель)    
	
	Подчиненные = ЭлементРодитель.Элементы;
	
	Для Каждого ЭлементДанных Из Подчиненные Цикл 
		
		Выполнена = Ложь;
		ФорматироватьВертикальнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Выполнена);
		Если Выполнена Тогда
			Продолжить;
		КонецЕсли;
		
		ФорматироватьСтрочныйЭлемент(ПараметрыВыполнения, ЭлементРодитель, ЭлементДанных);
		ФорматированиеДобавитьРезультат(ЭлементРодитель, ЭлементДанных.Формат.Результат);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьСтрочныйЭлемент(ПараметрыВыполнения, ЭлементРодитель, ЭлементДанных)
	ЭлементДанных.Формат.Результат.Очистить();
	Выполнена = Ложь;
	
	ФорматироватьГоризонтальнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ФорматироватьОднострочнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;
	
	ФорматироватьТаблицу(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ФорматироватьПолеВвода(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ФорматироватьФлажок(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ФорматироватьНадпись(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;
	
	ФорматироватьСтраницы(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ФорматироватьКоманднуюПанель(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьВертикальнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "ВертикальнаяГруппа" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;
	
	ВыполнитьФорматирование(ПараметрыВыполнения, ЭлементДанных);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьГоризонтальнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "ГоризонтальнаяГруппа" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;

	НаборСтрок = Новый Массив;
	Для Каждого ВертикальнаяГруппа Из ЭлементДанных.Элементы Цикл
		ВертикальнаяГруппа.Формат.Результат.Очистить();
		
		СтрокаЗаголовок = Лексема("РазделительГруппаДобавить");
		Если ВертикальнаяГруппа.НаборСвойств.ОтображатьЗаголовок Тогда
			СтрокаЗаголовок = СтрокаЗаголовок + СокрЛП(ВертикальнаяГруппа.НаборСвойств.Заголовок);			
		КонецЕсли; 
		СтрокаЗаголовок = ВыровнитьСтроку(СтрокаЗаголовок, "Лево", ВертикальнаяГруппа.Формат.Длина);
		ВертикальнаяГруппа.Формат.Результат.Добавить(СтрокаЗаголовок);
		
		ПараметрыВыполненияРасчет = НовыеПараметрыФорматирования(ПараметрыВыполнения.РасчетДлины, ВертикальнаяГруппа.Формат.Длина);
		ВыполнитьФорматирование(ПараметрыВыполненияРасчет, ВертикальнаяГруппа);
		
		НаборСтрок.Добавить(ВертикальнаяГруппа.Формат.Результат);
	КонецЦикла;
	
	Результат = СоединитьСтрокиГоризонтально(НаборСтрок, "   " +  Лексема("РазделительГруппа") + "   ", "   ");
	ФорматированиеДобавитьРезультат(ЭлементДанных, Результат);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьОднострочнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "ОднострочнаяГруппа" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;

	НаборСтрок = Новый Массив;
	Для Каждого ЭлементГруппы Из ЭлементДанных.Элементы Цикл
		ЭлементГруппы.Формат.Результат.Очистить();
		
		ПараметрыВыполненияРасчет = НовыеПараметрыФорматирования(ПараметрыВыполнения.РасчетДлины, ЭлементГруппы.Формат.Длина);
		
		ФорматироватьСтрочныйЭлемент(ПараметрыВыполненияРасчет, ЭлементДанных, ЭлементГруппы);
		
		НаборСтрок.Добавить(ЭлементГруппы.Формат.Результат);
	КонецЦикла;
	
	Результат = СоединитьСтрокиГоризонтально(НаборСтрок, " & ");
	ФорматированиеДобавитьРезультат(ЭлементДанных, Результат);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьСтраницы(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "Страницы" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;
	
	ИсключаемыеСвойства = СтрРазделить(
		"Заголовок", Символы.ПС);
	
	Для Каждого Страница Из ЭлементДанных.Элементы Цикл
		Страница.Формат.Результат.Очистить();
		
		ФорматированиеДобавитьРезультат(ЭлементДанных, "");
		Результат = "/" + Страница.НаборСвойств.Заголовок;
		Результат = Результат + ФорматироватьНаборСвойств(Страница.НаборСвойств, ИсключаемыеСвойства);
		ФорматированиеДобавитьРезультат(ЭлементДанных, Результат);
		ФорматированиеДобавитьРезультат(ЭлементДанных, "");
		
		ПараметрыВыполненияРасчет = НовыеПараметрыФорматирования(ПараметрыВыполнения.РасчетДлины, Страница.Формат.Длина);
		ВыполнитьФорматирование(ПараметрыВыполненияРасчет, Страница);
		
		Результат = Новый Массив;
		Для Каждого Строка Из Страница.Формат.Результат Цикл
			Результат.Добавить("	" + Строка);
		КонецЦикла;
		
		ФорматированиеДобавитьРезультат(ЭлементДанных, Результат);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьТаблицу(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "Таблица" 
		И НЕ ЭлементДанных.Тип = "Дерево" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;
	
	ЭлементДанных.Формат.Результат.Очистить();  
	
	
	ПустаяСтрока = ФорматироватьГоризонтальноеПоложение(
		"", 
		"Лево", 
		ПараметрыВыполнения.Длина);

	ФорматированиеДобавитьРезультат(ЭлементДанных, ПустаяСтрока);
	
	ИсключаемыеСвойства = Новый Массив;
	Результат = ФорматироватьНаборСвойств(ЭлементДанных.НаборСвойств, ИсключаемыеСвойства);
	
	Если НЕ ПустаяСтрока(Результат) Тогда
		ФорматированиеДобавитьРезультат(ЭлементДанных, Результат);
	КонецЕсли;

	НаборКолонок = Новый Массив;
	
	Для СчКолонок = 0 По ЭлементДанных.Колонки.ВГраница() Цикл
		Колонка = ЭлементДанных.Колонки[СчКолонок]; 
		Колонка.Формат.Результат.Очистить();
		
		ПараметрыВыполненияКолонка = НовыеПараметрыФорматирования(ПараметрыВыполнения.РасчетДлины, ПараметрыВыполнения.Длина);
		ФорматироватьКолонку(ПараметрыВыполненияКолонка, Колонка);
		ФорматироватьРазделитель(ПараметрыВыполненияКолонка, Колонка);
		
		ФорматироватьСтрокиТаблицы(
			ПараметрыВыполненияКолонка, 
			Колонка, 
			СчКолонок, 
			ЭлементДанных.Строки, 
			0);

		НаборКолонок.Добавить(Колонка.Формат.Результат);
	КонецЦикла;      
	Результат = СоединитьСтрокиГоризонтально(НаборКолонок, "|", , Истина);
	
	ФорматированиеДобавитьРезультат(ЭлементДанных, Результат); 
	
	ФорматированиеДобавитьРезультат(ЭлементДанных, ПустаяСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьСтрокиТаблицы(ПараметрыВыполненияКолонка, Колонка, НомерКолонки, Строки, Уровень)
	Для Каждого Строка Из Строки Цикл  
		ТекУровень = ?(НомерКолонки = 0, Уровень, 0);
		ФорматироватьЯчейку(ПараметрыВыполненияКолонка, Колонка, Строка.Ячейки[НомерКолонки], ТекУровень);
		
		ФорматироватьСтрокиТаблицы(ПараметрыВыполненияКолонка, Колонка, НомерКолонки, Строка.Строки, Уровень + 1);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьКолонку(ПараметрыВыполнения, Колонка) 
	Строка = " "+ Колонка.НаборСвойств.Заголовок + " ";
	Строка = ВыровнитьСтроку(Строка, Колонка.НаборСвойств.ГоризонтальноеПоложение, Колонка.Формат.Длина);
	
	ФорматированиеУстановитьРезультат(Колонка, Строка);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьРазделитель(ПараметрыВыполнения, Колонка)
	МинимальнаяДлина = 5;
	Длина = Макс(Колонка.Формат.Длина, МинимальнаяДлина);
	
	СимволСлева = " ";
	СимволСправа = " ";
	
	Если Колонка.НаборСвойств.ГоризонтальноеПоложение = "Право" Тогда
		СимволСправа = ": ";
	КонецЕсли;
	
	Если Колонка.НаборСвойств.ГоризонтальноеПоложение = "Центр" Тогда
		СимволСлева = " :";
		СимволСправа = ": ";
	КонецЕсли;
	
	Строка = СимволСлева 
		+ СтрПовторитьСимвол("-", Длина - СтрДлина(СимволСлева) - СтрДлина(СимволСправа))
		+ СимволСправа;
		
	ФорматированиеДобавитьРезультат(Колонка, Строка);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьЯчейку(ПараметрыВыполнения, Колонка, Ячейка, Уровень)      
	Строка = Ячейка.Значение;
	
	Строка = ПолучитьСтрокуФлажок(
		Строка, 
		Ячейка.ЕстьФлажок, 
		Ячейка.ЗначениеФлажка, 
		"Право");

	Если Уровень > 0 Тогда
		Строка = СтрПовторитьСимвол(".", Уровень) + " " + Строка;
	КонецЕсли;
		
	Строка = " "+ Строка + " ";
	Строка = ВыровнитьСтроку(Строка, Колонка.НаборСвойств.ГоризонтальноеПоложение, Колонка.Формат.Длина);
	
	ФорматированиеДобавитьРезультат(Колонка, Строка);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьПолеВвода(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "ПолеВвода" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;
	
	ИсключаемыеСвойства = СтрРазделить(
		"КнопкаВыпадающегоСписка
		|КнопкаВыбора
		|КнопкаОчистки
		|КнопкаРегулирования
		|КнопкаОткрытия
		|МногострочныйРежим
		|ГоризонтальноеПоложение
		|Высота
		|Заголовок
		|ПоложениеЗаголовка", Символы.ПС);
	
	ЗаголовокЭлемента = ЭлементДанных.НаборСвойств.Заголовок + ": ";
	Результат = ЗаголовокЭлемента + ЭлементДанных.Значение;

	ДлинаЗначения = СтрДлина(ЭлементДанных.Значение);
	ДлинаЗаголовка = СтрДлина(ЗаголовокЭлемента);
		
	СвойстваПоляВвода = "";   
	ФорматироватьДобавитьСвойство(СвойстваПоляВвода, ЭлементДанных.НаборСвойств, "КнопкаВыбора", "В");
	ФорматироватьДобавитьСвойство(СвойстваПоляВвода, ЭлементДанных.НаборСвойств, "КнопкаВыпадающегоСписка", "С");
	ФорматироватьДобавитьСвойство(СвойстваПоляВвода, ЭлементДанных.НаборСвойств, "КнопкаОчистки", "Х");
	ФорматироватьДобавитьСвойство(СвойстваПоляВвода, ЭлементДанных.НаборСвойств, "КнопкаОткрытия", "О");
	ФорматироватьДобавитьСвойство(СвойстваПоляВвода, ЭлементДанных.НаборСвойств, "КнопкаРегулирования", "Д");
	
	Если НЕ ПустаяСтрока(СвойстваПоляВвода) Тогда
		Результат = Результат + "__" + СвойстваПоляВвода;
	КонецЕсли;
	
	Результат = Результат + ФорматироватьНаборСвойств(ЭлементДанных.НаборСвойств, ИсключаемыеСвойства);
	
	Результат = ФорматироватьГоризонтальноеПоложение(
		Результат, 
		ЭлементДанных.НаборСвойств.ГоризонтальноеПоложение, 
		ПараметрыВыполнения.Длина);
	
	ФорматированиеУстановитьРезультат(ЭлементДанных, Результат);	

	Если ЭлементДанных.НаборСвойств.Свойство("МногострочныйРежим") 
		И Булево(ЭлементДанных.НаборСвойств.Свойство("МногострочныйРежим")) Тогда
		
		СтрМногострочный = СтрПовторитьСимвол(" ", ДлинаЗаголовка) +  СтрПовторитьСимвол("_", ДлинаЗначения);
		Для СчСтрок = 2 По Число(ЭлементДанных.НаборСвойств.Высота) Цикл   
			ФорматированиеДобавитьРезультат(ЭлементДанных, СтрМногострочный);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьНадпись(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "Надпись" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;
	
	ИсключаемыеСвойства = СтрРазделить(
		"ГоризонтальноеПоложение
		|Заголовок", Символы.ПС);
	
	Результат = ЭлементДанных.НаборСвойств.Заголовок;
	
	Результат = Результат + ФорматироватьНаборСвойств(ЭлементДанных.НаборСвойств, ИсключаемыеСвойства);
	
	Результат = ФорматироватьГоризонтальноеПоложение(
		Результат, 
		ЭлементДанных.НаборСвойств.ГоризонтальноеПоложение, 
		ПараметрыВыполнения.Длина);
	
	ФорматированиеУстановитьРезультат(ЭлементДанных, Результат);	
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьФлажок(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "Флажок" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;
	
	ИсключаемыеСвойства = СтрРазделить(
		"Заголовок
		|ГоризонтальноеПоложение
		|ПоложениеЗаголовка", Символы.ПС);
	
	Результат = ЭлементДанных.НаборСвойств.Заголовок;
	
	Результат = ПолучитьСтрокуФлажок(
		Результат, 
		Истина, 
		ЭлементДанных.Значение, 
		ЭлементДанных.НаборСвойств.ПоложениеЗаголовка);
	
	Результат = Результат + ФорматироватьНаборСвойств(ЭлементДанных.НаборСвойств, ИсключаемыеСвойства);
	
	Результат = ФорматироватьГоризонтальноеПоложение(
		Результат, 
		ЭлементДанных.НаборСвойств.ГоризонтальноеПоложение, 
		ПараметрыВыполнения.Длина);
	
	ФорматированиеУстановитьРезультат(ЭлементДанных, Результат);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьКоманднуюПанель(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "КоманднаяПанель" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;
	
	ИсключаемыеСвойства = СтрРазделить(
		"ГоризонтальноеПоложение", Символы.ПС);
	
	ЕстьМеню = Ложь;
	
	Кнопки = ПолучитьСписокКнопокБезГрупп(ЭлементДанных);
	
	НаборКнопок = ФорматироватьПолучитьКнопкиКоманднойПанели(ПараметрыВыполнения, Кнопки, ЕстьМеню);
	
	СтрКнопки = СтрСоединить(
		НаборКнопок, 
		" " +  Лексема("КоманднаяПанельРазделительКнопок") + " ");

	Результат = Лексема("КоманднаяПанельНачало") 
		+ " " 
		+ СтрКнопки
		+ " "; 
	
	Если НЕ ЕстьМеню Тогда
		Результат = Результат + Лексема("КоманднаяПанельКонец"); 
	
		Результат = Результат + ФорматироватьНаборСвойств(ЭлементДанных.НаборСвойств, ИсключаемыеСвойства);
		
		Результат = ФорматироватьГоризонтальноеПоложение(
			Результат, 
			ЭлементДанных.НаборСвойств.ГоризонтальноеПоложение, 
			ПараметрыВыполнения.Длина);
		
		ФорматированиеУстановитьРезультат(ЭлементДанных, Результат);	
		
		Возврат;
	КонецЕсли;
	
	ПараметрыФорматированияГоризонтальногоПоложения = ФорматироватьГоризонтальноеПоложениеПодготовка(
		Результат, 
		ЭлементДанных.НаборСвойств.ГоризонтальноеПоложение, 
		ПараметрыВыполнения.Длина);
		
	Результат = 
		ПараметрыФорматированияГоризонтальногоПоложения.Слева 
		+ ПараметрыФорматированияГоризонтальногоПоложения.Строка;
		
	ФорматированиеУстановитьРезультат(ЭлементДанных, Результат);	
	
	Для Каждого Кнопка Из Кнопки Цикл
		Если Кнопка.Тип <> "Меню" Тогда
			Продолжить;
		КонецЕсли;	
		
		ФорматироватьМеню(
			ПараметрыВыполнения, 
			ЭлементДанных, 
			Кнопка, 
			0);
	КонецЦикла;
	
	ТекстКонецЭлемента = 
		" " 
		+ Лексема("КоманднаяПанельКонец") 
		+ ПараметрыФорматированияГоризонтальногоПоложения.Справа;
	ФорматированиеДобавитьРезультат(ЭлементДанных, ТекстКонецЭлемента, Истина);	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСписокКнопокБезГрупп(Родитель)
	Результат = Новый Массив;
	Для Каждого Кнопка Из Родитель.Элементы Цикл
		Если Кнопка.Тип <> "ГруппаКнопок" Тогда
			Результат.Добавить(Кнопка);
			Продолжить;
		КонецЕсли;
			
		НаборКнопок = ПолучитьСписокКнопокБезГрупп(Кнопка);
		
		Если Результат.Количество() > 0 Тогда
			Результат.Добавить(Кнопка);
		КонецЕсли; 
		
		Для Каждого ДобавляемаяКнопка Из НаборКнопок Цикл
			Результат.Добавить(ДобавляемаяКнопка);
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ФорматироватьПолучитьКнопкиКоманднойПанели(ПараметрыВыполнения, Кнопки, ЕстьМеню)
	НаборКнопок = Новый Массив;
	Для Каждого Кнопка Из Кнопки Цикл
		Если Кнопка.Тип = "ГруппаКнопок" Тогда
			НаборКнопок.Добавить(" "+ Лексема("КоманднаяПанельРазделительМеню"));
			Продолжить;
		КонецЕсли;
		
		Если Кнопка.Тип = "Меню" Тогда
			ЕстьМеню = Истина;
		КонецЕсли;
		
		ПараметрыВыполненияКнопка = НовыеПараметрыФорматирования(ПараметрыВыполнения.РасчетДлины, ПараметрыВыполнения.Длина);
		ФорматироватьКнопкуКоманднойПанели(ПараметрыВыполненияКнопка, Кнопка);
		
		НаборКнопок.Добавить(Кнопка.Формат.Результат[0]);
	КонецЦикла;
	
	Возврат НаборКнопок;
КонецФункции

&НаКлиенте
Процедура ФорматироватьМеню(
		ПараметрыВыполнения, 
		ТекКоманднаяПанель, 
		ЭлементДанных, 
		Уровень)
		
	Если ЭлементДанных.Тип = "ГруппаКнопок" Тогда
		Результат = Лексема("КоманднаяПанельРазделительМеню");
	Иначе
		ЭтоМеню = (Уровень = 0);	
		Результат = ПолучитьФорматированноеОписаниеКнопки(ЭлементДанных, ЭтоМеню);
	КонецЕсли;

	Результат = ПолучитьОписаниеСУровнем(Результат, Уровень);
	
	ФорматированиеДобавитьРезультат(ТекКоманднаяПанель, Результат);	
	
	Если ЭлементДанных.Тип = "Меню" Тогда
		ФорматироватьЭлементыМеню(ПараметрыВыполнения, ТекКоманднаяПанель, Уровень + 1, ЭлементДанных);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьОписаниеСУровнем(Результат, Уровень)
	Если Уровень = 0 Тогда
		Возврат Результат;
	КонецЕсли;	
	
	Возврат
		СтрПовторитьСимвол(Лексема("Уровень"), Уровень) 
		+ " " 
		+ Результат;
КонецФункции

&НаКлиенте
Процедура ФорматироватьЭлементыМеню(ПараметрыВыполнения, ТекКоманднаяПанель, Уровень, Меню)
	ЭлементыБезГрупп = ПолучитьСписокКнопокБезГрупп(Меню);
	Для Каждого Подменю Из ЭлементыБезГрупп Цикл
		ФорматироватьМеню(
			ПараметрыВыполнения, 
			ТекКоманднаяПанель, 
			Подменю, 
			Уровень);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьФорматированноеОписаниеКнопки(ЭлементДанных, ЭтоМеню = Ложь)
	
	ТекстКартинка = Неопределено;
	ТекстЗаголовок = ЭлементДанных.НаборСвойств.Заголовок;
	
	Если ЭлементДанных.Картинка <> Неопределено Тогда
		ТекстКартинка = "@" + ЭлементДанных.Картинка;
	КонецЕсли;

	Если ЭтоМеню И НЕ ПустаяСтрока(ТекстЗаголовок) Тогда
		ТекстКартинка = Неопределено;
	КонецЕсли;
	
	Если ТекстКартинка = Неопределено Тогда
		Возврат ТекстЗаголовок;
	КонецЕсли;
	
	Если ЭлементДанных.НаборСвойств.ПоложениеКартинки = "Лево" Тогда
		Возврат ТекстКартинка + " " + ТекстЗаголовок;
	КонецЕсли;
	
	Возврат ТекстЗаголовок  + " " + ТекстКартинка;
КонецФункции

&НаКлиенте
Процедура ФорматироватьКнопкуКоманднойПанели(ПараметрыВыполнения, ЭлементДанных)
	ИсключаемыеСвойства = СтрРазделить(
		"ПоложениеКартинки
		|Заголовок", Символы.ПС);
	
	Результат = ПолучитьФорматированноеОписаниеКнопки(ЭлементДанных);
	
	Результат = Результат + ФорматироватьНаборСвойств(ЭлементДанных.НаборСвойств, ИсключаемыеСвойства);
	
	ФорматированиеУстановитьРезультат(ЭлементДанных, Результат);	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтрокуФлажок(Строка, ЕстьФлажок, ЗначениеФлажка, ПоложениеЗаголовка)
	Если НЕ ЕстьФлажок Тогда
		Возврат Строка;
	КонецЕсли;
	
	Значение = " ";
	Если ЗначениеФлажка Тогда
		Значение = "X";
	КонецЕсли;
	Значение = "[" + Значение + "]";
	
	Если ПустаяСтрока(Строка) Тогда
		Возврат Значение;
	КонецЕсли;
	
	Если ПоложениеЗаголовка = "Право" Тогда
		Возврат Значение + " " + Строка;
	КонецЕсли;
	Возврат Строка + " " + Значение;
КонецФункции

&НаКлиенте
Процедура ФорматироватьДобавитьСвойство(Строка, Свойства, ИмяСвойство, Значение)   
	Если НЕ Свойства.Свойство(ИмяСвойство) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ Свойства[ИмяСвойство] Тогда
		Возврат;
	КонецЕсли;
	Строка = Строка + Значение;
КонецПроцедуры

&НаКлиенте
Функция ФорматироватьНаборСвойств(Свойства, ИсключаемыеСвойства)
	МассивРезультат = Новый Массив;
	Для Каждого КлючЗначение Из Свойства Цикл 
		Если ИсключаемыеСвойства.Найти(КлючЗначение.Ключ) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		СтрокаСвойство = СтрШаблон("%1 = %2", КлючЗначение.Ключ, КлючЗначение.Значение);
		МассивРезультат.Добавить(СтрокаСвойство);
	КонецЦикла;  
	
	Если МассивРезультат.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат " {" + СтрСоединить(МассивРезультат,"; ") + "}";
КонецФункции

&НаКлиенте
Функция СоединитьСтрокиГоризонтально(
	НаборыСтрок, 
	Символ, 
	СимволПерваяСтрока = Неопределено, 
	ДобавитьВНачалоКонец = Ложь)

	Результат = Новый Массив;
	СчСтроки = 0;
	Пока Истина Цикл
		МассивСтрок = Новый Массив;
		ДобавленаСтрока = Ложь;
		Для Каждого Набор Из НаборыСтрок Цикл
			Если СчСтроки > Набор.ВГраница() Тогда
				МассивСтрок.Добавить("");
				Продолжить;
			КонецЕсли;
			МассивСтрок.Добавить(Набор[СчСтроки]);
			ДобавленаСтрока = Истина;
		КонецЦикла;    
		
		Если НЕ ДобавленаСтрока Тогда
			Прервать;
		КонецЕсли;
		
		ТекСимвол = Символ;
		Если СчСтроки = 0 И СимволПерваяСтрока <> Неопределено Тогда
			ТекСимвол = СимволПерваяСтрока;
		КонецЕсли;

        СтрРезультат = СтрСоединить(МассивСтрок, ТекСимвол);
		Если ДобавитьВНачалоКонец Тогда
			СтрРезультат  = ТекСимвол + СтрРезультат + ТекСимвол;
		КонецЕсли; 
		
		Результат.Добавить(СтрРезультат);
		СчСтроки = СчСтроки + 1;
	КонецЦикла;     

	Возврат Результат;
КонецФункции

&НаКлиенте
Функция СтрПовторитьСимвол(Символ, Количество)
	Если Количество <= 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Результат = "";
	Для Сч = 1 По Количество Цикл
		Результат = Результат + Символ;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ВыровнитьСтроку(Знач Строка, ГоризонтальноеВыравнивание, Длина)
	КоличествоСимволовКДобавлению = Длина - СтрДлина(Строка);
	Если КоличествоСимволовКДобавлению <= 0 Тогда
		Возврат Строка;
	КонецЕсли;
	
	Если ГоризонтальноеВыравнивание = "Лево" Тогда
		Возврат Строка + СтрПовторитьСимвол(" ", КоличествоСимволовКДобавлению);
	КонецЕсли;
	
	Если ГоризонтальноеВыравнивание = "Право" Тогда
		Возврат СтрПовторитьСимвол(" ", КоличествоСимволовКДобавлению) + Строка;
	КонецЕсли;

	КоличествоСимволовКДобавлениюСлева = Цел(КоличествоСимволовКДобавлению / 2);
	КоличествоСимволовКДобавлениюСправа = КоличествоСимволовКДобавлению - КоличествоСимволовКДобавлениюСлева;
	
	Возврат СтрПовторитьСимвол(
		" ", 
		КоличествоСимволовКДобавлениюСлева) + Строка + СтрПовторитьСимвол(" ", КоличествоСимволовКДобавлениюСправа);
КонецФункции

&НаКлиенте
Процедура ФорматированиеУстановитьРезультат(ЭлементДанных, Результат)
	ФорматированиеДобавитьРезультат(ЭлементДанных, Результат);
КонецПроцедуры

&НаКлиенте
Процедура ФорматированиеЗаменитьРезультат(ЭлементДанных, Результат, Индекс)
	
КонецПроцедуры

&НаКлиенте
Процедура ФорматированиеДобавитьРезультат(ЭлементДанных, Результат, ДобавитьВПоследнююСтроку = Ложь)
	Если ДобавитьВПоследнююСтроку Тогда
		НаборСтрок = ЭлементДанных.Формат.Результат;
		Индекс = НаборСтрок.ВГраница();
		ПоследняяСтрока = НаборСтрок[Индекс];
		НаборСтрок[Индекс] = ПоследняяСтрока + Результат; 
		ЭлементДанных.Формат.Длина = Макс(ЭлементДанных.Формат.Длина, СтрДлина(НаборСтрок[Индекс]));
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		Для Каждого ЭлементРезультат Из Результат Цикл
			ЭлементДанных.Формат.Результат.Добавить(ЭлементРезультат);
			ЭлементДанных.Формат.Длина = Макс(ЭлементДанных.Формат.Длина, СтрДлина(ЭлементРезультат));
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ЭлементДанных.Формат.Результат.Добавить(Результат);
	ЭлементДанных.Формат.Длина = Макс(ЭлементДанных.Формат.Длина, СтрДлина(Результат));
КонецПроцедуры

&НаКлиенте
Функция ФорматироватьГоризонтальноеПоложениеПодготовка(Строка, ГоризонтальноеПоложение, Длина)
	Результат = Новый Структура("Слева,Справа,Строка", "", "" ,"");
	СимволСлева = "";
	СимволСправа = "";
	Если ГоризонтальноеПоложение = "Право" Тогда
		СимволСлева = "-> ";
	КонецЕсли;
	
	Если ГоризонтальноеПоложение = "Центр" Тогда
		СимволСлева = "-> ";
		СимволСправа = " <-";
	КонецЕсли;
	
	Результат.Слева = СимволСлева;
	Результат.Справа = СимволСправа;
	Результат.Строка = ВыровнитьСтроку(Строка, ГоризонтальноеПоложение, Длина - СтрДлина(СимволСлева) - СтрДлина(СимволСправа));
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Функция ФорматироватьГоризонтальноеПоложение(Строка, ГоризонтальноеПоложение, Длина)
	Результат = ФорматироватьГоризонтальноеПоложениеПодготовка(Строка, ГоризонтальноеПоложение, Длина);	
	Возврат Результат.Слева 
	    + Результат.Строка
		+ Результат.Справа;
КонецФункции

&НаКлиенте
Процедура ОбернутьВыделенныйТекст(СимволДо, СимволПосле)
	НачалоСтроки = 0;
	НачалоКолонки = 0;
	КонецСтроки = 0;
	КонецКолонки = 0;
	
	Элементы.__Редактор.ПолучитьГраницыВыделения(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки);
	Элементы.__Редактор.ВыделенныйТекст = СимволДо + Элементы.__Редактор.ВыделенныйТекст + СимволПосле;
	Элементы.__Редактор.УстановитьГраницыВыделения(НачалоСтроки, НачалоКолонки + СтрДлина(СимволДо), КонецСтроки, КонецКолонки + СтрДлина(СимволДо));
КонецПроцедуры

#КонецОбласти    