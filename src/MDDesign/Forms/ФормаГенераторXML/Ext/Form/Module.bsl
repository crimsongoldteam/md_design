// MIT License

// Copyright (c) 2025 Zherebtsov Nikita <nikita@crimsongold.ru>

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

// https://github.com/crimsongoldteam/md_design

#Область ОписаниеПеременных

&НаКлиенте
Перем мПараметрыВыполнения;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");        
	ЭлементыДеревоРеквизиты = ДеревоРеквизиты.ПолучитьЭлементы();
	Для Каждого ОписаниеРеквизита Из Параметры.СхемыФормы.СхемаРеквизиты Цикл
		СтрокаРеквизиты = ЭлементыДеревоРеквизиты.Добавить();
		СтрокаРеквизиты.Пометка = Истина; 
		СтрокаРеквизиты.ТекИмя = ОписаниеРеквизита.Имя; 
		СтрокаРеквизиты.Имя = ОписаниеРеквизита.Имя;
		СтрокаРеквизиты.УИД = Новый УникальныйИдентификатор;
		
		ЭтоДерево = ОписаниеРеквизита.ОписаниеТипов.Типы.Найти("ДеревоЗначений") <> Неопределено;
		ЭтоТаблица = ЭтоДерево ИЛИ ОписаниеРеквизита.ОписаниеТипов.Типы.Найти("ТаблицаЗначений") <> Неопределено;
		Если НЕ ЭтоТаблица Тогда
			
			СтрокаРеквизиты.ОписаниеТипов = ОбработкаОбъект.ПолучитьОписаниеТипов(ОписаниеРеквизита.ОписаниеТипов);
			
			Продолжить;
		КонецЕсли;
		
		СтрокаРеквизиты.ЭтоТаблица = ЭтоТаблица;
		СтрокаРеквизиты.ЭтоДерево = ЭтоДерево;
		Для Каждого ОписаниеПодчиненногоРеквизита Из ОписаниеРеквизита.Подчиненные Цикл
			СтрокаПодчиненныйРеквизит = СтрокаРеквизиты.ПолучитьЭлементы().Добавить();
			СтрокаПодчиненныйРеквизит.Пометка = Истина; 
			СтрокаПодчиненныйРеквизит.ТекИмя = ОписаниеПодчиненногоРеквизита.Имя; 
			СтрокаПодчиненныйРеквизит.Имя = ОписаниеПодчиненногоРеквизита.Имя;
			СтрокаПодчиненныйРеквизит.УИД = Новый УникальныйИдентификатор;   
			СтрокаПодчиненныйРеквизит.ОписаниеТипов = ОбработкаОбъект.ПолучитьОписаниеТипов(ОписаниеПодчиненногоРеквизита.ОписаниеТипов);
		КонецЦикла;
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)    
	
	мПараметрыВыполнения = Новый Структура();
	
	мПараметрыВыполнения.Вставить("КаталогForms", "");
	мПараметрыВыполнения.Вставить("КаталогФормы", "");
	мПараметрыВыполнения.Вставить("КаталогExt", "");

	мПараметрыВыполнения.Вставить("ИмяФайлаForm", "");
	мПараметрыВыполнения.Вставить("ИмяФайлаФормы", "");
	мПараметрыВыполнения.Вставить("ИмяФайлаОбъекта", "");
	
	мПараметрыВыполнения.Вставить("ВерсияXML", "1.0");
	мПараметрыВыполнения.Вставить("АттрибутыОбщие", Новый Соответствие);
	мПараметрыВыполнения.Вставить("АттрибутMDClasses", "http://v8.1c.ru/8.3/MDClasses");
	мПараметрыВыполнения.Вставить("АттрибутForm", "http://v8.1c.ru/8.3/xcf/logform");
	
	мПараметрыВыполнения.Вставить("ИдентификаторФормы", Строка(Новый УникальныйИдентификатор));
	
	мПараметрыВыполнения.Вставить("Идентификатор", 1);
	
	ДобавитьЭлементВДеревоЭлементов(Параметры.СхемыФормы.СхемаЭлементы, ДеревоЭлементы.ПолучитьЭлементы());
	
	ОбновитьПредставлениеОбъекта();
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьФлажкиДеревоРеквизиты(Команда)
	Для Каждого Строка Из ДеревоРеквизиты Цикл
		Строка.Пометка = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажкиДеревоРеквизиты(Команда)
	Для Каждого Строка Из ДеревоРеквизиты Цикл
		Строка.Пометка = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	Если ЕстьКритическиеОшибки Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'При подготовке данных возникли критические ошибки. Выгрузка невозможна!'");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли; 
	
	ИмяНовойФормы = ДеревоЭлементы.ПолучитьЭлементы()[0].Имя;
	УстановитьКаталогВПараметрыВыполнения(ИмяНовойФормы);

	мПараметрыВыполнения.Вставить("Отказ", Ложь);
	
	ЗаполнитьДеревоКонфигурации();
	СоздатьКаталог(мПараметрыВыполнения.КаталогExt);
	СоздатьФайлФормы(мПараметрыВыполнения);
	СоздатьФайлForm(мПараметрыВыполнения);
	ДобавитьФормуВФайлОбъекта(мПараметрыВыполнения);   
	
	Если НЕ мПараметрыВыполнения.Отказ Тогда
		Закрыть();
		Состояние("Выгрузка успешно завершена");
	КонецЕсли;
КонецПроцедуры  

#КонецОбласти     

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КаталогXMLНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога); 
	ДиалогВыбораКаталога.Каталог = КаталогXML;  
	ДиалогВыбораКаталога.Заголовок = "Выберите каталог xml-выгрузки конфигурации"; 
	
	Оповещение = Новый ОписаниеОповещения("КаталогXMLНачалоВыбораЗавершение", ЭтотОбъект);
	ДиалогВыбораКаталога.Показать(Оповещение);
КонецПроцедуры

&НаКлиенте
Процедура КаталогXMLНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	КаталогXML = Результат[0];
КонецПроцедуры

&НаКлиенте
Процедура ИмяОбъектаНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)  
	СтандартнаяОбработка = Ложь;
	
	Если ПустаяСтрока(КаталогXML) Тогда 
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("Заполните каталог XML");
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ИмяОбъектаНачалоВыбораЗавершение", ЭтотОбъект); 
	
	ПараметрыОткрытия = Новый Структура("КаталогXML", КаталогXML);
	
	ФормаПросмотр = ОткрытьФорму(ПолучитьОписаниеОбработки() + ".Форма.ФормаВыбораОбъектаКонфигурации", ПараметрыОткрытия, ЭтаФорма, , , , ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ИмяОбъектаНачалоВыбораЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	Если РезультатЗакрытия = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяОбъекта = РезультатЗакрытия.ИмяОбъекта;
	ТипОбъекта = РезультатЗакрытия.ТипОбъекта;
	ОбновитьПредставлениеОбъекта();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоЭлементы

&НаКлиенте
Процедура ДеревоРеквизитыПометкаПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.ДеревоРеквизиты.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Пометка = ТекущаяСтрока.Пометка;
	
	УстановитьСнятьФлажкиИерархически(ТекущаяСтрока, "Пометка", Пометка);
КонецПроцедуры

&НаКлиенте
Процедура ДеревоРеквизитыЭтоРеквизитФормыПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.ДеревоРеквизиты.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	ЭтоРеквизитФормы = ТекущаяСтрока.ЭтоРеквизитФормы;
	
	РодительСтроки = ТекущаяСтрока.ПолучитьРодителя();
	Если НЕ ТекущаяСтрока.ЭтоТаблица И
		НЕ ЭтоРеквизитФормы И
		РодительСтроки.ЭтоРеквизитФормы Тогда
		
		РодительСтроки.ЭтоРеквизитФормы = Ложь;
		Возврат;
	КонецЕсли;
	
	УстановитьСнятьФлажкиИерархически(ТекущаяСтрока, "ЭтоРеквизитФормы", ЭтоРеквизитФормы);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоЭлементы

&НаКлиенте
Процедура ДеревоЭлементыПометкаПриИзменении(Элемент)
	ТекущаяСтрока = Элементы.ДеревоЭлементы.ТекущиеДанные;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Пометка = ТекущаяСтрока.Пометка;
	
	Если ТекущаяСтрока.Тип = "Форма" Тогда
		ТекущаяСтрока.Пометка = Истина;
	КонецЕсли;
	
	УстановитьСнятьФлажкиИерархически(ТекущаяСтрока, "Пометка", Пометка);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Модули

&НаКлиенте
Функция УправлениеСвойствамиНаСервере()
	Возврат ВладелецФормы.УправлениеСвойствами();
КонецФункции

&НаКлиенте
Функция УправлениеСвойствами()
	Возврат ВладелецФормы.УправлениеСвойствами();
КонецФункции

#КонецОбласти

&НаКлиенте
Процедура УстановитьСнятьФлажкиИерархически(ЭлементДерева, ИмяПоля, Пометка)
	Подэлементы = ЭлементДерева.ПолучитьЭлементы();
	Для Каждого ТекЭлемент Из Подэлементы Цикл
		ТекЭлемент[ИмяПоля] = Пометка;
		УстановитьСнятьФлажкиИерархически(ТекЭлемент, ИмяПоля, Пометка);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДеревоЭлементов(ОписаниеЭлементов, ЭлементыДерева)
	Для Каждого ОписаниеЭлемента Из ОписаниеЭлементов Цикл
		ДобавитьЭлементВДеревоЭлементов(ОписаниеЭлемента, ЭлементыДерева);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЭлементВДеревоЭлементов(СхемаЭлемента, ЭлементыДерева)
	НовыйЭлементДерева = ЭлементыДерева.Добавить();      
	
	Если (СхемаЭлемента.Тип = "ПолеФормы" ИЛИ СхемаЭлемента.Тип = "ГруппаФормы" ИЛИ СхемаЭлемента.Тип = "ДекорацияФормы") И СхемаЭлемента.НаборСвойств.Свойство("Вид") Тогда
		ОписаниеВида = СхемаЭлемента.НаборСвойств.Вид;      
		ТипЭлемента = ОписаниеВида.Значение;
	Иначе
		ТипЭлемента = СхемаЭлемента.Тип;      
	КонецЕсли;
	
	НовыйЭлементДерева.Тип = ТипЭлемента;   
	
	ТипАнгл = ПолучитьАнглийскоеИмяТипаЭлемента(ТипЭлемента);
	Если ТипАнгл = Неопределено Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = СтрШаблон("Для типа элемента ""%1"" в макете ""ТипыЭлементов"" не указано название на английском.", ТипЭлемента);
		Сообщение.Сообщить();
		
		ЕстьКритическиеОшибки = Истина;
	КонецЕсли;
	НовыйЭлементДерева.ТипАнгл = ТипАнгл;
	
	НовыйЭлементДерева.ТекИмя = СхемаЭлемента.Имя;
	НовыйЭлементДерева.Имя = СхемаЭлемента.Имя;
	НовыйЭлементДерева.Пометка = Истина; 
	
	НаборСвойств = ПолучитьНаборСвойствАнгл(СхемаЭлемента, ТипЭлемента);

	НовыйЭлементДерева.НаборСвойств = НаборСвойств;
	
	Если НЕ СхемаЭлемента.Свойство("ПодчиненныеЭлементы") Тогда
		Возврат;
	КонецЕсли;
	ЗаполнитьДеревоЭлементов(СхемаЭлемента.ПодчиненныеЭлементы, НовыйЭлементДерева.ПолучитьЭлементы());
КонецПроцедуры

&НаКлиенте
Функция ПолучитьНаборСвойствАнгл(СхемаЭлемента, ТипЭлемента)
	ВидЭлемента = СхемаЭлемента.Вид; 
	
	НаборСвойств = Новый Структура;
	Для Каждого КлючЗначение Из СхемаЭлемента.НаборСвойств Цикл 
		Если КлючЗначение.Ключ = "Вид" Тогда
			Продолжить;
		КонецЕсли;
		
		Если КлючЗначение.Значение.Тип = "БиблиотекаКартинок" Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("В этой версии не поддерживается работа с картинками (%1).", КлючЗначение.Значение.Значение);
			Сообщение.Сообщить();
			Продолжить;
		КонецЕсли;
		
		ИмяСвойства = ПолучитьАнглийскоеИмяСвойства(СхемаЭлемента.Тип, ВидЭлемента, КлючЗначение.Ключ);
		Если ИмяСвойства = Неопределено Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон(
			"Критическая ошибка! Для свойства ""%1"" типа ""%2"" в макете ""Свойства"" не указано название на английском.", 
			КлючЗначение.Ключ, 
			ТипЭлемента + " - " + ВидЭлемента);
			Сообщение.Сообщить();
			ЕстьКритическиеОшибки = Истина;
			Продолжить;
		КонецЕсли;     
		
		ЗначениеСвойства = Новый Структура("ЭтоСистемноеПеречисление,Тип,Значение");
		ЗаполнитьЗначенияСвойств(ЗначениеСвойства, КлючЗначение.Значение); 
		Если ЗначениеСвойства.Тип = "WebЦвета" Тогда
			ЗначениеСвойства.Значение = "web:" + УправлениеСвойствами().ПолучитьВнутреннееИмяЦвета(ЗначениеСвойства.Значение);
		ИначеЕсли КлючЗначение.Значение.ЭтоСистемноеПеречисление Тогда
			Значение = ПолучитьАнглийскоеЗначениеСвойства(СхемаЭлемента.Тип, ВидЭлемента, КлючЗначение.Ключ, ЗначениеСвойства.Значение);
			Если Значение = Неопределено Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = СтрШаблон(
				"Критическая ошибка! Для значения ""%1"" свойства ""%2"" тип ""%3"" в макете ""Свойства"" не указано название на английском.", 
				ЗначениеСвойства.Значение, 
				КлючЗначение.Ключ, 
				ТипЭлемента + " - " + ВидЭлемента);
				Сообщение.Сообщить();
				ЕстьКритическиеОшибки = Истина;
			КонецЕсли;
			ЗначениеСвойства.Значение = Значение;
		КонецЕсли;
		
		Если СхемаЭлемента.Тип = "КнопкаФормы" И КлючЗначение.Ключ = "ИмяКоманды" Тогда
			ЗначениеСвойства.Значение = "Form.Command." + СхемаЭлемента.Имя;
		КонецЕсли;
		
		НаборСвойств.Вставить(ИмяСвойства, ЗначениеСвойства);
	КонецЦикла;
	Возврат НаборСвойств;

КонецФункции

&НаКлиенте
Функция ПолучитьОписаниеОбработки()
	Возврат ВладелецФормы.ПолучитьИдентификаторОбработки();
КонецФункции

&НаКлиенте
Процедура УстановитьКаталогВПараметрыВыполнения(ИмяНовойФормы)
	КаталогВидовОбъектов = ПолучитьАнглийскоеИмяКаталогаXML(ТипОбъекта);
	
	мПараметрыВыполнения.Вставить("ИмяНовойФормы", ИмяНовойФормы);
	
	мПараметрыВыполнения.КаталогForms = КаталогXML + "\" + КаталогВидовОбъектов + "\" + ИмяОбъекта + "\Forms";
	мПараметрыВыполнения.КаталогФормы = мПараметрыВыполнения.КаталогForms + "\" + ИмяНовойФормы;
	мПараметрыВыполнения.КаталогExt = мПараметрыВыполнения.КаталогФормы + "\Ext";

	мПараметрыВыполнения.ИмяФайлаФормы = мПараметрыВыполнения.КаталогForms + "\" + ИмяНовойФормы + ".xml";
	мПараметрыВыполнения.ИмяФайлаForm = мПараметрыВыполнения.КаталогExt + "\" + "Form.xml";
	
	мПараметрыВыполнения.ИмяФайлаОбъекта = КаталогXML + "\" + КаталогВидовОбъектов + "\" + ИмяОбъекта + ".xml";
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДеревоКонфигурации()
	ИмяФайлаConfiguration = КаталогXML + "\Configuration.xml";
	
	ЧтениеXML = Новый ЧтениеXML; 
	ЧтениеXML.ОткрытьФайл(ИмяФайлаConfiguration); 
	
	ПостроительDOM = Новый ПостроительDOM;
	ДокументDOM = ПостроительDOM.Прочитать(ЧтениеXML);
	ЧтениеXML.Закрыть();
	
	
	УзелMetaDataObject = ДокументDOM.ПервыйДочерний;
	
	Для Каждого Аттрибут Из УзелMetaDataObject.Атрибуты Цикл
		
		Если Аттрибут.Имя = "version" Тогда
			мПараметрыВыполнения.ВерсияXML = Аттрибут.Значение;
			Продолжить;
		КонецЕсли;
		
		Если ПустаяСтрока(Аттрибут.Префикс) Тогда
			Продолжить;
		КонецЕсли;   
		
		мПараметрыВыполнения.АттрибутыОбщие.Вставить(Аттрибут.ЛокальноеИмя, Аттрибут.Значение);
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФайлФормы(ПараметрыВыполнения)
	ДокументDOM = Новый ДокументDOM;
	УзелMetaDataObject =  ДобавитьДочернийУзел(ДокументDOM, ДокументDOM, "MetaDataObject");
	УзелMetaDataObject.УстановитьСоответствиеПространстваИмен("", ПараметрыВыполнения.АттрибутMDClasses);
	Для Каждого КлючЗначение Из ПараметрыВыполнения.АттрибутыОбщие Цикл
		УзелMetaDataObject.УстановитьСоответствиеПространстваИмен(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
	УзелMetaDataObject.УстановитьАтрибут("version", ПараметрыВыполнения.ВерсияXML);
	
	УзелForm = ДобавитьДочернийУзел(ДокументDOM, УзелMetaDataObject, "Form");	
	УзелForm.УстановитьАтрибут("uuid", ПараметрыВыполнения.ИдентификаторФормы);
	УзелMetaDataObject.ДобавитьДочерний(УзелForm);
	
	УзелProperties = ДобавитьДочернийУзел(ДокументDOM, УзелForm, "Properties");	
	
	УзелFormType = ДобавитьДочернийУзел(ДокументDOM, УзелProperties, "FormType");
	УзелFormType.ТекстовоеСодержимое = "Managed";
	
	УзелName = ДобавитьДочернийУзел(ДокументDOM, УзелProperties, "Name");
	УзелName.ТекстовоеСодержимое = ПараметрыВыполнения.ИмяНовойФормы;
	
	УзелSynonym = ДобавитьДочернийУзел(ДокументDOM, УзелProperties, "Synonym");	
	ДобавитьУзелСтрока(ДокументDOM, УзелSynonym, "Форма новая");
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ПараметрыВыполнения.ИмяФайлаФормы);
	
	ЗаписьDOM = Новый ЗаписьDOM;
	ЗаписьDOM.Записать(ДокументDOM, ЗаписьXML);
	
	ЗаписьXML.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФайлForm(ПараметрыВыполнения)
	ДокументDOM = Новый ДокументDOM;
	УзелForm =  ДобавитьДочернийУзел(ДокументDOM, ДокументDOM, "Form");
	УзелForm.УстановитьСоответствиеПространстваИмен("", ПараметрыВыполнения.АттрибутForm);
	Для Каждого КлючЗначение Из ПараметрыВыполнения.АттрибутыОбщие Цикл
		УзелForm.УстановитьСоответствиеПространстваИмен(КлючЗначение.Ключ, КлючЗначение.Значение);
	КонецЦикла;
	УзелForm.УстановитьАтрибут("version", ПараметрыВыполнения.ВерсияXML);

	УзелCommands = ДобавитьДочернийУзел(ДокументDOM, УзелForm, "Commands");      
	
	УзелAttributes = ДобавитьДочернийУзел(ДокументDOM, УзелForm, "Attributes");      
	ДобавитьРеквизитыФормы(ПараметрыВыполнения, ДокументDOM, УзелAttributes);
	
	ЭлементДереваФорма = ДеревоЭлементы.ПолучитьЭлементы()[0];
	УзелChildItems = ДобавитьДочернийУзел(ДокументDOM, УзелForm, "ChildItems");      
	СоздатьЭлементыФормыИерархически(ПараметрыВыполнения, ЭлементДереваФорма.ПолучитьЭлементы(), ДокументDOM, УзелChildItems, УзелCommands);

	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ПараметрыВыполнения.ИмяФайлаForm);

	ЗаписьDOM = Новый ЗаписьDOM;
	ЗаписьDOM.Записать(ДокументDOM, ЗаписьXML);
	
	ЗаписьXML.Закрыть();
КонецПроцедуры
 
&НаКлиенте
Процедура ДобавитьФормуВФайлОбъекта(ПараметрыВыполнения)
	ЧтениеXML = Новый ЧтениеXML; 
	ЧтениеXML.ОткрытьФайл(мПараметрыВыполнения.ИмяФайлаОбъекта); 
	
	ПостроительDOM = Новый ПостроительDOM;
	ДокументDOM = ПостроительDOM.Прочитать(ЧтениеXML);
	ЧтениеXML.Закрыть();

	УзелMetaDataObject = ДокументDOM.ПервыйДочерний;
	УзелОбъект = УзелMetaDataObject.ПервыйДочерний;
	
	МассивУзлыChildObjects = УзелОбъект.ПолучитьЭлементыПоИмени("ChildObjects"); 
	УзелChildObjects = МассивУзлыChildObjects[0];
	
	УзелForm = ДобавитьДочернийУзел(ДокументDOM, УзелChildObjects, "Form");
	УзелForm.ТекстовоеСодержимое = ПараметрыВыполнения.ИмяНовойФормы;        
	
	ДобавитьРеквизитыОбъектаВФайлОбъекта(ПараметрыВыполнения, ДокументDOM, УзелChildObjects);
	
	ЗаписьXML = Новый ЗаписьXML;
	ЗаписьXML.ОткрытьФайл(ПараметрыВыполнения.ИмяФайлаОбъекта);
	
	ЗаписьDOM = Новый ЗаписьDOM;
	ЗаписьDOM.Записать(ДокументDOM, ЗаписьXML);
	
	ЗаписьXML.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРеквизитыОбъектаВФайлОбъекта(ПараметрыВыполнения, ДокументDOM, УзелChildObjects)
	СтрокиДерева = ДеревоРеквизиты.ПолучитьЭлементы();
	Для Каждого СтрокаДеревоРеквизиты Из СтрокиДерева Цикл
		Если НЕ СтрокаДеревоРеквизиты.Пометка Тогда
			Продолжить;
		КонецЕсли;
		Если СтрокаДеревоРеквизиты.ЭтоРеквизитФормы Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаДеревоРеквизиты.ЭтоТаблица Тогда
			ДобавитьРеквизитыТабличнойЧастиОбъекта(ПараметрыВыполнения, ДокументDOM, УзелChildObjects, СтрокаДеревоРеквизиты);
			Продолжить;
		КонецЕсли;
		
		ДобавитьРеквизитОбъекта(ПараметрыВыполнения, ДокументDOM, УзелChildObjects, СтрокаДеревоРеквизиты);
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРеквизитОбъекта(ПараметрыВыполнения, ДокументDOM, УзелРодитель, СтрокаДеревоРеквизиты)
	УзелЭлемента = ДобавитьДочернийУзел(ДокументDOM, УзелРодитель, "Attribute");
	УзелЭлемента.УстановитьАтрибут("uuid", XMLСтрока(СтрокаДеревоРеквизиты.УИД));         
	
	УзелProperties = ДобавитьДочернийУзел(ДокументDOM, УзелЭлемента, "Properties");
	
	УзелName = ДобавитьДочернийУзел(ДокументDOM, УзелProperties, "Name");
	УзелName.ТекстовоеСодержимое = СтрокаДеревоРеквизиты.Имя;
	
	ДобавитьОписаниеТипов(ПараметрыВыполнения, ДокументDOM, УзелProperties, СтрокаДеревоРеквизиты.ОписаниеТипов);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРеквизитыТабличнойЧастиОбъекта(ПараметрыВыполнения, ДокументDOM, УзелРодитель, СтрокаДеревоРеквизиты)
	УзелTabularSection = ДобавитьДочернийУзел(ДокументDOM, УзелРодитель, "TabularSection");
	УзелTabularSection.УстановитьАтрибут("uuid", XMLСтрока(СтрокаДеревоРеквизиты.УИД));         
	
	ДобавитьУзелInternalInfoВФайлОбъекта(ПараметрыВыполнения, ДокументDOM, УзелTabularSection, СтрокаДеревоРеквизиты.Имя);
	
	УзелProperties = ДобавитьДочернийУзел(ДокументDOM, УзелTabularSection, "Properties");
	
	УзелName = ДобавитьДочернийУзел(ДокументDOM, УзелProperties, "Name");
	УзелName.ТекстовоеСодержимое = СтрокаДеревоРеквизиты.Имя;

	УзелChildObjects = ДобавитьДочернийУзел(ДокументDOM, УзелTabularSection, "ChildObjects");
	
	Подчинененные = СтрокаДеревоРеквизиты.ПолучитьЭлементы();
	Для Каждого Подчиненный Из Подчинененные Цикл       
		Если НЕ Подчиненный.Пометка Тогда
			Продолжить;
		КонецЕсли;
		Если Подчиненный.ЭтоРеквизитФормы Тогда
			Продолжить;
		КонецЕсли;
		
		ДобавитьРеквизитОбъекта(ПараметрыВыполнения, ДокументDOM, УзелChildObjects, Подчиненный);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьУзелInternalInfoВФайлОбъекта(ПараметрыВыполнения, ДокументDOM, УзелРодитель, ИмяТабличнойЧасти) 
	ТипОбъектаАнгл = ПолучитьАнглийскоеИмяОбъектаМетаданных(ТипОбъекта);
	ИмяTabularSection = СтрШаблон(
		"%1TabularSection.%2.%3",
	    ТипОбъектаАнгл,
		ИмяОбъекта,
		ИмяТабличнойЧасти);

	TabularSectionRow = СтрШаблон(
		"%1TabularSectionRow.%2.%3",
	   	ТипОбъектаАнгл,
		ИмяОбъекта,
		ИмяТабличнойЧасти);
		
	УзелInternalInfo = ДобавитьДочернийУзел(ДокументDOM, УзелРодитель, "InternalInfo");
	
	УзелGeneratedType = ДобавитьДочернийУзел(ДокументDOM, УзелInternalInfo, "xr:GeneratedType");
	УзелGeneratedType.УстановитьАтрибут("name", ИмяTabularSection);
	УзелGeneratedType.УстановитьАтрибут("category", "TabularSection");
	ДобавитьДочернийУзел(ДокументDOM, УзелGeneratedType, "xr:TypeId", XMLСтрока(Новый УникальныйИдентификатор));
	ДобавитьДочернийУзел(ДокументDOM, УзелGeneratedType, "xr:ValueId", XMLСтрока(Новый УникальныйИдентификатор));

	УзелGeneratedType = ДобавитьДочернийУзел(ДокументDOM, УзелInternalInfo, "xr:GeneratedType");
	УзелGeneratedType.УстановитьАтрибут("name", TabularSectionRow);
	УзелGeneratedType.УстановитьАтрибут("category", "TabularSectionRow");
	ДобавитьДочернийУзел(ДокументDOM, УзелGeneratedType, "xr:TypeId", XMLСтрока(Новый УникальныйИдентификатор));
	ДобавитьДочернийУзел(ДокументDOM, УзелGeneratedType, "xr:ValueId", XMLСтрока(Новый УникальныйИдентификатор));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЭлементыФормыИерархически(ПараметрыВыполнения, ЭлементыДерева, ДокументDOM, УзелXML, УзелCommands)
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл 
		УзелЭлемента = ДобавитьДочернийУзел(
			ДокументDOM, 
			УзелXML, 
			ЭлементДерева.ТипАнгл);
			
		Если ЭлементДерева.Тип = "КнопкаФормы" Тогда
			УзелCommand = ДобавитьДочернийУзел(ДокументDOM, УзелCommands, "Command");      
			УзелCommand.УстановитьАтрибут("name", ЭлементДерева.Имя);         
			УзелCommand.УстановитьАтрибут("id", XMLСтрока(мПараметрыВыполнения.Идентификатор));         
			мПараметрыВыполнения.Идентификатор = мПараметрыВыполнения.Идентификатор + 1;
		КонецЕсли;
			
		УзелЭлемента.УстановитьАтрибут("name", ЭлементДерева.Имя);         
		УзелЭлемента.УстановитьАтрибут("id", XMLСтрока(мПараметрыВыполнения.Идентификатор));         
		
		мПараметрыВыполнения.Идентификатор = мПараметрыВыполнения.Идентификатор + 1;
		
		Для Каждого КлючЗначение Из ЭлементДерева.НаборСвойств Цикл
			ИмяСвойства = КлючЗначение.Ключ;
			
			УзелСвойств = ДобавитьДочернийУзел(ДокументDOM, УзелЭлемента, ИмяСвойства);      
			
			Если КлючЗначение.Ключ = "Title" Тогда
				ДобавитьУзелСтрока(ДокументDOM, УзелСвойств, КлючЗначение.Значение.Значение);
				Продолжить;
			КонецЕсли;
			
			Если КлючЗначение.Ключ = "DataPath" Тогда
				ТекПутьКДанным = КлючЗначение.Значение;
				ТекПутьКДанным = ПолучитьПутьКДанным(ПараметрыВыполнения, КлючЗначение.Значение.Значение);
				УзелСвойств.ТекстовоеСодержимое = ТекПутьКДанным;
				Продолжить;
			КонецЕсли;
			
			ЗначениеСвойства = ПолучитьЗначение(КлючЗначение.Значение);
			УзелСвойств.ТекстовоеСодержимое = ЗначениеСвойства;
		КонецЦикла; 
		
		Подчиненные = ЭлементДерева.ПолучитьЭлементы();
		Если Подчиненные.Количество() > 0 Тогда
			УзелChildItems = ДобавитьДочернийУзел(ДокументDOM, УзелЭлемента, "ChildItems");      
			СоздатьЭлементыФормыИерархически(ПараметрыВыполнения, Подчиненные, ДокументDOM, УзелChildItems, УзелCommands);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРеквизитыФормы(ПараметрыВыполнения, ДокументDOM, УзелXML)
	ЕстьРеквизитыОбъекта = Ложь;

	ДополнительныеКолонки = Новый Массив;
	
	СтрокиРеквизиты = ДеревоРеквизиты.ПолучитьЭлементы();
	Для Каждого СтрокаДеревоРеквизиты Из СтрокиРеквизиты Цикл
		Если НЕ СтрокаДеревоРеквизиты.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ СтрокаДеревоРеквизиты.ЭтоРеквизитФормы Тогда
			ЕстьРеквизитыОбъекта = Истина;
			Продолжить;
		КонецЕсли;
		
		УзелЭлемента = ДобавитьДочернийУзел(ДокументDOM, УзелXML, "Attribute");
		УзелЭлемента.УстановитьАтрибут("id", XMLСтрока(мПараметрыВыполнения.Идентификатор));         
		УзелЭлемента.УстановитьАтрибут("name", СтрокаДеревоРеквизиты.Имя);         

		Если СтрокаДеревоРеквизиты.ЭтоТаблица Тогда
			УзелType = ДобавитьДочернийУзел(ДокументDOM, УзелЭлемента, "Type");
			
			ТипТаблицы = "v8:ValueTable";
			Если СтрокаДеревоРеквизиты.ЭтоДерево Тогда
				ТипТаблицы = "v8:ValueTree";
			КонецЕсли;
			
			ДобавитьДочернийУзел(ДокументDOM, УзелType, "v8:Type", ТипТаблицы);
		Иначе
			ДобавитьОписаниеТипов(ПараметрыВыполнения, ДокументDOM, УзелЭлемента, СтрокаДеревоРеквизиты.ОписаниеТипов);
		КонецЕсли;
		
		
		мПараметрыВыполнения.Идентификатор = мПараметрыВыполнения.Идентификатор + 1;  
		
		Если СтрокаДеревоРеквизиты.ЭтоТаблица Тогда
			ДобавитьРеквизитыФормыКолонки(ДокументDOM, СтрокаДеревоРеквизиты, УзелЭлемента);
		КонецЕсли;
	КонецЦикла;                           

	Если НЕ ЕстьРеквизитыОбъекта Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьРеквизитФормыОбъект(ДокументDOM, УзелXML);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРеквизитФормыОбъект(ДокументDOM, УзелXML)
	УзелAttribute = ДобавитьДочернийУзел(ДокументDOM, УзелXML, "Attribute");
	УзелAttribute.УстановитьАтрибут("id", XMLСтрока(мПараметрыВыполнения.Идентификатор));         
	УзелAttribute.УстановитьАтрибут("name", "Объект");         
	
	УзелType = ДобавитьДочернийУзел(ДокументDOM, УзелAttribute, "Type");   
	
	ПредставлениеТипаОбъекта = СтрШаблон("cfg:%1Object.%2", ПолучитьАнглийскоеИмяОбъектаМетаданных(ТипОбъекта), ИмяОбъекта);
	
	УзелЭлементType = ДобавитьДочернийУзел(ДокументDOM, УзелType, "v8:Type", ПредставлениеТипаОбъекта);
	
	ДобавитьДочернийУзел(ДокументDOM, УзелAttribute, "MainAttribute", Истина);
	ДобавитьДочернийУзел(ДокументDOM, УзелAttribute, "SavedData", Истина);
	
	УзелColumns = ДобавитьДочернийУзел(ДокументDOM, УзелAttribute, "Columns");
	
	мПараметрыВыполнения.Идентификатор = мПараметрыВыполнения.Идентификатор + 1;
	
	СтрокиРеквизиты = ДеревоРеквизиты.ПолучитьЭлементы();
	Для Каждого СтрокаДеревоРеквизиты Из СтрокиРеквизиты Цикл
		Если НЕ СтрокаДеревоРеквизиты.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Если СтрокаДеревоРеквизиты.ЭтоРеквизитФормы Тогда
			Продолжить;
		КонецЕсли;

		Если НЕ СтрокаДеревоРеквизиты.ЭтоТаблица Тогда
			Продолжить;
		КонецЕсли;
		
		ДобавитьРеквизитыФормыДополнительныеКолонки(ДокументDOM, СтрокаДеревоРеквизиты, УзелColumns);
	КонецЦикла;  	
КонецПроцедуры   

&НаКлиенте
Процедура ДобавитьРеквизитыФормыДополнительныеКолонки(ДокументDOM, СтрокаТаблица, УзелColumns)
	СтрокиКолонки = СтрокаТаблица.ПолучитьЭлементы();
	Если СтрокиКолонки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаКолонка Из СтрокиКолонки Цикл
		Если НЕ СтрокаКолонка.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ СтрокаКолонка.ЭтоРеквизитФормы Тогда
			Продолжить;
		КонецЕсли;
		
		УзелAdditionalColumns = ДобавитьДочернийУзел(ДокументDOM, УзелColumns, "AdditionalColumns");
		УзелAdditionalColumns.УстановитьАтрибут("table", ПолучитьПутьКДанным(мПараметрыВыполнения, СтрокаТаблица.Имя));         
		
		УзелЭлемента = ДобавитьДочернийУзел(ДокументDOM, УзелAdditionalColumns, "Column");
		УзелЭлемента.УстановитьАтрибут("id", XMLСтрока(мПараметрыВыполнения.Идентификатор));         
		УзелЭлемента.УстановитьАтрибут("name", СтрокаКолонка.Имя);         
		
		ДобавитьОписаниеТипов(мПараметрыВыполнения, ДокументDOM, УзелЭлемента, СтрокаКолонка.ОписаниеТипов);
		
		мПараметрыВыполнения.Идентификатор = мПараметрыВыполнения.Идентификатор + 1;  
	КонецЦикла;                           	
КонецПроцедуры


&НаКлиенте
Процедура ДобавитьРеквизитыФормыКолонки(ДокументDOM, СтрокаТаблица, УзелРодитель)
	СтрокиРеквизиты = СтрокаТаблица.ПолучитьЭлементы();
	Если СтрокиРеквизиты.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	УзелColumns = ДобавитьДочернийУзел(ДокументDOM, УзелРодитель, "Columns");
	
	Для Каждого СтрокаДеревоРеквизиты Из СтрокиРеквизиты Цикл
		Если НЕ СтрокаДеревоРеквизиты.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ СтрокаДеревоРеквизиты.ЭтоРеквизитФормы Тогда
			//ЕстьРеквизитыОбъекта = Истина;
			Продолжить;
		КонецЕсли;
		
		УзелЭлемента = ДобавитьДочернийУзел(ДокументDOM, УзелColumns, "Column");
		УзелЭлемента.УстановитьАтрибут("id", XMLСтрока(мПараметрыВыполнения.Идентификатор));         
		УзелЭлемента.УстановитьАтрибут("name", СтрокаДеревоРеквизиты.Имя);         
		
		ДобавитьОписаниеТипов(мПараметрыВыполнения, ДокументDOM, УзелЭлемента, СтрокаДеревоРеквизиты.ОписаниеТипов);
		
		мПараметрыВыполнения.Идентификатор = мПараметрыВыполнения.Идентификатор + 1;  
	КонецЦикла;                           	
КонецПроцедуры


&НаКлиенте
Функция ПолучитьПутьКДанным(ПараметрыВыполенния, ИмяРеквизита)
	МассивЧастей = СтрРазделить(ИмяРеквизита, ".");
	
	ТекЭлементДерева = Неопределено;
	ЭлементыДерева = ДеревоРеквизиты.ПолучитьЭлементы();
	Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
		Если ЭлементДерева.ТекИмя = МассивЧастей[0] Тогда
			ТекЭлементДерева = ЭлементДерева;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Результат = "";
	Если НЕ ТекЭлементДерева.ЭтоРеквизитФормы Тогда
		Результат = "Объект.";
	КонецЕсли;  
	Результат = Результат + ТекЭлементДерева.Имя;
	
	Если МассивЧастей.Количество() > 1 Тогда    
		ЭлементыДерева = ТекЭлементДерева.ПолучитьЭлементы();
		ТекЭлементДерева = Неопределено;
		Для Каждого ЭлементДерева Из ЭлементыДерева Цикл
			Если ЭлементДерева.ТекИмя = МассивЧастей[1] Тогда
				ТекЭлементДерева = ЭлементДерева;
				Прервать;
			КонецЕсли;
		КонецЦикла;  
		Результат = Результат +"."+ ТекЭлементДерева.Имя;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ДобавитьОписаниеТипов(ПараметрыВыполнения, ДокументDOM, УзелРодитель, ОписаниеТипов)   
	ЗаписьУзловDOM = Новый ЗаписьУзловDOM;        
	ЗаписьУзловDOM.Открыть(ДокументDOM); 

	ЗаписьУзловDOM.ЗаписатьНачалоЭлемента("Type");
	ЗаписьУзловDOM.ЗаписатьСоответствиеПространстваИмен("v8", "http://v8.1c.ru/8.1/data/core");
	ЗаписьУзловDOM.ЗаписатьСоответствиеПространстваИмен("cfg", "http://v8.1c.ru/8.1/data/enterprise/current-config");
	
	СериализаторXDTO.ЗаписатьXML(
		ЗаписьУзловDOM, 
		ОписаниеТипов, , ФормаXML.Текст);   

	ЗаписьУзловDOM.ЗаписатьКонецЭлемента();	
		
	УзелТип = ЗаписьУзловDOM.УзелDOM.ПоследнийДочерний;
	УзелРодитель.ДобавитьДочерний(УзелТип);
	
	ЗаписьУзловDOM.Закрыть();
КонецПроцедуры   

&НаКлиенте
Функция ПолучитьПредставлениеТипа(ТекТип)
	СтрТипы = Новый Структура;
	СтрТипы.Вставить("Строка", "xs:string"); 
	СтрТипы.Вставить("Булево", "xs:boolean"); 
	СтрТипы.Вставить("Число", "xs:decimal"); 
	СтрТипы.Вставить("Дата", "xs:dateTime"); 
	
	Если СтрТипы.Свойство(ТекТип) Тогда
		Возврат СтрТипы[ТекТип];
	КонецЕсли;
	
	Возврат ТекТип;
КонецФункции

&НаКлиенте
Функция ДобавитьДочернийУзел(ДокументDOM, Родитель, ИмяЭлемента, ТекстовоеСодержимое = Неопределено)
	Узел = ДокументDOM.СоздатьЭлемент(ИмяЭлемента);
	
	Если ТекстовоеСодержимое <> Неопределено Тогда
		Узел.ТекстовоеСодержимое = XMLСтрока(ТекстовоеСодержимое);
	КонецЕсли;
	
	Родитель.ДобавитьДочерний(Узел);
	
	Возврат Узел;
КонецФункции

&НаКлиенте
Процедура ДобавитьУзелСтрока(ДокументDOM, Родитель, Текст)
	Узел = ДобавитьДочернийУзел(ДокументDOM, Родитель, "v8:item");

	УзелLang = ДобавитьДочернийУзел(ДокументDOM, Узел, "v8:lang");
	УзелLang.ТекстовоеСодержимое = "ru";

	УзелContent = ДобавитьДочернийУзел(ДокументDOM, Узел, "v8:content");
	УзелContent.ТекстовоеСодержимое = XMLСтрока(Текст);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЗначение(СтрЗначение)    
	Если СтрЗначение.ЭтоСистемноеПеречисление Тогда
		Возврат СтрЗначение.Значение;
	КонецЕсли;
	
	Возврат XMLСтрока(СтрЗначение.Значение);	
КонецФункции

&НаКлиенте
Функция ПолучитьАнглийскоеИмяТипаЭлемента(ТипЭлемента)
	Возврат УправлениеСвойствами().ПолучитьАнглийскоеИмяТипаЭлемента(ТипЭлемента);
КонецФункции

&НаКлиенте
Функция ПолучитьАнглийскоеИмяСвойства(ТипЭлемента, ВидЭлемента, ИмяСвойства)
	Возврат УправлениеСвойствами().ПолучитьАнглийскоеИмяСвойства(ТипЭлемента, ВидЭлемента, ИмяСвойства);
КонецФункции

&НаКлиенте
Функция ПолучитьАнглийскоеЗначениеСвойства(ТипЭлемента, ВидЭлемента, ИмяСвойства, ЗначениеСвойства)
	Возврат УправлениеСвойствами().ПолучитьАнглийскоеЗначениеСвойства(ТипЭлемента, ВидЭлемента, ИмяСвойства, ЗначениеСвойства);
КонецФункции

&НаКлиенте
Функция ПолучитьАнглийскоеИмяОбъектаМетаданных(ИмяОбъекта)
	Соответствие = Новый Структура;
	Соответствие.Вставить("Справочник", "Catalog");
	Соответствие.Вставить("Документ", "Document");
	
	Возврат Соответствие[ИмяОбъекта];
КонецФункции

&НаКлиенте
Функция ПолучитьАнглийскоеИмяКаталогаXML(ИмяОбъекта)
	Соответствие = Новый Структура;
	Соответствие.Вставить("Справочник", "Catalogs");
	Соответствие.Вставить("Документ", "Documents");
	
	Возврат Соответствие[ИмяОбъекта];
КонецФункции

&НаКлиенте
Процедура ОбновитьПредставлениеОбъекта()
	ПредставлениеОбъекта = СтрШаблон(
		"%1.%2",
		ТипОбъекта,
		ИмяОбъекта);
КонецПроцедуры
//&НаКлиенте
//Функция ФайлСуществует(ИмяФайла)
//	ФайлНаДиске = Новый Файл(ИмяФайла);
//    Возврат ФайлНаДиске.Существует();
//КонецФункции

#КонецОбласти     

// 1. Создаем каталог *ИмяОбъект*\Forms если нет
// 2. Создаем каталог *ИмяОбъект*\Forms\*ИмяФормы*
// 3. Создаем файл *ИмяОбъект*\Forms\*ИмяФормы*.xml с именем формы
// 4. Создаем файл *ИмяОбъект*\Forms\*ИмяФормы*\Form.xml c элементами
// 5. Добавляем в файл *ИмяОбъект*.xml форму
// 6. Добавляем форму в  ConfigDumpInfo.xml
