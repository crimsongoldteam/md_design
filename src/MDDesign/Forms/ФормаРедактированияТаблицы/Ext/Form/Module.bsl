#Область ОписаниеПеременных

Перем Парсер;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОписаниеТаблицы = Параметры.ОписаниеТаблицы;    
	Если ОписаниеТаблицы <> Неопределено Тогда
		ПостроитьКолонкиПоОписаниюТаблицы(ОписаниеТаблицы, ТаблицаКолонки.ПолучитьЭлементы());	
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	Если ТаблицаКолонки.ПолучитьЭлементы().Количество() = 0 Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "В таблице отсутствуют колонки.";
		Сообщение.Сообщить();             
		
		Возврат;
	КонецЕсли;
	
	Если НЕ ПроверитьГруппыКолонокБезКолонок(ТаблицаКолонки.ПолучитьЭлементы()) Тогда
		Возврат;
	КонецЕсли;
	
	Результат = ПолучитьНовоеОписаниеТаблицы(Параметры.ОписаниеТаблицы);
	Закрыть(Результат);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьКолонку(Команда)
	ДобавитьСтрокуВТаблицу(ПолучитьСтрокуРодитель());
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПодколонку(Команда)
	ТекущиеДанные = Элементы.ТаблицаКолонки.ТекущиеДанные;	
	
	ТекущийРодитель = ТаблицаКолонки;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущийРодитель = ТекущиеДанные;
	КонецЕсли;
	
	ДобавитьСтрокуВТаблицу(ТекущийРодитель);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаКолонки

&НаКлиенте
Процедура КолонкиПриНачалеРедактирования(Элемент, НоваяСтрока)
	Если НоваяСтрока Тогда
		ТекущиеДанные = Элемент.ТекущиеДанные;	
		ТекущиеДанные.УИД = Новый УникальныйИдентификатор;
		ТекущиеДанные.ГоризонтальноеПоложение = "Лево";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаКолонкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	
	ДобавитьСтрокуВТаблицу(ПолучитьСтрокуРодитель(), Копирование);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПроверитьГруппыКолонокБезКолонок(ТаблицаКолонкиЭлементы)
	Результат = Истина;
	Для Каждого СтрокаКолонка Из ТаблицаКолонкиЭлементы Цикл
		
		ПодЭлементы = СтрокаКолонка.ПолучитьЭлементы();
		Если ПодЭлементы.Количество() = 0
			И СтрокаКолонка.ЭтоГруппа Тогда

			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("У группы колонок ""%1"" отсутствуют подколонки", СтрокаКолонка.Заголовок);
			Сообщение.Сообщить();             
			
			Результат = Ложь;
			Продолжить;
		КонецЕсли;
		
		Если НЕ ПроверитьГруппыКолонокБезКолонок(ПодЭлементы) Тогда
			Результат = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция Парсер()
	Возврат ВладелецФормы.Парсер();
КонецФункции

&НаКлиенте
Функция ПолучитьСтрокуРодитель()     
	ТекущиеДанные = Элементы.ТаблицаКолонки.ТекущиеДанные;	
	
	ТекущийРодитель = Неопределено;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущийРодитель = ТекущиеДанные.ПолучитьРодителя();
	КонецЕсли;
	
	Если ТекущийРодитель = Неопределено Тогда
		ТекущийРодитель = ТаблицаКолонки;
	КонецЕсли;

	Возврат ТекущийРодитель;
КонецФункции

&НаКлиенте
Процедура ДобавитьСтрокуВТаблицу(ТекущийРодитель, Копирование = Ложь)
	
	НоваяСтрока = ТекущийРодитель.ПолучитьЭлементы().Добавить();  
	
	Если Копирование Тогда
		ТекущиеДанные = Элементы.ТаблицаКолонки.ТекущиеДанные;	
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекущиеДанные,, "УИД");
	Иначе
		НоваяСтрока.ГоризонтальноеПоложение = "Лево";
	КонецЕсли;
	
	НоваяСтрока.УИД = Новый УникальныйИдентификатор;
	
	Элементы.ТаблицаКолонки.ТекущаяСтрока = НоваяСтрока.ПолучитьИдентификатор();
	Элементы.ТаблицаКолонки.ИзменитьСтроку();

КонецПроцедуры

&НаКлиенте
Процедура ПостроитьКолонкиПоОписаниюТаблицы(ОписаниеЭлемента, ТаблицаКолонкиЭлементы)
	Для Каждого ОписаниеКолонки Из ОписаниеЭлемента.Колонки Цикл
		СтрокаТаблицы = ТаблицаКолонкиЭлементы.Добавить();
		СтрокаТаблицы.УИД = ОписаниеКолонки.УИД;
		СтрокаТаблицы.Заголовок = ОписаниеКолонки.НаборСвойств.Заголовок;
		Если ОписаниеКолонки.НаборСвойств.Свойство("ГоризонтальноеПоложение") Тогда
			СтрокаТаблицы.ГоризонтальноеПоложение = ОписаниеКолонки.НаборСвойств.ГоризонтальноеПоложение;
		Иначе
			СтрокаТаблицы.ГоризонтальноеПоложение = "Лево";
		КонецЕсли;
		СтрокаТаблицы.ЭтоГруппа = (ОписаниеКолонки.Тип = "ГруппаКолонокТаблицы");
		
		ПостроитьКолонкиПоОписаниюТаблицы(ОписаниеКолонки, СтрокаТаблицы.ПолучитьЭлементы());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьНовоеОписаниеТаблицы(ТекущееОписание)
	СоответствиеКолонок = Новый Соответствие;
	
	Если ТекущееОписание = Неопределено Тогда
		Результат = Парсер().ПолучитьОписаниеТаблицы(Неопределено);
	Иначе
		Результат = Новый Структура;
		Для Каждого КлючЗначение Из ТекущееОписание Цикл
			Если КлючЗначение.Ключ = "Колонки" Тогда
				Продолжить;
			КонецЕсли;
			
			Результат.Вставить(КлючЗначение.Ключ, КлючЗначение.Значение);
		КонецЦикла;
		
		Результат.Вставить("Колонки", Новый Массив);
		
		ЗаполнитьСоответствиеТекущихКолонок(СоответствиеКолонок, ТекущееОписание);
	КонецЕсли;
	
	ЗаполнитьКолонкиВРезультате(Результат, СоответствиеКолонок, ТаблицаКолонки.ПолучитьЭлементы());
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ЗаполнитьСоответствиеТекущихКолонок(СоответствиеКолонок, ОписаниеЭлемента)
	Для Каждого Колонка Из ОписаниеЭлемента.Колонки Цикл
		СоответствиеКолонок.Вставить(Колонка.УИД, Колонка);
		ЗаполнитьСоответствиеТекущихКолонок(СоответствиеКолонок, Колонка)
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКолонкиВРезультате(ОписаниеЭлемента, СоответствиеКолонок, ТаблицаКолонкиЭлементы)
	Для Каждого СтрокаКолонка Из ТаблицаКолонкиЭлементы Цикл
		ТекущаяКолонка = СоответствиеКолонок.Получить(СтрокаКолонка.УИД);
		
		Если ТекущаяКолонка = Неопределено Тогда
			ТекущаяКолонка = Парсер().ПолучитьОписаниеКолонкиТаблицы(Неопределено);
		КонецЕсли;
		ТекущаяКолонка.Колонки.Очистить();
		ТекущаяКолонка.НаборСвойств.Заголовок = СтрокаКолонка.Заголовок;    
		
		ТекущаяКолонка.НаборСвойств.Удалить("ГоризонтальноеПоложение");
		Если СтрокаКолонка.ГоризонтальноеПоложение <> "Лево" Тогда
			ТекущаяКолонка.НаборСвойств.Вставить("ГоризонтальноеПоложение", СтрокаКолонка.ГоризонтальноеПоложение);
		КонецЕсли;
		
		ТекущаяКолонка.Тип = ?(СтрокаКолонка.ЭтоГруппа,"ГруппаКолонокТаблицы", "КолонкаТаблицы"); 
		ОписаниеЭлемента.Колонки.Добавить(ТекущаяКолонка);    
		
		ЗаполнитьКолонкиВРезультате(ТекущаяКолонка, СоответствиеКолонок, СтрокаКолонка.ПолучитьЭлементы());
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
