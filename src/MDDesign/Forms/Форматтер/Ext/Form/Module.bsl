#Область ОписаниеПеременных

&НаКлиенте
Перем Парсер;

&НаКлиенте
Перем Синтаксис;

&НаКлиенте
Перем ОпределительРеквизитов;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаКлиенте
Функция Форматировать(ФормаГруппы) Экспорт
	ПараметрыВыполнения = НовыеПараметрыФорматирования(Истина, 0);
	ВыполнитьФорматирование(ПараметрыВыполнения, ФормаГруппы);
	
	ФормаГруппы.Формат.Результат.Очистить();
	
	ПараметрыВыполнения = НовыеПараметрыФорматирования(Ложь, 0);
	ВыполнитьФорматирование(ПараметрыВыполнения, ФормаГруппы);
	
	Результат = Новый Массив;
	Для Каждого Строка Из ФормаГруппы.Формат.Результат Цикл
		Результат.Добавить(СокрП(Строка)); 	
	КонецЦикла;
	
	Возврат СтрСоединить(Результат, Символы.ПС);
КонецФункции

#КонецОбласти    

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция Лексема(ИмяПараметра)
	Возврат ВладелецФормы.Лексема(ИмяПараметра);
КонецФункции

&НаКлиенте
Функция НовыеПараметрыФорматирования(РасчетДлины, Длина)
	Результат = Новый Структура();
	Результат.Вставить("РасчетДлины", РасчетДлины);
	Результат.Вставить("Длина", ?(РасчетДлины, 0, Длина));
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ВыполнитьФорматирование(ПараметрыВыполнения, ЭлементРодитель)    
	
	Подчиненные = ЭлементРодитель.Элементы;
	
	Для Каждого ЭлементДанных Из Подчиненные Цикл 
		
		Выполнена = Ложь;
		ФорматироватьВертикальнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Выполнена);
		Если Выполнена Тогда
			Продолжить;
		КонецЕсли;
		
		ФорматироватьСтрочныйЭлемент(ПараметрыВыполнения, ЭлементРодитель, ЭлементДанных);
		ФорматированиеДобавитьРезультат(ЭлементРодитель, ЭлементДанных.Формат.Результат);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьСтрочныйЭлемент(ПараметрыВыполнения, ЭлементРодитель, ЭлементДанных)
	ЭлементДанных.Формат.Результат.Очистить();
	Выполнена = Ложь;
	
	ФорматироватьГоризонтальнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ФорматироватьОднострочнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;
	
	ФорматироватьТаблицу(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ФорматироватьПолеВвода(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ФорматироватьФлажок(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ФорматироватьНадпись(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;
	
	ФорматироватьСтраницы(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;

	ФорматироватьКоманднуюПанель(ПараметрыВыполнения, ЭлементДанных, Выполнена);
	Если Выполнена Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьВертикальнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "ВертикальнаяГруппа" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;
	
	ВыполнитьФорматирование(ПараметрыВыполнения, ЭлементДанных);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьГоризонтальнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "ГоризонтальнаяГруппа" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;

	НаборСтрок = Новый Массив;
	Для Каждого ВертикальнаяГруппа Из ЭлементДанных.Элементы Цикл
		ВертикальнаяГруппа.Формат.Результат.Очистить();
		
		СтрокаЗаголовок = Лексема("РазделительГруппаДобавить");
		Если ВертикальнаяГруппа.НаборСвойств.ОтображатьЗаголовок Тогда
			СтрокаЗаголовок = СтрокаЗаголовок + СокрЛП(ВертикальнаяГруппа.НаборСвойств.Заголовок);			
		КонецЕсли; 
		СтрокаЗаголовок = ВыровнитьСтроку(СтрокаЗаголовок, "Лево", ВертикальнаяГруппа.Формат.Длина);
		ВертикальнаяГруппа.Формат.Результат.Добавить(СтрокаЗаголовок);
		
		ПараметрыВыполненияРасчет = НовыеПараметрыФорматирования(ПараметрыВыполнения.РасчетДлины, ВертикальнаяГруппа.Формат.Длина);
		ВыполнитьФорматирование(ПараметрыВыполненияРасчет, ВертикальнаяГруппа);
		
		НаборСтрок.Добавить(ВертикальнаяГруппа.Формат.Результат);
	КонецЦикла;
	
	Результат = СоединитьСтрокиГоризонтально(НаборСтрок, "   " +  Лексема("РазделительГруппа") + "   ", "   ");
	ФорматированиеДобавитьРезультат(ЭлементДанных, Результат);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьОднострочнуюГруппу(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "ОднострочнаяГруппа" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;

	НаборСтрок = Новый Массив;
	Для Каждого ЭлементГруппы Из ЭлементДанных.Элементы Цикл
		ЭлементГруппы.Формат.Результат.Очистить();
		
		ПараметрыВыполненияРасчет = НовыеПараметрыФорматирования(ПараметрыВыполнения.РасчетДлины, ЭлементГруппы.Формат.Длина);
		
		ФорматироватьСтрочныйЭлемент(ПараметрыВыполненияРасчет, ЭлементДанных, ЭлементГруппы);
		
		НаборСтрок.Добавить(ЭлементГруппы.Формат.Результат);
	КонецЦикла;
	
	Результат = СоединитьСтрокиГоризонтально(НаборСтрок, " & ");
	ФорматированиеДобавитьРезультат(ЭлементДанных, Результат);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьСтраницы(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "Страницы" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;
	
	ИсключаемыеСвойства = СтрРазделить(
		"Заголовок", Символы.ПС);
	
	Для Каждого Страница Из ЭлементДанных.Элементы Цикл
		Страница.Формат.Результат.Очистить();
		
		ФорматированиеДобавитьРезультат(ЭлементДанных, "");
		Результат = "/" + Страница.НаборСвойств.Заголовок;
		Результат = Результат + ФорматироватьНаборСвойств(Страница.НаборСвойств, ИсключаемыеСвойства);
		ФорматированиеДобавитьРезультат(ЭлементДанных, Результат);
		ФорматированиеДобавитьРезультат(ЭлементДанных, "");
		
		ПараметрыВыполненияРасчет = НовыеПараметрыФорматирования(ПараметрыВыполнения.РасчетДлины, Страница.Формат.Длина);
		ВыполнитьФорматирование(ПараметрыВыполненияРасчет, Страница);
		
		Результат = Новый Массив;
		Для Каждого Строка Из Страница.Формат.Результат Цикл
			Результат.Добавить("	" + Строка);
		КонецЦикла;
		
		ФорматированиеДобавитьРезультат(ЭлементДанных, Результат);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьТаблицу(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "Таблица" 
		И НЕ ЭлементДанных.Тип = "Дерево" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;
	
	ЭлементДанных.Формат.Результат.Очистить();  
	
	
	ПустаяСтрока = ФорматироватьГоризонтальноеПоложение(
		"", 
		"Лево", 
		ПараметрыВыполнения.Длина);

	ФорматированиеДобавитьРезультат(ЭлементДанных, ПустаяСтрока);
	
	ИсключаемыеСвойства = Новый Массив;
	Результат = ФорматироватьНаборСвойств(ЭлементДанных.НаборСвойств, ИсключаемыеСвойства);
	
	Если НЕ ПустаяСтрока(Результат) Тогда
		ФорматированиеДобавитьРезультат(ЭлементДанных, Результат);
	КонецЕсли;

	НаборКолонок = Новый Массив;
	
	Для СчКолонок = 0 По ЭлементДанных.Колонки.ВГраница() Цикл
		Колонка = ЭлементДанных.Колонки[СчКолонок]; 
		Колонка.Формат.Результат.Очистить();
		
		ПараметрыВыполненияКолонка = НовыеПараметрыФорматирования(ПараметрыВыполнения.РасчетДлины, ПараметрыВыполнения.Длина);
		ФорматироватьКолонку(ПараметрыВыполненияКолонка, Колонка);
		ФорматироватьРазделитель(ПараметрыВыполненияКолонка, Колонка);
		
		ФорматироватьСтрокиТаблицы(
			ПараметрыВыполненияКолонка, 
			Колонка, 
			СчКолонок, 
			ЭлементДанных.Строки, 
			0);

		НаборКолонок.Добавить(Колонка.Формат.Результат);
	КонецЦикла;      
	Результат = СоединитьСтрокиГоризонтально(НаборКолонок, "|", , Истина);
	
	ФорматированиеДобавитьРезультат(ЭлементДанных, Результат); 
	
	ФорматированиеДобавитьРезультат(ЭлементДанных, ПустаяСтрока);

КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьСтрокиТаблицы(ПараметрыВыполненияКолонка, Колонка, НомерКолонки, Строки, Уровень)
	Для Каждого Строка Из Строки Цикл  
		ТекУровень = ?(НомерКолонки = 0, Уровень, 0);
		ФорматироватьЯчейку(ПараметрыВыполненияКолонка, Колонка, Строка.Ячейки[НомерКолонки], ТекУровень);
		
		ФорматироватьСтрокиТаблицы(ПараметрыВыполненияКолонка, Колонка, НомерКолонки, Строка.Строки, Уровень + 1);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьКолонку(ПараметрыВыполнения, Колонка) 
	Строка = " "+ Колонка.НаборСвойств.Заголовок + " ";
	Строка = ВыровнитьСтроку(Строка, Колонка.НаборСвойств.ГоризонтальноеПоложение, Колонка.Формат.Длина);
	
	ФорматированиеУстановитьРезультат(Колонка, Строка);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьРазделитель(ПараметрыВыполнения, Колонка)
	МинимальнаяДлина = 5;
	Длина = Макс(Колонка.Формат.Длина, МинимальнаяДлина);
	
	СимволСлева = " ";
	СимволСправа = " ";
	
	Если Колонка.НаборСвойств.ГоризонтальноеПоложение = "Право" Тогда
		СимволСправа = ": ";
	КонецЕсли;
	
	Если Колонка.НаборСвойств.ГоризонтальноеПоложение = "Центр" Тогда
		СимволСлева = " :";
		СимволСправа = ": ";
	КонецЕсли;
	
	Строка = СимволСлева 
		+ СтрПовторитьСимвол("-", Длина - СтрДлина(СимволСлева) - СтрДлина(СимволСправа))
		+ СимволСправа;
		
	ФорматированиеДобавитьРезультат(Колонка, Строка);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьЯчейку(ПараметрыВыполнения, Колонка, Ячейка, Уровень)      
	Строка = Ячейка.Значение;
	
	Строка = ПолучитьСтрокуФлажок(
		Строка, 
		Ячейка.ЕстьФлажок, 
		Ячейка.ЗначениеФлажка, 
		"Право");

	Если Уровень > 0 Тогда
		Строка = СтрПовторитьСимвол(".", Уровень) + " " + Строка;
	КонецЕсли;
		
	Строка = " "+ Строка + " ";
	Строка = ВыровнитьСтроку(Строка, Колонка.НаборСвойств.ГоризонтальноеПоложение, Колонка.Формат.Длина);
	
	ФорматированиеДобавитьРезультат(Колонка, Строка);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьПолеВвода(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "ПолеВвода" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;
	
	ИсключаемыеСвойства = СтрРазделить(
		"КнопкаВыпадающегоСписка
		|КнопкаВыбора
		|КнопкаОчистки
		|КнопкаРегулирования
		|КнопкаОткрытия
		|МногострочныйРежим
		|ГоризонтальноеПоложение
		|Высота
		|Заголовок
		|ПоложениеЗаголовка", Символы.ПС);
	
	ЗаголовокЭлемента = ЭлементДанных.НаборСвойств.Заголовок + ": ";
	Результат = ЗаголовокЭлемента + ЭлементДанных.Значение;

	ДлинаЗначения = СтрДлина(ЭлементДанных.Значение);
	ДлинаЗаголовка = СтрДлина(ЗаголовокЭлемента);
		
	СвойстваПоляВвода = "";   
	ФорматироватьДобавитьСвойство(СвойстваПоляВвода, ЭлементДанных.НаборСвойств, "КнопкаВыбора", "В");
	ФорматироватьДобавитьСвойство(СвойстваПоляВвода, ЭлементДанных.НаборСвойств, "КнопкаВыпадающегоСписка", "С");
	ФорматироватьДобавитьСвойство(СвойстваПоляВвода, ЭлементДанных.НаборСвойств, "КнопкаОчистки", "Х");
	ФорматироватьДобавитьСвойство(СвойстваПоляВвода, ЭлементДанных.НаборСвойств, "КнопкаОткрытия", "О");
	ФорматироватьДобавитьСвойство(СвойстваПоляВвода, ЭлементДанных.НаборСвойств, "КнопкаРегулирования", "Д");
	
	Если НЕ ПустаяСтрока(СвойстваПоляВвода) Тогда
		Результат = Результат + "__" + СвойстваПоляВвода;
	КонецЕсли;
	
	Результат = Результат + ФорматироватьНаборСвойств(ЭлементДанных.НаборСвойств, ИсключаемыеСвойства);
	
	Результат = ФорматироватьГоризонтальноеПоложение(
		Результат, 
		ЭлементДанных.НаборСвойств.ГоризонтальноеПоложение, 
		ПараметрыВыполнения.Длина);
	
	ФорматированиеУстановитьРезультат(ЭлементДанных, Результат);	

	Если ЭлементДанных.НаборСвойств.Свойство("МногострочныйРежим") 
		И Булево(ЭлементДанных.НаборСвойств.Свойство("МногострочныйРежим")) Тогда
		
		СтрМногострочный = СтрПовторитьСимвол(" ", ДлинаЗаголовка) +  СтрПовторитьСимвол("_", ДлинаЗначения);
		Для СчСтрок = 2 По Число(ЭлементДанных.НаборСвойств.Высота) Цикл   
			ФорматированиеДобавитьРезультат(ЭлементДанных, СтрМногострочный);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьНадпись(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "Надпись" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;
	
	ИсключаемыеСвойства = СтрРазделить(
		"ГоризонтальноеПоложение
		|Заголовок", Символы.ПС);
	
	Результат = ЭлементДанных.НаборСвойств.Заголовок;
	
	Результат = Результат + ФорматироватьНаборСвойств(ЭлементДанных.НаборСвойств, ИсключаемыеСвойства);
	
	Результат = ФорматироватьГоризонтальноеПоложение(
		Результат, 
		ЭлементДанных.НаборСвойств.ГоризонтальноеПоложение, 
		ПараметрыВыполнения.Длина);
	
	ФорматированиеУстановитьРезультат(ЭлементДанных, Результат);	
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьФлажок(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "Флажок" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;
	
	ИсключаемыеСвойства = СтрРазделить(
		"Заголовок
		|ГоризонтальноеПоложение
		|ПоложениеЗаголовка", Символы.ПС);
	
	Результат = ЭлементДанных.НаборСвойств.Заголовок;
	
	Результат = ПолучитьСтрокуФлажок(
		Результат, 
		Истина, 
		ЭлементДанных.Значение, 
		ЭлементДанных.НаборСвойств.ПоложениеЗаголовка);
	
	Результат = Результат + ФорматироватьНаборСвойств(ЭлементДанных.НаборСвойств, ИсключаемыеСвойства);
	
	Результат = ФорматироватьГоризонтальноеПоложение(
		Результат, 
		ЭлементДанных.НаборСвойств.ГоризонтальноеПоложение, 
		ПараметрыВыполнения.Длина);
	
	ФорматированиеУстановитьРезультат(ЭлементДанных, Результат);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьКоманднуюПанель(ПараметрыВыполнения, ЭлементДанных, Выполнена)
	Если НЕ ЭлементДанных.Тип = "КоманднаяПанель" Тогда
		Возврат;
	КонецЕсли;
	Выполнена = Истина;
	
	ИсключаемыеСвойства = СтрРазделить(
		"ГоризонтальноеПоложение", Символы.ПС);
	
	ЕстьМеню = Ложь;
	
	Кнопки = ПолучитьСписокКнопокБезГрупп(ЭлементДанных);
	
	НаборКнопок = ФорматироватьПолучитьКнопкиКоманднойПанели(ПараметрыВыполнения, Кнопки, ЕстьМеню);
	
	СтрКнопки = СтрСоединить(
		НаборКнопок, 
		" " +  Лексема("КоманднаяПанельРазделительКнопок") + " ");

	Результат = Лексема("КоманднаяПанельНачало") 
		+ " " 
		+ СтрКнопки
		+ " "; 
	
	Если НЕ ЕстьМеню Тогда
		Результат = Результат + Лексема("КоманднаяПанельКонец"); 
	
		Результат = Результат + ФорматироватьНаборСвойств(ЭлементДанных.НаборСвойств, ИсключаемыеСвойства);
		
		Результат = ФорматироватьГоризонтальноеПоложение(
			Результат, 
			ЭлементДанных.НаборСвойств.ГоризонтальноеПоложение, 
			ПараметрыВыполнения.Длина);
		
		ФорматированиеУстановитьРезультат(ЭлементДанных, Результат);	
		
		Возврат;
	КонецЕсли;
	
	ПараметрыФорматированияГоризонтальногоПоложения = ФорматироватьГоризонтальноеПоложениеПодготовка(
		Результат, 
		ЭлементДанных.НаборСвойств.ГоризонтальноеПоложение, 
		ПараметрыВыполнения.Длина);
		
	Результат = 
		ПараметрыФорматированияГоризонтальногоПоложения.Слева 
		+ ПараметрыФорматированияГоризонтальногоПоложения.Строка;
		
	ФорматированиеУстановитьРезультат(ЭлементДанных, Результат);	
	
	Для Каждого Кнопка Из Кнопки Цикл
		Если Кнопка.Тип <> "Меню" Тогда
			Продолжить;
		КонецЕсли;	
		
		ФорматироватьМеню(
			ПараметрыВыполнения, 
			ЭлементДанных, 
			Кнопка, 
			0);
	КонецЦикла;
	
	ТекстКонецЭлемента = 
		" " 
		+ Лексема("КоманднаяПанельКонец") 
		+ ПараметрыФорматированияГоризонтальногоПоложения.Справа;
	ФорматированиеДобавитьРезультат(ЭлементДанных, ТекстКонецЭлемента, Истина);	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСписокКнопокБезГрупп(Родитель)
	Результат = Новый Массив;
	Для Каждого Кнопка Из Родитель.Элементы Цикл
		Если Кнопка.Тип <> "ГруппаКнопок" Тогда
			Результат.Добавить(Кнопка);
			Продолжить;
		КонецЕсли;
			
		НаборКнопок = ПолучитьСписокКнопокБезГрупп(Кнопка);
		
		Если Результат.Количество() > 0 Тогда
			Результат.Добавить(Кнопка);
		КонецЕсли; 
		
		Для Каждого ДобавляемаяКнопка Из НаборКнопок Цикл
			Результат.Добавить(ДобавляемаяКнопка);
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ФорматироватьПолучитьКнопкиКоманднойПанели(ПараметрыВыполнения, Кнопки, ЕстьМеню)
	НаборКнопок = Новый Массив;
	Для Каждого Кнопка Из Кнопки Цикл
		Если Кнопка.Тип = "ГруппаКнопок" Тогда
			НаборКнопок.Добавить(" "+ Лексема("КоманднаяПанельРазделительМеню"));
			Продолжить;
		КонецЕсли;
		
		Если Кнопка.Тип = "Меню" Тогда
			ЕстьМеню = Истина;
		КонецЕсли;
		
		ПараметрыВыполненияКнопка = НовыеПараметрыФорматирования(ПараметрыВыполнения.РасчетДлины, ПараметрыВыполнения.Длина);
		ФорматироватьКнопкуКоманднойПанели(ПараметрыВыполненияКнопка, Кнопка);
		
		НаборКнопок.Добавить(Кнопка.Формат.Результат[0]);
	КонецЦикла;
	
	Возврат НаборКнопок;
КонецФункции

&НаКлиенте
Процедура ФорматироватьМеню(
		ПараметрыВыполнения, 
		ТекКоманднаяПанель, 
		ЭлементДанных, 
		Уровень)
		
	Если ЭлементДанных.Тип = "ГруппаКнопок" Тогда
		Результат = Лексема("КоманднаяПанельРазделительМеню");
	Иначе
		ЭтоМеню = (Уровень = 0);	
		Результат = ПолучитьФорматированноеОписаниеКнопки(ЭлементДанных, ЭтоМеню);
	КонецЕсли;

	Результат = ПолучитьОписаниеСУровнем(Результат, Уровень);
	
	ФорматированиеДобавитьРезультат(ТекКоманднаяПанель, Результат);	
	
	Если ЭлементДанных.Тип = "Меню" Тогда
		ФорматироватьЭлементыМеню(ПараметрыВыполнения, ТекКоманднаяПанель, Уровень + 1, ЭлементДанных);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьОписаниеСУровнем(Результат, Уровень)
	Если Уровень = 0 Тогда
		Возврат Результат;
	КонецЕсли;	
	
	Возврат
		СтрПовторитьСимвол(Лексема("Уровень"), Уровень) 
		+ " " 
		+ Результат;
КонецФункции

&НаКлиенте
Процедура ФорматироватьЭлементыМеню(ПараметрыВыполнения, ТекКоманднаяПанель, Уровень, Меню)
	ЭлементыБезГрупп = ПолучитьСписокКнопокБезГрупп(Меню);
	Для Каждого Подменю Из ЭлементыБезГрупп Цикл
		ФорматироватьМеню(
			ПараметрыВыполнения, 
			ТекКоманднаяПанель, 
			Подменю, 
			Уровень);
	КонецЦикла;	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьФорматированноеОписаниеКнопки(ЭлементДанных, ЭтоМеню = Ложь)
	
	ТекстКартинка = Неопределено;
	ТекстЗаголовок = ЭлементДанных.НаборСвойств.Заголовок;
	
	Если ЭлементДанных.Картинка <> Неопределено Тогда
		ТекстКартинка = "@" + ЭлементДанных.Картинка;
	КонецЕсли;

	Если ЭтоМеню И НЕ ПустаяСтрока(ТекстЗаголовок) Тогда
		ТекстКартинка = Неопределено;
	КонецЕсли;
	
	Если ТекстКартинка = Неопределено Тогда
		Возврат ТекстЗаголовок;
	КонецЕсли;
	
	Если ЭлементДанных.НаборСвойств.ПоложениеКартинки = "Лево" Тогда
		Возврат ТекстКартинка + " " + ТекстЗаголовок;
	КонецЕсли;
	
	Возврат ТекстЗаголовок  + " " + ТекстКартинка;
КонецФункции

&НаКлиенте
Процедура ФорматироватьКнопкуКоманднойПанели(ПараметрыВыполнения, ЭлементДанных)
	ИсключаемыеСвойства = СтрРазделить(
		"ПоложениеКартинки
		|Заголовок", Символы.ПС);
	
	Результат = ПолучитьФорматированноеОписаниеКнопки(ЭлементДанных);
	
	Результат = Результат + ФорматироватьНаборСвойств(ЭлементДанных.НаборСвойств, ИсключаемыеСвойства);
	
	ФорматированиеУстановитьРезультат(ЭлементДанных, Результат);	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтрокуФлажок(Строка, ЕстьФлажок, ЗначениеФлажка, ПоложениеЗаголовка)
	Если НЕ ЕстьФлажок Тогда
		Возврат Строка;
	КонецЕсли;
	
	Значение = " ";
	Если ЗначениеФлажка Тогда
		Значение = "X";
	КонецЕсли;
	Значение = "[" + Значение + "]";
	
	Если ПустаяСтрока(Строка) Тогда
		Возврат Значение;
	КонецЕсли;
	
	Если ПоложениеЗаголовка = "Право" Тогда
		Возврат Значение + " " + Строка;
	КонецЕсли;
	Возврат Строка + " " + Значение;
КонецФункции

&НаКлиенте
Процедура ФорматироватьДобавитьСвойство(Строка, Свойства, ИмяСвойство, Значение)   
	Если НЕ Свойства.Свойство(ИмяСвойство) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ Свойства[ИмяСвойство] Тогда
		Возврат;
	КонецЕсли;
	Строка = Строка + Значение;
КонецПроцедуры

&НаКлиенте
Функция ФорматироватьНаборСвойств(Свойства, ИсключаемыеСвойства)
	МассивРезультат = Новый Массив;
	Для Каждого КлючЗначение Из Свойства Цикл 
		Если ИсключаемыеСвойства.Найти(КлючЗначение.Ключ) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		СтрокаСвойство = СтрШаблон("%1 = %2", КлючЗначение.Ключ, КлючЗначение.Значение);
		МассивРезультат.Добавить(СтрокаСвойство);
	КонецЦикла;  
	
	Если МассивРезультат.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат " {" + СтрСоединить(МассивРезультат,"; ") + "}";
КонецФункции

&НаКлиенте
Функция СоединитьСтрокиГоризонтально(
	НаборыСтрок, 
	Символ, 
	СимволПерваяСтрока = Неопределено, 
	ДобавитьВНачалоКонец = Ложь)

	Результат = Новый Массив;
	СчСтроки = 0;
	Пока Истина Цикл
		МассивСтрок = Новый Массив;
		ДобавленаСтрока = Ложь;
		Для Каждого Набор Из НаборыСтрок Цикл
			Если СчСтроки > Набор.ВГраница() Тогда
				МассивСтрок.Добавить("");
				Продолжить;
			КонецЕсли;
			МассивСтрок.Добавить(Набор[СчСтроки]);
			ДобавленаСтрока = Истина;
		КонецЦикла;    
		
		Если НЕ ДобавленаСтрока Тогда
			Прервать;
		КонецЕсли;
		
		ТекСимвол = Символ;
		Если СчСтроки = 0 И СимволПерваяСтрока <> Неопределено Тогда
			ТекСимвол = СимволПерваяСтрока;
		КонецЕсли;

        СтрРезультат = СтрСоединить(МассивСтрок, ТекСимвол);
		Если ДобавитьВНачалоКонец Тогда
			СтрРезультат  = ТекСимвол + СтрРезультат + ТекСимвол;
		КонецЕсли; 
		
		Результат.Добавить(СтрРезультат);
		СчСтроки = СчСтроки + 1;
	КонецЦикла;     

	Возврат Результат;
КонецФункции

&НаКлиенте
Функция СтрПовторитьСимвол(Символ, Количество)
	Если Количество <= 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Результат = "";
	Для Сч = 1 По Количество Цикл
		Результат = Результат + Символ;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ВыровнитьСтроку(Знач Строка, ГоризонтальноеВыравнивание, Длина)
	КоличествоСимволовКДобавлению = Длина - СтрДлина(Строка);
	Если КоличествоСимволовКДобавлению <= 0 Тогда
		Возврат Строка;
	КонецЕсли;
	
	Если ГоризонтальноеВыравнивание = "Лево" Тогда
		Возврат Строка + СтрПовторитьСимвол(" ", КоличествоСимволовКДобавлению);
	КонецЕсли;
	
	Если ГоризонтальноеВыравнивание = "Право" Тогда
		Возврат СтрПовторитьСимвол(" ", КоличествоСимволовКДобавлению) + Строка;
	КонецЕсли;

	КоличествоСимволовКДобавлениюСлева = Цел(КоличествоСимволовКДобавлению / 2);
	КоличествоСимволовКДобавлениюСправа = КоличествоСимволовКДобавлению - КоличествоСимволовКДобавлениюСлева;
	
	Возврат СтрПовторитьСимвол(
		" ", 
		КоличествоСимволовКДобавлениюСлева) + Строка + СтрПовторитьСимвол(" ", КоличествоСимволовКДобавлениюСправа);
КонецФункции

&НаКлиенте
Процедура ФорматированиеУстановитьРезультат(ЭлементДанных, Результат)
	ФорматированиеДобавитьРезультат(ЭлементДанных, Результат);
КонецПроцедуры

&НаКлиенте
Процедура ФорматированиеЗаменитьРезультат(ЭлементДанных, Результат, Индекс)
	
КонецПроцедуры

&НаКлиенте
Процедура ФорматированиеДобавитьРезультат(ЭлементДанных, Результат, ДобавитьВПоследнююСтроку = Ложь)
	Если ДобавитьВПоследнююСтроку Тогда
		НаборСтрок = ЭлементДанных.Формат.Результат;
		Индекс = НаборСтрок.ВГраница();
		ПоследняяСтрока = НаборСтрок[Индекс];
		НаборСтрок[Индекс] = ПоследняяСтрока + Результат; 
		ЭлементДанных.Формат.Длина = Макс(ЭлементДанных.Формат.Длина, СтрДлина(НаборСтрок[Индекс]));
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Результат) = Тип("Массив") Тогда
		Для Каждого ЭлементРезультат Из Результат Цикл
			ЭлементДанных.Формат.Результат.Добавить(ЭлементРезультат);
			ЭлементДанных.Формат.Длина = Макс(ЭлементДанных.Формат.Длина, СтрДлина(ЭлементРезультат));
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	ЭлементДанных.Формат.Результат.Добавить(Результат);
	ЭлементДанных.Формат.Длина = Макс(ЭлементДанных.Формат.Длина, СтрДлина(Результат));
КонецПроцедуры

&НаКлиенте
Функция ФорматироватьГоризонтальноеПоложениеПодготовка(Строка, ГоризонтальноеПоложение, Длина)
	Результат = Новый Структура("Слева,Справа,Строка", "", "" ,"");
	СимволСлева = "";
	СимволСправа = "";
	Если ГоризонтальноеПоложение = "Право" Тогда
		СимволСлева = "-> ";
	КонецЕсли;
	
	Если ГоризонтальноеПоложение = "Центр" Тогда
		СимволСлева = "-> ";
		СимволСправа = " <-";
	КонецЕсли;
	
	Результат.Слева = СимволСлева;
	Результат.Справа = СимволСправа;
	Результат.Строка = ВыровнитьСтроку(Строка, ГоризонтальноеПоложение, Длина - СтрДлина(СимволСлева) - СтрДлина(СимволСправа));
	
	Возврат Результат;

КонецФункции

&НаКлиенте
Функция ФорматироватьГоризонтальноеПоложение(Строка, ГоризонтальноеПоложение, Длина)
	Результат = ФорматироватьГоризонтальноеПоложениеПодготовка(Строка, ГоризонтальноеПоложение, Длина);	
	Возврат Результат.Слева 
	    + Результат.Строка
		+ Результат.Справа;
КонецФункции

#КонецОбласти    